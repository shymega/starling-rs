/*
 * Starling Bank API
 *
 * OpenAPI specification for the Starling Bank Public API.  For more information visit: https://developer.starlingbank.com/docs
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * Generated by: https://openapi-generator.tech
 */

/// OnboardingAddress : Address submitted when onboarding

#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct OnboardingAddress {
    /// First line
    #[serde(rename = "line1")]
    pub line1: String,
    /// Second line
    #[serde(rename = "line2", skip_serializing_if = "Option::is_none")]
    pub line2: Option<String>,
    /// Third line
    #[serde(rename = "line3", skip_serializing_if = "Option::is_none")]
    pub line3: Option<String>,
    /// PAF field of same name
    #[serde(
        rename = "subBuildingName",
        skip_serializing_if = "Option::is_none"
    )]
    pub sub_building_name: Option<String>,
    /// PAF field of same name
    #[serde(
        rename = "buildingName",
        skip_serializing_if = "Option::is_none"
    )]
    pub building_name: Option<String>,
    /// PAF field of same name
    #[serde(
        rename = "buildingNumber",
        skip_serializing_if = "Option::is_none"
    )]
    pub building_number: Option<String>,
    /// PAF field of same name
    #[serde(
        rename = "thoroughfare",
        skip_serializing_if = "Option::is_none"
    )]
    pub thoroughfare: Option<String>,
    /// PAF field of same name
    #[serde(
        rename = "dependantLocality",
        skip_serializing_if = "Option::is_none"
    )]
    pub dependant_locality: Option<String>,
    /// Post town
    #[serde(rename = "postTown")]
    pub post_town: String,
    /// Post code
    #[serde(rename = "postCode")]
    pub post_code: String,
    /// Country code in ISO 3166-1 alpha-2. NB GB is the official country code for the UK. UK is not the officially assigned code, and so is not valid
    #[serde(rename = "countryCode")]
    pub country_code: String,
    /// The udprn of the property.
    #[serde(rename = "udprn", skip_serializing_if = "Option::is_none")]
    pub udprn: Option<String>,
    /// The umprn of the property
    #[serde(rename = "umprn", skip_serializing_if = "Option::is_none")]
    pub umprn: Option<String>,
    /// Date the account holder's residency at this address started
    #[serde(rename = "from")]
    pub from: String,
    /// Date the account holder's residency at this address completed
    #[serde(rename = "to", skip_serializing_if = "Option::is_none")]
    pub to: Option<String>,
}

impl OnboardingAddress {
    /// Address submitted when onboarding
    pub fn new(
        line1: String,
        post_town: String,
        post_code: String,
        country_code: String,
        from: String,
    ) -> OnboardingAddress {
        OnboardingAddress {
            line1,
            line2: None,
            line3: None,
            sub_building_name: None,
            building_name: None,
            building_number: None,
            thoroughfare: None,
            dependant_locality: None,
            post_town,
            post_code,
            country_code,
            udprn: None,
            umprn: None,
            from,
            to: None,
        }
    }
}
