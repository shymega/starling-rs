/*
 * Starling Bank API
 *
 * OpenAPI specification for the Starling Bank Public API.  For more information visit: https://developer.starlingbank.com/docs
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * Generated by: https://openapi-generator.tech
 */

/// ScheduledSavingsPaymentV2 : A transfer into a savings goal that can happen once in the future or have multiple payments with same frequency

#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct ScheduledSavingsPaymentV2 {
    /// Unique identifier of the transfer
    #[serde(rename = "transferUid")]
    pub transfer_uid: String,
    #[serde(rename = "recurrenceRule")]
    pub recurrence_rule: Box<crate::models::RecurrenceRuleV2>,
    #[serde(rename = "currencyAndAmount")]
    pub currency_and_amount: Box<crate::models::CurrencyAndAmount>,
    /// The next date the payment will be made on
    #[serde(rename = "nextPaymentDate")]
    pub next_payment_date: String,
}

impl ScheduledSavingsPaymentV2 {
    /// A transfer into a savings goal that can happen once in the future or have multiple payments with same frequency
    pub fn new(
        transfer_uid: String,
        recurrence_rule: crate::models::RecurrenceRuleV2,
        currency_and_amount: crate::models::CurrencyAndAmount,
        next_payment_date: String,
    ) -> ScheduledSavingsPaymentV2 {
        ScheduledSavingsPaymentV2 {
            transfer_uid,
            recurrence_rule: Box::new(recurrence_rule),
            currency_and_amount: Box::new(currency_and_amount),
            next_payment_date,
        }
    }
}
