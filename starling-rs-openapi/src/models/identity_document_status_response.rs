/*
 * Starling Bank API
 *
 * OpenAPI specification for the Starling Bank Public API.  For more information visit: https://developer.starlingbank.com/docs
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * Generated by: https://openapi-generator.tech
 */

/// IdentityDocumentStatusResponse : Response representing the overall status of the identity document checks

#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct IdentityDocumentStatusResponse {
    #[serde(
        rename = "documentPredictionStatus",
        skip_serializing_if = "Option::is_none"
    )]
    pub document_prediction_status: Option<DocumentPredictionStatus>,
    #[serde(
        rename = "modelDocumentDecision",
        skip_serializing_if = "Option::is_none"
    )]
    pub model_document_decision:
        Option<Box<crate::models::IdentityModelDocumentDecision>>,
    /// Outcome of the model prediction process
    #[serde(
        rename = "modelPredictionStatus",
        skip_serializing_if = "Option::is_none"
    )]
    pub model_prediction_status: Option<ModelPredictionStatus>,
}

impl IdentityDocumentStatusResponse {
    /// Response representing the overall status of the identity document checks
    pub fn new() -> IdentityDocumentStatusResponse {
        IdentityDocumentStatusResponse {
            document_prediction_status: None,
            model_document_decision: None,
            model_prediction_status: None,
        }
    }
}

///
#[derive(
    Clone,
    Copy,
    Debug,
    Eq,
    PartialEq,
    Ord,
    PartialOrd,
    Hash,
    Serialize,
    Deserialize,
)]
pub enum DocumentPredictionStatus {
    #[serde(rename = "SUCCESS")]
    SUCCESS,
    #[serde(rename = "AWAITING_PREDICTION")]
    AWAITINGPREDICTION,
    #[serde(rename = "FAILURE")]
    FAILURE,
}

impl Default for DocumentPredictionStatus {
    fn default() -> DocumentPredictionStatus {
        Self::SUCCESS
    }
}
/// Outcome of the model prediction process
#[derive(
    Clone,
    Copy,
    Debug,
    Eq,
    PartialEq,
    Ord,
    PartialOrd,
    Hash,
    Serialize,
    Deserialize,
)]
pub enum ModelPredictionStatus {
    #[serde(rename = "SUCCESS")]
    SUCCESS,
    #[serde(rename = "AWAITING_PREDICTION")]
    AWAITINGPREDICTION,
    #[serde(rename = "FAILURE")]
    FAILURE,
}

impl Default for ModelPredictionStatus {
    fn default() -> ModelPredictionStatus {
        Self::SUCCESS
    }
}
