/*
 * Starling Bank API
 *
 * OpenAPI specification for the Starling Bank Public API.  For more information visit: https://developer.starlingbank.com/docs
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * Generated by: https://openapi-generator.tech
 */

/// DirectDebitMandateV2 : Single mandate

#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct DirectDebitMandateV2 {
    #[serde(rename = "uid", skip_serializing_if = "Option::is_none")]
    pub uid: Option<String>,
    #[serde(
        rename = "reference",
        skip_serializing_if = "Option::is_none"
    )]
    pub reference: Option<String>,
    #[serde(
        rename = "status",
        skip_serializing_if = "Option::is_none"
    )]
    pub status: Option<Status>,
    #[serde(
        rename = "source",
        skip_serializing_if = "Option::is_none"
    )]
    pub source: Option<Source>,
    #[serde(
        rename = "created",
        skip_serializing_if = "Option::is_none"
    )]
    pub created: Option<String>,
    #[serde(
        rename = "cancelled",
        skip_serializing_if = "Option::is_none"
    )]
    pub cancelled: Option<String>,
    #[serde(
        rename = "nextDate",
        skip_serializing_if = "Option::is_none"
    )]
    pub next_date: Option<String>,
    #[serde(
        rename = "lastDate",
        skip_serializing_if = "Option::is_none"
    )]
    pub last_date: Option<String>,
    #[serde(
        rename = "originatorName",
        skip_serializing_if = "Option::is_none"
    )]
    pub originator_name: Option<String>,
    #[serde(
        rename = "originatorUid",
        skip_serializing_if = "Option::is_none"
    )]
    pub originator_uid: Option<String>,
    #[serde(
        rename = "merchantUid",
        skip_serializing_if = "Option::is_none"
    )]
    pub merchant_uid: Option<String>,
    #[serde(
        rename = "lastPayment",
        skip_serializing_if = "Option::is_none"
    )]
    pub last_payment: Option<Box<crate::models::LastPayment>>,
    #[serde(
        rename = "accountUid",
        skip_serializing_if = "Option::is_none"
    )]
    pub account_uid: Option<String>,
    #[serde(
        rename = "categoryUid",
        skip_serializing_if = "Option::is_none"
    )]
    pub category_uid: Option<String>,
}

impl DirectDebitMandateV2 {
    /// Single mandate
    pub fn new() -> DirectDebitMandateV2 {
        DirectDebitMandateV2 {
            uid: None,
            reference: None,
            status: None,
            source: None,
            created: None,
            cancelled: None,
            next_date: None,
            last_date: None,
            originator_name: None,
            originator_uid: None,
            merchant_uid: None,
            last_payment: None,
            account_uid: None,
            category_uid: None,
        }
    }
}

///
#[derive(
    Clone,
    Copy,
    Debug,
    Eq,
    PartialEq,
    Ord,
    PartialOrd,
    Hash,
    Serialize,
    Deserialize,
)]
pub enum Status {
    #[serde(rename = "CANCELLED")]
    CANCELLED,
    #[serde(rename = "LIVE")]
    LIVE,
    #[serde(rename = "PENDING_CAS")]
    PENDINGCAS,
}

impl Default for Status {
    fn default() -> Status {
        Self::CANCELLED
    }
}
///
#[derive(
    Clone,
    Copy,
    Debug,
    Eq,
    PartialEq,
    Ord,
    PartialOrd,
    Hash,
    Serialize,
    Deserialize,
)]
pub enum Source {
    #[serde(rename = "ELECTRONIC")]
    ELECTRONIC,
    #[serde(rename = "PAPER")]
    PAPER,
}

impl Default for Source {
    fn default() -> Source {
        Self::ELECTRONIC
    }
}
