/*
 * Starling Bank API
 *
 * OpenAPI specification for the Starling Bank Public API.  For more information visit: https://developer.starlingbank.com/docs
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * Generated by: https://openapi-generator.tech
 */

/// CreatePersonNameChangeRequest : Request to update an account holder's name

#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct CreatePersonNameChangeRequest {
    /// External identifier for the request
    #[serde(rename = "externalIdentifier")]
    pub external_identifier: String,
    /// Account holder's title
    #[serde(rename = "title")]
    pub title: Title,
    /// Account holder's first name
    #[serde(rename = "firstName")]
    pub first_name: String,
    /// Account holder's middle name
    #[serde(
        rename = "middleName",
        skip_serializing_if = "Option::is_none"
    )]
    pub middle_name: Option<String>,
    /// Account holder's last name
    #[serde(rename = "lastName")]
    pub last_name: String,
}

impl CreatePersonNameChangeRequest {
    /// Request to update an account holder's name
    pub fn new(
        external_identifier: String,
        title: Title,
        first_name: String,
        last_name: String,
    ) -> CreatePersonNameChangeRequest {
        CreatePersonNameChangeRequest {
            external_identifier,
            title,
            first_name,
            middle_name: None,
            last_name,
        }
    }
}

/// Account holder's title
#[derive(
    Clone,
    Copy,
    Debug,
    Eq,
    PartialEq,
    Ord,
    PartialOrd,
    Hash,
    Serialize,
    Deserialize,
)]
pub enum Title {
    #[serde(rename = "MRS, MISS, MS, LADY, MR, SIR")]
    MRSMISSMSLADYMRSIR,
}

impl Default for Title {
    fn default() -> Title {
        Self::MRSMISSMSLADYMRSIR
    }
}
