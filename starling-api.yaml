openapi: 3.0.1
info:
  title: Starling Bank API
  description: |-
    OpenAPI specification for the Starling Bank Public API.

    For more information visit: https://developer.starlingbank.com/docs
  version: 1.0.0
servers:
- url: /
paths:
  /api/v2/accounts/{accountUid}/statement/available-periods:
    get:
      tags:
      - Accounts
      summary: Get list of statement periods which are available for an account
      operationId: availablePeriods
      parameters:
      - name: accountUid
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountStatementPeriods'
        "4xx":
          description: "Client error. See [API status codes](#api-status-codes-1)\
            \ for more details."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "5xx":
          description: "Server error. See [API status codes](#api-status-codes-1)\
            \ for more details."
      security:
      - oauth2:
        - statement-csv:read
        - statement-pdf:read
  /api/v2/accounts/{accountUid}/statement/download:
    get:
      tags:
      - Accounts
      summary: Download a statement for a given statement period
      description: "To choose a file format, set the Accept header to either 'application/pdf'\
        \ or 'text/csv'"
      operationId: downloadPDFStatement
      parameters:
      - name: accountUid
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa
      - name: yearMonth
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: 2023-04
      responses:
        "200":
          description: Successful operation
          content:
            text/csv:
              schema:
                type: string
                format: binary
                example: !!binary |-
                  RGF0ZSxDb3VudGVyIFBhcnR5LFJlZmVyZW5jZSxUeXBlLEFtb3VudCAoR0JQKSxCYWxhbmNlIChH
                  QlApLFNwZW5kaW5nIENhdGVnb3J5CjAxLzAzLzIwMjAsU3RhcmxpbmcgQmFuayxGZWJydWFyeSBJ
                  bnRlcmVzdCBFYXJuZWQsREVQT1NJVCBJTlRFUkVTVCwxLjIzLDc2NS4zMyxJTkNPTUUKMDIvMDMv
                  MjAyMCxTdGFnZWNvYWNoLFNUR0NPQUNIL0NUWUxJTksgICAgICAgQlVTIFRJQ0tFVCAgICBHQlIs
                  R09PR0xFIFBBWSwtNC4zMCw3NjEuMDMsVFJBTlNQT1JU
            application/pdf:
              schema:
                type: string
                format: binary
        "4xx":
          description: "Client error. See [API status codes](#api-status-codes-1)\
            \ for more details."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "5xx":
          description: "Server error. See [API status codes](#api-status-codes-1)\
            \ for more details."
      security:
      - oauth2:
        - statement-pdf:read
  /api/v2/accounts/{accountUid}/statement/downloadForDateRange:
    get:
      tags:
      - Accounts
      summary: Download a statement for a given date range
      description: "To choose a file format, set the Accept header to either 'application/pdf'\
        \ or 'text/csv'"
      operationId: downloadPDFStatementForDateRange
      parameters:
      - name: accountUid
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa
      - name: start
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: date
          example: 2023-04-05
      - name: end
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date
          example: 2023-04-05
      responses:
        "200":
          description: Successful operation
          content:
            text/csv:
              schema:
                type: string
                format: binary
                example: !!binary |-
                  RGF0ZSxDb3VudGVyIFBhcnR5LFJlZmVyZW5jZSxUeXBlLEFtb3VudCAoR0JQKSxCYWxhbmNlIChH
                  QlApLFNwZW5kaW5nIENhdGVnb3J5CjAxLzAzLzIwMjAsU3RhcmxpbmcgQmFuayxGZWJydWFyeSBJ
                  bnRlcmVzdCBFYXJuZWQsREVQT1NJVCBJTlRFUkVTVCwxLjIzLDc2NS4zMyxJTkNPTUUKMDIvMDMv
                  MjAyMCxTdGFnZWNvYWNoLFNUR0NPQUNIL0NUWUxJTksgICAgICAgQlVTIFRJQ0tFVCAgICBHQlIs
                  R09PR0xFIFBBWSwtNC4zMCw3NjEuMDMsVFJBTlNQT1JU
            application/pdf:
              schema:
                type: string
                format: binary
        "4xx":
          description: "Client error. See [API status codes](#api-status-codes-1)\
            \ for more details."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "5xx":
          description: "Server error. See [API status codes](#api-status-codes-1)\
            \ for more details."
      security:
      - oauth2:
        - statement-pdf:read
  /api/v2/accounts/{accountUid}/balance:
    get:
      tags:
      - Accounts
      summary: Get an account's balance
      description: |-
        The account balance is expressed in two ways: cleared balance and effective balance.
        * The **cleared balance** is the balance of settled transactions and so does not include pending transactions. The cleared end of day balance is used to calculate interest.
        * The **effective balance** is the balance of settled and pending outgoing transactions. This is the balance most commonly presented to the account holder (e.g. in-app).

        `clearedBalance` and `effectiveBalance` hold the values for the main account only, excluding balances in spaces, savings goals etc. `totalClearedBalance` and `totalEffectiveBalance` hold the corresponding values totalled across the main account and all spaces, savings goals etc.

        Many payment types settle almost instantly (e.g. faster payments). Card transactions usually take a few days to settle and will remain pending for this time. We've got a blog post on [how card transactions work](https://www.starlingbank.com/blog/card-transactions-explained/).

        To check whether the account has enough money to make a payment, use the confirmation of funds endpoint instead.
      operationId: getAccountBalance
      parameters:
      - name: accountUid
        in: path
        description: Account uid
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BalanceV2'
        "4xx":
          description: "Client error. See [API status codes](#api-status-codes-1)\
            \ for more details."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "5xx":
          description: "Server error. See [API status codes](#api-status-codes-1)\
            \ for more details."
      security:
      - oauth2:
        - balance:read
  /api/v2/accounts/{accountUid}/identifiers:
    get:
      tags:
      - Accounts
      summary: Get an account's bank identifiers
      description: |-
        Identifiers come in pairs:

        * A bank identifier, which identifies the bank
        * An account identifier, which identifiers the account at the bank

        Identifiers can be:
        * Sort code and account number for domestic UK payments
        * BIC and IBAN for international payments
        * ABA and ACH routing numbers for domestic US payments
      operationId: getAccountIdentifiers
      parameters:
      - name: accountUid
        in: path
        description: Account uid
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountIdentifiers'
        "4xx":
          description: "Client error. See [API status codes](#api-status-codes-1)\
            \ for more details."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "5xx":
          description: "Server error. See [API status codes](#api-status-codes-1)\
            \ for more details."
      security:
      - oauth2:
        - account-identifier:read
  /api/v2/accounts:
    get:
      tags:
      - Accounts
      summary: Get the accounts associated with an account holder
      description: |-
        This endpoint returns a list of the accounts that you can access using the access token you supplied in the request header.

        Each access token is associated with a single account holder, who may have more than one account (for example, a GBP account and a euro account). This endpoint returns all the accounts that the account holder has given you permission to access.

        Note that an account holder in this context is either a personal account holder, or a sole trader account holder, or a business account holder or a joint account holder. An individual person may be more than one of these kinds of account holder, but each kind of account holder is a separate entity and hence requires a separate access token and permission.

        Categories are subdivisions of an account.
        The default category holds the main balance and transactions. Savings goals and spending spaces are examples of other categories. You can use [`/api/v2/accounts`](#operations-tag-Accounts) to get the default category UID for an account.
      operationId: getAccounts
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Accounts'
        "4xx":
          description: "Client error. See [API status codes](#api-status-codes-1)\
            \ for more details."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "5xx":
          description: "Server error. See [API status codes](#api-status-codes-1)\
            \ for more details."
      security:
      - oauth2:
        - account:read
        - account-list:read
  /api/v2/accounts/{accountUid}/confirmation-of-funds:
    get:
      tags:
      - Accounts
      summary: Get whether there are available funds for a requested amount
      operationId: getConfirmationOfFunds
      parameters:
      - name: accountUid
        in: path
        description: Account uid
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa
      - name: targetAmountInMinorUnits
        in: query
        description: Target amount in minor units
        required: true
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: int64
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfirmationOfFundsResponse'
        "4xx":
          description: "Client error. See [API status codes](#api-status-codes-1)\
            \ for more details."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "5xx":
          description: "Server error. See [API status codes](#api-status-codes-1)\
            \ for more details."
      security:
      - oauth2:
        - confirmation-of-funds:read
  /api/v2/account-holder/business:
    get:
      tags:
      - Businesses
      summary: Get a business account holder's details
      operationId: getBusiness
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Business'
        "4xx":
          description: "Client error. See [API status codes](#api-status-codes-1)\
            \ for more details."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "5xx":
          description: "Server error. See [API status codes](#api-status-codes-1)\
            \ for more details."
      security:
      - oauth2:
        - account:read
  /api/v2/account-holder/business/correspondence-address:
    get:
      tags:
      - Businesses
      summary: Get a company's correspondence address
      description: Will fallback to registered address if not available
      operationId: getCorrespondenceAddress
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddressV2'
        "4xx":
          description: "Client error. See [API status codes](#api-status-codes-1)\
            \ for more details."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "5xx":
          description: "Server error. See [API status codes](#api-status-codes-1)\
            \ for more details."
      security:
      - oauth2:
        - address:read
  /api/v2/account-holder/business/registered-address:
    get:
      tags:
      - Businesses
      summary: Get a company's registered address
      operationId: getRegisteredAddress
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddressV2'
        "4xx":
          description: "Client error. See [API status codes](#api-status-codes-1)\
            \ for more details."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "5xx":
          description: "Server error. See [API status codes](#api-status-codes-1)\
            \ for more details."
      security:
      - oauth2:
        - address:read
  /api/v2/account-holder/individual:
    get:
      tags:
      - Individuals and Sole Traders
      summary: Get an individual account holder's details
      operationId: getIndividual
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Individual'
        "4xx":
          description: "Client error. See [API status codes](#api-status-codes-1)\
            \ for more details."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "5xx":
          description: "Server error. See [API status codes](#api-status-codes-1)\
            \ for more details."
      security:
      - oauth2:
        - customer:read
  /api/v2/account-holder/individual/email:
    put:
      tags:
      - Individuals and Sole Traders
      summary: Update an individual account holder's email address
      operationId: updateEmail
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateEmailRequest'
        required: true
      responses:
        "200":
          description: Successful operation
        "4xx":
          description: "Client error. See [API status codes](#api-status-codes-1)\
            \ for more details."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "5xx":
          description: "Server error. See [API status codes](#api-status-codes-1)\
            \ for more details."
      security:
      - oauth2+signature:
        - email:edit
  /api/v2/account-holder/joint:
    get:
      tags:
      - Joint Accounts
      summary: Get a joint account holder's details
      operationId: getJointAccount
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JointAccount'
        "4xx":
          description: "Client error. See [API status codes](#api-status-codes-1)\
            \ for more details."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "5xx":
          description: "Server error. See [API status codes](#api-status-codes-1)\
            \ for more details."
      security:
      - oauth2:
        - customer:read
  /api/v2/account-holder/sole-trader:
    get:
      tags:
      - Sole Traders
      summary: Get sole trader business details
      operationId: getSoleTrader
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SoleTrader'
        "4xx":
          description: "Client error. See [API status codes](#api-status-codes-1)\
            \ for more details."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "5xx":
          description: "Server error. See [API status codes](#api-status-codes-1)\
            \ for more details."
      security:
      - oauth2:
        - account:read
  /api/v2/accounts/{accountUid}/spending-insights/counter-party:
    get:
      tags:
      - Spending Insights
      summary: Get the spending insights grouped by counter party
      operationId: querySpendingInsightsByCounterparty
      parameters:
      - name: accountUid
        in: path
        description: Account uid
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa
      - name: year
        in: query
        description: Year
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: "2023"
      - name: month
        in: query
        description: Month
        required: true
        style: form
        explode: true
        schema:
          type: string
          enum:
          - JANUARY
          - FEBRUARY
          - MARCH
          - APRIL
          - MAY
          - JUNE
          - JULY
          - AUGUST
          - SEPTEMBER
          - OCTOBER
          - NOVEMBER
          - DECEMBER
      - name: summaryStartPeriodInclusive
        in: query
        description: summaryStartPeriodInclusive
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: summaryEndPeriodExclusive
        in: query
        description: summaryEndPeriodExclusive
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpendingCounterPartySummary'
        "4xx":
          description: "Client error. See [API status codes](#api-status-codes-1)\
            \ for more details."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "5xx":
          description: "Server error. See [API status codes](#api-status-codes-1)\
            \ for more details."
      security:
      - oauth2:
        - transaction:read
  /api/v2/accounts/{accountUid}/spending-insights/country:
    get:
      tags:
      - Spending Insights
      summary: Get the spending insights grouped by country
      operationId: querySpendingInsightsByCountry
      parameters:
      - name: accountUid
        in: path
        description: Account uid
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa
      - name: year
        in: query
        description: Year
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: "2023"
      - name: month
        in: query
        description: Month
        required: true
        style: form
        explode: true
        schema:
          type: string
          enum:
          - JANUARY
          - FEBRUARY
          - MARCH
          - APRIL
          - MAY
          - JUNE
          - JULY
          - AUGUST
          - SEPTEMBER
          - OCTOBER
          - NOVEMBER
          - DECEMBER
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpendingCountrySummary'
        "4xx":
          description: "Client error. See [API status codes](#api-status-codes-1)\
            \ for more details."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "5xx":
          description: "Server error. See [API status codes](#api-status-codes-1)\
            \ for more details."
      security:
      - oauth2:
        - transaction:read
  /api/v2/accounts/{accountUid}/spending-insights/spending-category:
    get:
      tags:
      - Spending Insights
      summary: Get the spending insights grouped by spending category
      operationId: querySpendingInsightsBySpendingCategory
      parameters:
      - name: accountUid
        in: path
        description: Account uid
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa
      - name: year
        in: query
        description: Year
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: "2023"
      - name: month
        in: query
        description: Month
        required: true
        style: form
        explode: true
        schema:
          type: string
          enum:
          - JANUARY
          - FEBRUARY
          - MARCH
          - APRIL
          - MAY
          - JUNE
          - JULY
          - AUGUST
          - SEPTEMBER
          - OCTOBER
          - NOVEMBER
          - DECEMBER
      - name: summaryStartPeriodInclusive
        in: query
        description: summaryStartPeriodInclusive
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: summaryEndPeriodExclusive
        in: query
        description: summaryEndPeriodExclusive
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpendingCategorySummary'
        "4xx":
          description: "Client error. See [API status codes](#api-status-codes-1)\
            \ for more details."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "5xx":
          description: "Server error. See [API status codes](#api-status-codes-1)\
            \ for more details."
      security:
      - oauth2:
        - transaction:read
  /api/v2/account-holder:
    get:
      tags:
      - Account Holders
      summary: Get basic information about the account holder
      operationId: getAccountHolder
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountHolder'
        "4xx":
          description: "Client error. See [API status codes](#api-status-codes-1)\
            \ for more details."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "5xx":
          description: "Server error. See [API status codes](#api-status-codes-1)\
            \ for more details."
      security:
      - oauth2:
        - customer:read
        - account-holder-type:read
    delete:
      tags:
      - Account Holders
      summary: Delete an account holder
      description: |
        The account holder to be deleted is the account holder specified by the OAuth access token.

        To close an account holder the balance of any owned account must be zero. This is a non-reversible
        operation and should be used with caution.
      operationId: closeAccountHolder
      responses:
        "204":
          description: Successful operation
        "4xx":
          description: "Client error. See [API status codes](#api-status-codes-1)\
            \ for more details."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "5xx":
          description: "Server error. See [API status codes](#api-status-codes-1)\
            \ for more details."
      security:
      - oauth2+signature:
        - account-holder:delete
  /api/v2/account-holder/name:
    get:
      tags:
      - Account Holders
      summary: Get the name of the account holder
      operationId: getAccountHolderName
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountHolderName'
        "4xx":
          description: "Client error. See [API status codes](#api-status-codes-1)\
            \ for more details."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "5xx":
          description: "Server error. See [API status codes](#api-status-codes-1)\
            \ for more details."
      security:
      - oauth2:
        - account-holder-name:read
  /api/v2/account-holder/{accountHolderUid}/profile-image:
    get:
      tags:
      - Profile images
      summary: Get a profile image if one exists
      operationId: downloadProfileImage
      parameters:
      - name: accountHolderUid
        in: path
        description: Unique identifier of an account holder
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa
      responses:
        "200":
          description: Successful operation
          content:
            image/*:
              schema:
                type: string
                format: binary
        "4xx":
          description: "Client error. See [API status codes](#api-status-codes-1)\
            \ for more details."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "5xx":
          description: "Server error. See [API status codes](#api-status-codes-1)\
            \ for more details."
      security:
      - oauth2:
        - profile-image:read
    put:
      tags:
      - Profile images
      summary: Update a profile image if one already exists
      operationId: updateProfileImage
      parameters:
      - name: accountHolderUid
        in: path
        description: Unique identifier of an account holder
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa
      - name: Content-Type
        in: header
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: image/jpeg
      requestBody:
        description: Attachment input stream
        content:
          image/*:
            schema:
              type: object
        required: true
      responses:
        "200":
          description: Successful operation
        "4xx":
          description: "Client error. See [API status codes](#api-status-codes-1)\
            \ for more details."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "5xx":
          description: "Server error. See [API status codes](#api-status-codes-1)\
            \ for more details."
      security:
      - oauth2:
        - profile-image:edit
    delete:
      tags:
      - Profile images
      summary: Delete a profile image if one exists
      operationId: deleteProfileImage
      parameters:
      - name: accountHolderUid
        in: path
        description: Unique identifier of an account holder
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa
      responses:
        "200":
          description: Successful operation
        "4xx":
          description: "Client error. See [API status codes](#api-status-codes-1)\
            \ for more details."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "5xx":
          description: "Server error. See [API status codes](#api-status-codes-1)\
            \ for more details."
      security:
      - oauth2:
        - profile-image:edit
  /api/v2/addresses:
    get:
      tags:
      - Addresses
      summary: Get the account holder's addresses
      operationId: getAddresses
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddressesV2'
        "4xx":
          description: "Client error. See [API status codes](#api-status-codes-1)\
            \ for more details."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "5xx":
          description: "Server error. See [API status codes](#api-status-codes-1)\
            \ for more details."
      security:
      - oauth2:
        - address:read
    post:
      tags:
      - Addresses
      summary: Update the account holder's current address
      operationId: updateCurrentAddress
      requestBody:
        description: Update account holder's current address
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddressUpdateRequest'
        required: true
      responses:
        "200":
          description: Successful operation
        "4xx":
          description: "Client error. See [API status codes](#api-status-codes-1)\
            \ for more details."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "5xx":
          description: "Server error. See [API status codes](#api-status-codes-1)\
            \ for more details."
      security:
      - oauth2+signature:
        - address:edit
  /api/v2/account-holders/individual/addresses:
    put:
      tags:
      - Baas Account Holder Contact Details
      summary: Change the address associated with an account
      description: |
        Please note:

        If the account holder has a Starling account, the address for that account holder will also be updated.
        The Starling account holder will be notified by email of this change.

        Possible 400 (Bad Request) errors include:
        * PERSON_DOES_NOT_EXIST
      operationId: changeAddress
      requestBody:
        description: The new address to be associated with the account
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeAddressRequest'
        required: true
      responses:
        "200":
          description: Successful operation
        "4xx":
          description: "Client error. See [API status codes](#api-status-codes-1)\
            \ for more details."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "5xx":
          description: "Server error. See [API status codes](#api-status-codes-1)\
            \ for more details."
      security:
      - oauth2:
        - customer:write
  /api/v2/account-holders/individual/emails:
    put:
      tags:
      - Baas Account Holder Contact Details
      summary: Change the email address associated with an account
      description: |
        Possible 400 (Bad Request) errors include:
        * PERSON_DOES_NOT_EXIST
      operationId: changeEmail
      requestBody:
        description: The new email to be associated with the account
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeEmailRequest'
        required: true
      responses:
        "200":
          description: Successful operation
        "4xx":
          description: "Client error. See [API status codes](#api-status-codes-1)\
            \ for more details."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "5xx":
          description: "Server error. See [API status codes](#api-status-codes-1)\
            \ for more details."
      security:
      - oauth2:
        - customer:write
  /api/v2/account-holders/individual/mobile-phone-numbers:
    put:
      tags:
      - Baas Account Holder Contact Details
      summary: Change the mobile phone number associated with an account
      description: |
        Possible 400 (Bad Request) errors include:
        * PERSON_DOES_NOT_EXIST
        * MOBILE_NUMBER_NOT_VALID
      operationId: changeMobilePhoneNumber
      requestBody:
        description: The new mobile phone number to be associated with the account
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeMobilePhoneNumberRequest'
        required: true
      responses:
        "200":
          description: Successful operation
        "4xx":
          description: "Client error. See [API status codes](#api-status-codes-1)\
            \ for more details."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "5xx":
          description: "Server error. See [API status codes](#api-status-codes-1)\
            \ for more details."
      security:
      - oauth2:
        - customer:write
  /api/v2/defunding-payment/account/{accountUid}/category/{categoryUid}/result/{defundingPaymentUid}:
    get:
      tags:
      - Baas Defunding Payment
      summary: Get the status of a defunding payment and the payment order request
        unique identifier associated with it
      description: |
        Possible 400 (Bad Request) errors include:
        * DEFUNDING_PAYMENT_UID_NOT_FOUND
      operationId: getDefundingPaymentResult
      parameters:
      - name: accountUid
        in: path
        description: The account from which payment should be initiated
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa
      - name: categoryUid
        in: path
        description: Source account category
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa
      - name: defundingPaymentUid
        in: path
        description: Unique identifier for the defunding payment result
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefundingPaymentResult'
        "4xx":
          description: "Client error. See [API status codes](#api-status-codes-1)\
            \ for more details."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "5xx":
          description: "Server error. See [API status codes](#api-status-codes-1)\
            \ for more details."
      security:
      - oauth2:
        - defunding:read
  /api/v2/defunding-payment/account/{accountUid}/category/{categoryUid}:
    post:
      tags:
      - Baas Defunding Payment
      summary: Initiate a defunding payment
      description: |
        Possible 400 (Bad Request) errors include:
      operationId: initiateDefundingPayment
      parameters:
      - name: accountUid
        in: path
        description: The account from which payment should be initiated
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa
      - name: categoryUid
        in: path
        description: Source account category
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa
      requestBody:
        description: Information required to create a defunding payment
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DefundingPaymentRequest'
        required: true
      responses:
        "202":
          description: Successful operation
          content:
            '*/*':
              schema:
                type: string
                format: uuid
                example: aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa
        "4xx":
          description: "Client error. See [API status codes](#api-status-codes-1)\
            \ for more details."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "5xx":
          description: "Server error. See [API status codes](#api-status-codes-1)\
            \ for more details."
      security:
      - oauth2:
        - defunding:write
  /api/v2/account-holder/individual/name-changes:
    post:
      tags:
      - Baas Individual Name Change
      summary: Create a name change request for an individual account holder
      description: |
        Please note:
        If the account holder has a Starling account, the name for that will also be updated.
        The Starling account holder will be notified by email of this change.

        Possible 400 (Bad Request) errors include:
        * NAME_CHANGE_REQUEST_WITH_DIFFERENT_DETAILS_EXISTS_FOR_EXTERNAL_IDENTIFIER
        * INDIVIDUAL_NOT_FOUND
        * REQUEST_VALIDATION_FAILED
      operationId: createPersonNameChangeRequest
      requestBody:
        description: Name details for the account holder
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePersonNameChangeRequest'
        required: true
      responses:
        "202":
          description: Successful operation
          content:
            '*/*':
              schema:
                type: string
                format: uuid
                example: aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa
        "4xx":
          description: "Client error. See [API status codes](#api-status-codes-1)\
            \ for more details."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "5xx":
          description: "Server error. See [API status codes](#api-status-codes-1)\
            \ for more details."
      security:
      - oauth2:
        - person-name-change:write
  /api/v2/account-holder/individual/name-changes/{personNameChangeRequestUid}/documents/upload-urls:
    put:
      tags:
      - Baas Individual Name Change
      summary: "Generate a document upload URL for uploading a supporting document\
        \ to, and unique identifier to reference that document"
      description: |
        Possible 400 (Bad Request) errors include:
        * REQUEST_VALIDATION_FAILED
      operationId: generateNameChangeDocumentUploadUrl
      parameters:
      - name: personNameChangeRequestUid
        in: path
        description: Unique identifier for the name change request
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa
      requestBody:
        description: Metadata about the content to be uploaded
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PresignedUploadRequest'
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentUploadPresignedUrlResponse'
        "4xx":
          description: "Client error. See [API status codes](#api-status-codes-1)\
            \ for more details."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "5xx":
          description: "Server error. See [API status codes](#api-status-codes-1)\
            \ for more details."
      security:
      - oauth2:
        - person-name-change:write
  ? /api/v2/account-holder/individual/name-changes/{personNameChangeRequestUid}/documents/{personNameChangeDocumentUid}/upload-confirmations
  : put:
      tags:
      - Baas Individual Name Change
      summary: "Confirm that a supporting document has been uploaded, and provide\
        \ metadata about that document"
      description: |
        Possible 400 (Bad Request) errors include:
        * REQUEST_VALIDATION_FAILED
      operationId: submitDocumentUploadConfirmation
      parameters:
      - name: personNameChangeRequestUid
        in: path
        description: Unique identifier for the name change request
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa
      - name: personNameChangeDocumentUid
        in: path
        description: Unique identifier for the uploaded supporting document
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa
      requestBody:
        description: Metadata about the uploaded content
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NameChangeDocumentUploadConfirmation'
        required: true
      responses:
        "202":
          description: Successful operation
        "4xx":
          description: "Client error. See [API status codes](#api-status-codes-1)\
            \ for more details."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "5xx":
          description: "Server error. See [API status codes](#api-status-codes-1)\
            \ for more details."
      security:
      - oauth2:
        - person-name-change:write
  /api/v2/account-holder/individual/name-changes/{personNameChangeRequestUid}/review-submissions:
    put:
      tags:
      - Baas Individual Name Change
      summary: Submit an individual account holder's name change request for review
      description: |
        Possible 400 (Bad Request) errors include:
        * REQUEST_VALIDATION_FAILED
      operationId: submitNameChangeRequestForReview
      parameters:
      - name: personNameChangeRequestUid
        in: path
        description: Unique identifier for the name change request
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa
      responses:
        "202":
          description: Successful operation
        "4xx":
          description: "Client error. See [API status codes](#api-status-codes-1)\
            \ for more details."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "5xx":
          description: "Server error. See [API status codes](#api-status-codes-1)\
            \ for more details."
      security:
      - oauth2:
        - person-name-change:write
  /api/v2/onboard/{onboardingUid}/identity/{identityUploadUid}/confirm-image-upload:
    put:
      tags:
      - Baas Onboarding
      summary: Confirm identity document image has been uploaded
      description: |
        Possible 400 (Bad Request) errors include:
        * ONBOARDING_UID_NOT_FOUND
        * ONBOARDING_STATUS_IS_NOT_VALID
        * NO_DOCUMENT_MATCH_FOR_ONBOARDING_UID
        * INCORRECT_DOCUMENT_TYPE
      operationId: confirmImageUploaded
      parameters:
      - name: onboardingUid
        in: path
        description: Unique identifier for the onboarding request
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa
      - name: identityUploadUid
        in: path
        description: Unique identifier of the presigned URL for the upload
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa
      requestBody:
        description: Confirmation that the image has been uploaded to the presigned
          URL
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfirmImageUploadRequest'
        required: true
      responses:
        "202":
          description: Accepted
        "4xx":
          description: "Client error. See [API status codes](#api-status-codes-1)\
            \ for more details."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "5xx":
          description: "Server error. See [API status codes](#api-status-codes-1)\
            \ for more details."
      security:
      - signature:
        - person-onboarding:write
  /api/v2/onboard/{onboardingUid}/identity/{identityUploadUid}/confirm-video-upload:
    put:
      tags:
      - Baas Onboarding
      summary: Confirm identity verification video has been uploaded
      description: |
        Possible 400 (Bad Request) errors include:
        * ONBOARDING_UID_NOT_FOUND
        * ONBOARDING_STATUS_IS_NOT_VALID
        * NO_DOCUMENT_MATCH_FOR_ONBOARDING_UID
        * INCORRECT_DOCUMENT_TYPE
      operationId: confirmVideoUploaded
      parameters:
      - name: onboardingUid
        in: path
        description: Unique identifier for the onboarding request
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa
      - name: identityUploadUid
        in: path
        description: Unique identifier of the presigned URL for the upload
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa
      requestBody:
        description: Confirmation that the video has been uploaded to the presigned
          URL
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfirmVideoUploadRequest'
        required: true
      responses:
        "202":
          description: Accepted
        "4xx":
          description: "Client error. See [API status codes](#api-status-codes-1)\
            \ for more details."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "5xx":
          description: "Server error. See [API status codes](#api-status-codes-1)\
            \ for more details."
      security:
      - signature:
        - person-onboarding:write
  /api/v2/onboard/{onboardingUid}/account-holder:
    put:
      tags:
      - Baas Onboarding
      summary: Creates an account holder for an approved onboarding request
      description: |
        Possible 400 (Bad Request) errors include:
        * ONBOARDING_UID_NOT_FOUND
        * ONBOARDING_STATUS_IS_NOT_VALID
      operationId: createAccountHolder
      parameters:
      - name: onboardingUid
        in: path
        description: Unique identifier for the onboarding request
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa
      requestBody:
        description: A request to create an account holder and associated account
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountHolderCreationRequest'
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountHolderCreationResponse'
        "4xx":
          description: "Client error. See [API status codes](#api-status-codes-1)\
            \ for more details."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "5xx":
          description: "Server error. See [API status codes](#api-status-codes-1)\
            \ for more details."
      security:
      - signature:
        - person-onboarding:write
  /api/v2/onboard/{onboardingUid}/tax-liability-declaration:
    put:
      tags:
      - Baas Onboarding
      summary: Submit a tax liability declaration
      description: |
        Possible 400 (Bad Request) errors include:
        * ONBOARDING_UID_NOT_FOUND
        * ONBOARDING_STATUS_IS_NOT_VALID
        * INVALID_DECLARATION_NUMBER
        * TAX_IDENTIFICATION_NUMBER_REQUIRED_FOR_US
        * DUPLICATE_COUNTRY_IN_DECLARATION
      operationId: createTaxLiabilityDeclaration
      parameters:
      - name: onboardingUid
        in: path
        description: Unique identifier for the onboarding request
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa
      requestBody:
        description: Tax liability declaration
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PersonTaxLiabilityDeclaration'
        required: true
      responses:
        "202":
          description: Accepted
        "4xx":
          description: "Client error. See [API status codes](#api-status-codes-1)\
            \ for more details."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "5xx":
          description: "Server error. See [API status codes](#api-status-codes-1)\
            \ for more details."
      security:
      - signature:
        - person-onboarding:write
  /api/v2/onboard/{onboardingUid}/status:
    get:
      tags:
      - Baas Onboarding
      summary: Returns status of application and any outstanding actions required
        to complete registration
      description: |
        Possible 400 (Bad Request) errors include:
        * ONBOARDING_UID_NOT_FOUND
      operationId: fetchApplicationStatus
      parameters:
      - name: onboardingUid
        in: path
        description: Unique identifier for the onboarding request
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutstandingActionsResponse'
        "4xx":
          description: "Client error. See [API status codes](#api-status-codes-1)\
            \ for more details."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "5xx":
          description: "Server error. See [API status codes](#api-status-codes-1)\
            \ for more details."
      security:
      - signature:
        - person-onboarding:read
  /api/v2/onboard/sources-of-funds:
    get:
      tags:
      - Baas Onboarding
      summary: Get the available options for sources of funds
      operationId: fetchSourcesOfFunds
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/SourcesOfFunds'
              example:
                sourceOfFunds:
                - BENEFITS
                - FRIENDS_AND_FAMILY
                - INVESTMENT
                - LOANS
                - MONTHLY_SALARY
                - PENSION
                - PROPERTY
                - WEEKLY_WAGES
        "4xx":
          description: "Client error. See [API status codes](#api-status-codes-1)\
            \ for more details."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "5xx":
          description: "Server error. See [API status codes](#api-status-codes-1)\
            \ for more details."
      security:
      - signature:
        - person-onboarding:read
  /api/v2/onboard/phone-countries:
    get:
      tags:
      - Baas Onboarding
      summary: Get the available valid mobile phone countries
      operationId: fetchValidMobilePhoneCountries
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidMobilePhoneCountries'
        "4xx":
          description: "Client error. See [API status codes](#api-status-codes-1)\
            \ for more details."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "5xx":
          description: "Server error. See [API status codes](#api-status-codes-1)\
            \ for more details."
      security:
      - signature:
        - person-onboarding:read
  /api/v2/onboard/{onboardingUid}/identity/upload-url:
    put:
      tags:
      - Baas Onboarding
      summary: Generate presigned URL for identity document upload
      description: |
        Possible 400 (Bad Request) errors include:
        * ONBOARDING_UID_NOT_FOUND
        * ONBOARDING_STATUS_IS_NOT_VALID
      operationId: generateIdentityDocumentUploadUrl
      parameters:
      - name: onboardingUid
        in: path
        description: Unique identifier for the onboarding request
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa
      requestBody:
        description: A request to generate a presigned URL for subsequent upload of
          a document
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PresignedUploadRequest'
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PresignedUploadUrl'
        "4xx":
          description: "Client error. See [API status codes](#api-status-codes-1)\
            \ for more details."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "5xx":
          description: "Server error. See [API status codes](#api-status-codes-1)\
            \ for more details."
      security:
      - signature:
        - person-onboarding:write
  /api/v2/onboard/{onboardingUid}/identity/phrases:
    put:
      tags:
      - Baas Onboarding
      summary: Generate phrase for identity verification video
      description: |
        Possible 400 (Bad Request) errors include:
        * ONBOARDING_UID_NOT_FOUND
        * ONBOARDING_STATUS_IS_NOT_VALID
      operationId: generateVerificationPhrase
      parameters:
      - name: onboardingUid
        in: path
        description: Unique identifier for the onboarding request
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa
      responses:
        "200":
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Phrase'
        "4xx":
          description: "Client error. See [API status codes](#api-status-codes-1)\
            \ for more details."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "5xx":
          description: "Server error. See [API status codes](#api-status-codes-1)\
            \ for more details."
      security:
      - signature:
        - person-onboarding:write
  /api/v2/onboard/{onboardingUid}/identity/{identityUploadUid}/status:
    get:
      tags:
      - Baas Onboarding
      summary: Get the automated document quality checks status for a previously uploaded
        identity document
      description: |
        Valid document types to check: PROVISIONAL_DRIVING_LICENSE, FULL_DRIVING_LICENSE, PASSPORT, IDENTITY_CARD

        Possible 400 (Bad Request) errors include:
        * ONBOARDING_UID_NOT_FOUND
      operationId: getDocumentStatus
      parameters:
      - name: onboardingUid
        in: path
        description: Unique identifier of a baas person onboarding
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa
      - name: identityUploadUid
        in: path
        description: Unique identifier of the presigned URL for the upload
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityDocumentStatusResponse'
        "4xx":
          description: "Client error. See [API status codes](#api-status-codes-1)\
            \ for more details."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "5xx":
          description: "Server error. See [API status codes](#api-status-codes-1)\
            \ for more details."
      security:
      - signature:
        - person-onboarding:read
  /api/v2/onboard/employment-sectors:
    get:
      tags:
      - Baas Onboarding
      summary: Gets employment sectors and their regulation statuses
      description: |
        Possible 400 (Bad Request) errors include:
        * ONBOARDING_UID_NOT_FOUND
      operationId: getEmploymentSectors
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmploymentSectorsResponse'
        "4xx":
          description: "Client error. See [API status codes](#api-status-codes-1)\
            \ for more details."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "5xx":
          description: "Server error. See [API status codes](#api-status-codes-1)\
            \ for more details."
      security:
      - signature:
        - person-onboarding:read
  /api/v2/onboard/income-bands:
    get:
      tags:
      - Baas Onboarding
      summary: Get the income band display options for a person
      description: |
        Possible 400 (Bad Request) errors include:
        * ONBOARDING_UID_NOT_FOUND
      operationId: getIncomeBandDisplayOptions
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncomeBandDisplays'
        "4xx":
          description: "Client error. See [API status codes](#api-status-codes-1)\
            \ for more details."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "5xx":
          description: "Server error. See [API status codes](#api-status-codes-1)\
            \ for more details."
      security:
      - signature:
        - person-onboarding:read
  /api/v2/onboard/{onboardingUid}/terms:
    get:
      tags:
      - Baas Onboarding
      summary: Gets required terms information
      description: |
        Possible 400 (Bad Request) errors include:
        * ONBOARDING_UID_NOT_FOUND
      operationId: getRequiredTerms
      parameters:
      - name: onboardingUid
        in: path
        description: Unique identifier for the onboarding request
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonTermsAcceptanceResponse'
        "4xx":
          description: "Client error. See [API status codes](#api-status-codes-1)\
            \ for more details."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "5xx":
          description: "Server error. See [API status codes](#api-status-codes-1)\
            \ for more details."
      security:
      - signature:
        - person-onboarding:read
    put:
      tags:
      - Baas Onboarding
      summary: Sends acceptance of terms
      description: |
        Possible 400 (Bad Request) errors include:
        * ONBOARDING_UID_NOT_FOUND
        * ONBOARDING_STATUS_IS_NOT_VALID
      operationId: sendAcceptedTerms
      parameters:
      - name: onboardingUid
        in: path
        description: Unique identifier for the onboarding request
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa
      requestBody:
        description: A collection of all terms that have been accepted
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AcceptedTermsRequest'
        required: true
      responses:
        "202":
          description: Accepted
        "4xx":
          description: "Client error. See [API status codes](#api-status-codes-1)\
            \ for more details."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "5xx":
          description: "Server error. See [API status codes](#api-status-codes-1)\
            \ for more details."
      security:
      - signature:
        - person-onboarding:write
  /api/v2/onboard/tax-liability-declaration/countries:
    get:
      tags:
      - Baas Onboarding
      summary: Get country options for tax liability information
      description: This endpoint returns all possible countries that can be submitted
        in a tax declaration (approx 250) in Alpha-2 format.
      operationId: getTaxLiabilityCountries
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaxLiabilityCountries'
        "4xx":
          description: "Client error. See [API status codes](#api-status-codes-1)\
            \ for more details."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "5xx":
          description: "Server error. See [API status codes](#api-status-codes-1)\
            \ for more details."
      security:
      - signature:
        - person-onboarding:read
  /api/v2/onboard/{onboardingUid}/terms/content:
    get:
      tags:
      - Baas Onboarding
      summary: Gets a terms document in pdf format
      description: |
        Possible 400 (Bad Request) errors include:
        * ONBOARDING_UID_NOT_FOUND
      operationId: getTermsContent
      parameters:
      - name: onboardingUid
        in: path
        description: Unique identifier for the onboarding request
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa
      - name: termDocument
        in: query
        description: The document name
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: version
        in: query
        description: The document version
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Successful operation
        "4xx":
          description: "Client error. See [API status codes](#api-status-codes-1)\
            \ for more details."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "5xx":
          description: "Server error. See [API status codes](#api-status-codes-1)\
            \ for more details."
      security:
      - signature:
        - person-onboarding:read
  /api/v2/onboard:
    post:
      tags:
      - Baas Onboarding
      summary: Register a person with Starling as the first step of the onboarding
        process
      description: |
        Possible 400 (Bad Request) errors include:
        * ONBOARDING_REQUEST_WITH_DIFFERENT_DETAILS_EXISTS_FOR_EXTERNAL_IDENTIFIER
        * MOBILE_NUMBER_MUST_BE_VERIFIED
        * MOBILE_NUMBER_NOT_VALID
        * LESS_THAN_SIX_MONTHS_ADDRESS_HISTORY
      operationId: registerPerson
      requestBody:
        description: Personal details that make up the registration
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePersonRequest'
        required: true
      responses:
        "202":
          description: Successful operation
          content:
            application/json:
              schema:
                type: string
                format: uuid
                example: aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa
        "4xx":
          description: "Client error. See [API status codes](#api-status-codes-1)\
            \ for more details."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "5xx":
          description: "Server error. See [API status codes](#api-status-codes-1)\
            \ for more details."
      security:
      - signature:
        - person-onboarding:write
  /api/v2/onboard/{onboardingUid}/income:
    put:
      tags:
      - Baas Onboarding
      summary: Sends income and employment details
      description: |
        Possible 400 (Bad Request) errors include:
        * ONBOARDING_UID_NOT_FOUND
        * ONBOARDING_STATUS_IS_NOT_VALID
        * MUST_PROVIDE_EMPLOYER_NAME_FOR_REGULATED_EMPLOYMENT_SECTOR
        * MUST_PROVIDE_VALID_EMPLOYMENT_SECTOR
      operationId: sendIncomeAndEmploymentDetails
      parameters:
      - name: onboardingUid
        in: path
        description: Unique identifier for the onboarding request
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa
      requestBody:
        description: "Source of income and, if required, employment details"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IncomeAndEmploymentDetails'
        required: true
      responses:
        "202":
          description: Accepted
        "4xx":
          description: "Client error. See [API status codes](#api-status-codes-1)\
            \ for more details."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "5xx":
          description: "Server error. See [API status codes](#api-status-codes-1)\
            \ for more details."
      security:
      - signature:
        - person-onboarding:write
  /api/v2/onboard/{onboardingUid}/submission:
    put:
      tags:
      - Baas Onboarding
      summary: Submits a completed application
      description: |
        Possible 400 (Bad Request) errors include:
        * ONBOARDING_UID_NOT_FOUND
        * ONBOARDING_STATUS_IS_NOT_VALID
      operationId: submitApplication
      parameters:
      - name: onboardingUid
        in: path
        description: Unique identifier for the onboarding request
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa
      responses:
        "202":
          description: Accepted
        "4xx":
          description: "Client error. See [API status codes](#api-status-codes-1)\
            \ for more details."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "5xx":
          description: "Server error. See [API status codes](#api-status-codes-1)\
            \ for more details."
      security:
      - signature:
        - person-onboarding:write
  /api/v2/onboard/{onboardingUid}/share-code:
    put:
      tags:
      - Baas Onboarding
      summary: Submits a share code declaration
      description: |
        Possible 400 (Bad Request) errors include:
        * ONBOARDING_UID_NOT_FOUND
        * ONBOARDING_STATUS_IS_NOT_VALID
      operationId: submitPersonShareCode
      parameters:
      - name: onboardingUid
        in: path
        description: Unique identifier for the onboarding request
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa
      requestBody:
        description: Share code declaration
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShareCodeDeclaration'
        required: true
      responses:
        "202":
          description: Accepted
        "4xx":
          description: "Client error. See [API status codes](#api-status-codes-1)\
            \ for more details."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "5xx":
          description: "Server error. See [API status codes](#api-status-codes-1)\
            \ for more details."
      security:
      - signature:
        - person-onboarding:write
  /api/v2/onboard/{onboardingUid}/personal-info:
    put:
      tags:
      - Baas Onboarding
      summary: Updates personal information for the onboarding customer
      description: |
        The person's overall onboarding status must be `NOT_READY_FOR_REVIEW` or `READY_FOR_REVIEW` to use this.

        Possible 400 (Bad Request) errors include:
        * ONBOARDING_UID_NOT_FOUND
        * ONBOARDING_STATUS_IS_NOT_VALID
      operationId: updatePersonalInformation
      parameters:
      - name: onboardingUid
        in: path
        description: Unique identifier for the onboarding request
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa
      requestBody:
        description: Personal details to be updated
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateOnboardingPersonalInfoRequest'
        required: true
      responses:
        "202":
          description: Accepted
        "4xx":
          description: "Client error. See [API status codes](#api-status-codes-1)\
            \ for more details."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "5xx":
          description: "Server error. See [API status codes](#api-status-codes-1)\
            \ for more details."
      security:
      - signature:
        - person-onboarding:write
  /api/v2/person-reverifications/{reviewUid}/upload-confirmations:
    put:
      tags:
      - Baas Person Reverification
      summary: Confirm identity verification video has been uploaded
      description: |
        Possible 400 (Bad Request) errors include:
        * REVIEW_UID_NOT_FOUND
        * INCORRECT_ACCESS_TOKEN_FOR_REVIEW
        * VIDEO_ALREADY_CONFIRMED_FOR_REVIEW
        * REVERIFICATION_REVIEW_ALREADY_SUBMITTED
      operationId: confirmVideoUpload
      parameters:
      - name: reviewUid
        in: path
        description: Unique identifier for the person reverification review
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa
      requestBody:
        description: Confirmation that the video has been uploaded to the presigned
          URL
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfirmUploadRequest'
        required: true
      responses:
        "202":
          description: Accepted
        "4xx":
          description: "Client error. See [API status codes](#api-status-codes-1)\
            \ for more details."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "5xx":
          description: "Server error. See [API status codes](#api-status-codes-1)\
            \ for more details."
      security:
      - oauth2:
        - person-reverification:write
  /api/v2/person-reverifications:
    post:
      tags:
      - Baas Person Reverification
      summary: Create a Person Reverification Review
      description: |
        Possible 400 (Bad Request) errors include:
        * DIFFERENT_PERSON_REVERIFICATION_REQUEST_EXISTS_FOR_EXTERNAL_IDENTIFIER
      operationId: createReview
      requestBody:
        description: Information required to create a review
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PersonReverificationRequest'
        required: true
      responses:
        "202":
          description: Successful operation
          content:
            '*/*':
              schema:
                type: string
                format: uuid
                example: aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa
        "4xx":
          description: "Client error. See [API status codes](#api-status-codes-1)\
            \ for more details."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "5xx":
          description: "Server error. See [API status codes](#api-status-codes-1)\
            \ for more details."
      security:
      - oauth2:
        - person-reverification:write
  /api/v2/person-reverifications/{reviewUid}/phrases:
    put:
      tags:
      - Baas Person Reverification
      summary: Generate phrase for identity verification video
      description: |
        Possible 400 (Bad Request) errors include:
        * REVIEW_UID_NOT_FOUND
        * INCORRECT_ACCESS_TOKEN_FOR_REVIEW
        * REVERIFICATION_REVIEW_ALREADY_SUBMITTED
      operationId: generatePhrase
      parameters:
      - name: reviewUid
        in: path
        description: Unique identifier for the person reverification review
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa
      responses:
        "200":
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonReverificationPhrase'
        "4xx":
          description: "Client error. See [API status codes](#api-status-codes-1)\
            \ for more details."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "5xx":
          description: "Server error. See [API status codes](#api-status-codes-1)\
            \ for more details."
      security:
      - oauth2:
        - person-reverification:write
  /api/v2/person-reverifications/{reviewUid}/urls:
    put:
      tags:
      - Baas Person Reverification
      summary: Generate presigned URL for document upload
      description: |
        Possible 400 (Bad Request) errors include:
        * REVIEW_UID_NOT_FOUND
        * INCORRECT_ACCESS_TOKEN_FOR_REVIEW
        * REVERIFICATION_REVIEW_ALREADY_SUBMITTED
      operationId: generateVideoUploadUrl
      parameters:
      - name: reviewUid
        in: path
        description: Unique identifier for the person reverification review
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa
      requestBody:
        description: A request to generate a presigned URL for subsequent upload of
          a document
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PresignedUrlRequest'
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PresignedUrl'
        "4xx":
          description: "Client error. See [API status codes](#api-status-codes-1)\
            \ for more details."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "5xx":
          description: "Server error. See [API status codes](#api-status-codes-1)\
            \ for more details."
      security:
      - oauth2:
        - person-reverification:write
  /api/v2/person-reverifications/{reviewUid}:
    get:
      tags:
      - Baas Person Reverification
      summary: Get the status of a Person Reverification review
      description: |
        Possible 400 (Bad Request) errors include:
        * REVIEW_UID_NOT_FOUND
        * INCORRECT_ACCESS_TOKEN_FOR_REVIEW
      operationId: getReviewStatus
      parameters:
      - name: reviewUid
        in: path
        description: Unique identifier for the person reverification review
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonReverificationReview'
        "4xx":
          description: "Client error. See [API status codes](#api-status-codes-1)\
            \ for more details."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "5xx":
          description: "Server error. See [API status codes](#api-status-codes-1)\
            \ for more details."
      security:
      - oauth2:
        - person-reverification:read
  /api/v2/simulation/account-management/person-name-changes/{personNameChangeRequestUid}/approve:
    put:
      tags:
      - Baas Simulation Resource
      summary: Simulate Starling internally approving a person name change
      operationId: approveNameChange
      parameters:
      - name: personNameChangeRequestUid
        in: path
        description: Unique identifier for a person name change request
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa
      responses:
        "200":
          description: Successful operation
        "4xx":
          description: "Client error. See [API status codes](#api-status-codes-1)\
            \ for more details."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "5xx":
          description: "Server error. See [API status codes](#api-status-codes-1)\
            \ for more details."
      security:
      - oauth2:
        - person-name-change:write
  /api/v2/simulation/account-management/person-reverifications/{reviewUid}/approve:
    put:
      tags:
      - Baas Simulation Resource
      summary: Simulate Starling internally approving a person reverification request
      operationId: approveReverificationRequest
      parameters:
      - name: reviewUid
        in: path
        description: Unique identifier for the person reverification review
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa
      responses:
        "200":
          description: Successful operation
        "4xx":
          description: "Client error. See [API status codes](#api-status-codes-1)\
            \ for more details."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "5xx":
          description: "Server error. See [API status codes](#api-status-codes-1)\
            \ for more details."
      security:
      - oauth2:
        - person-reverification:write
  /api/v2/simulation/account-management/closures:
    put:
      tags:
      - Baas Simulation Resource
      summary: Simulate Starling closing an account internally
      operationId: closeAccount
      responses:
        "200":
          description: Successful operation
        "4xx":
          description: "Client error. See [API status codes](#api-status-codes-1)\
            \ for more details."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "5xx":
          description: "Server error. See [API status codes](#api-status-codes-1)\
            \ for more details."
      security:
      - oauth2:
        - account-closure:write
  /api/v2/simulation/account-management/person-name-changes/{personNameChangeRequestUid}/reject:
    put:
      tags:
      - Baas Simulation Resource
      summary: Simulate Starling internally rejecting a person name change
      operationId: rejectNameChange
      parameters:
      - name: personNameChangeRequestUid
        in: path
        description: Unique identifier for a person name change request
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa
      responses:
        "200":
          description: Successful operation
        "4xx":
          description: "Client error. See [API status codes](#api-status-codes-1)\
            \ for more details."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "5xx":
          description: "Server error. See [API status codes](#api-status-codes-1)\
            \ for more details."
      security:
      - oauth2:
        - person-name-change:write
  /api/v2/simulation/account-management/person-reverifications/{reviewUid}/reject:
    put:
      tags:
      - Baas Simulation Resource
      summary: Simulate Starling internally rejecting a person reverification request
      operationId: rejectReverificationRequest
      parameters:
      - name: reviewUid
        in: path
        description: Unique identifier for the person reverification review
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa
      responses:
        "200":
          description: Successful operation
        "4xx":
          description: "Client error. See [API status codes](#api-status-codes-1)\
            \ for more details."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "5xx":
          description: "Server error. See [API status codes](#api-status-codes-1)\
            \ for more details."
      security:
      - oauth2:
        - person-reverification:write
  /api/v2/simulation/onboarding-applications/{onboardingUid}/approve:
    put:
      tags:
      - Baas Simulation Resource
      summary: Simulate Starling internally approving an onboarding application
      operationId: approveOnboardingApplication
      parameters:
      - name: onboardingUid
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa
      responses:
        "200":
          description: Successful operation
        "4xx":
          description: "Client error. See [API status codes](#api-status-codes-1)\
            \ for more details."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "5xx":
          description: "Server error. See [API status codes](#api-status-codes-1)\
            \ for more details."
      security:
      - signature:
        - person-onboarding:write
  /api/v2/simulation/onboarding-applications/{onboardingUid}/cancel:
    put:
      tags:
      - Baas Simulation Resource
      summary: Simulate Starling internally cancelling an onboarding application
      operationId: cancelOnboardingApplication
      parameters:
      - name: onboardingUid
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa
      responses:
        "200":
          description: Successful operation
        "4xx":
          description: "Client error. See [API status codes](#api-status-codes-1)\
            \ for more details."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "5xx":
          description: "Server error. See [API status codes](#api-status-codes-1)\
            \ for more details."
      security:
      - signature:
        - person-onboarding:write
  /api/v2/simulation/onboarding-applications/{onboardingUid}/reject:
    put:
      tags:
      - Baas Simulation Resource
      summary: Simulate Starling internally rejecting an onboarding application for
        specified set of one or more reasons
      operationId: rejectOnboardingApplication
      parameters:
      - name: onboardingUid
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa
      requestBody:
        description: List of simulated rejection reasons
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SimulatedOnboardingRejectionReasonsWrapper'
        required: true
      responses:
        "200":
          description: Successful operation
        "4xx":
          description: "Client error. See [API status codes](#api-status-codes-1)\
            \ for more details."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "5xx":
          description: "Server error. See [API status codes](#api-status-codes-1)\
            \ for more details."
      security:
      - signature:
        - person-onboarding:write
  /api/v2/cards/{cardUid}/controls/atm-enabled:
    put:
      tags:
      - Cards
      summary: Update ATM withdrawal control
      operationId: enableAtm
      parameters:
      - name: cardUid
        in: path
        description: Card uid of the targeted card
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa
      requestBody:
        description: "Whether ATM withdrawals should be allowed. Set to false to block,\
          \ true to allow."
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Enabling'
        required: true
      responses:
        "200":
          description: Successful operation
        "4xx":
          description: "Client error. See [API status codes](#api-status-codes-1)\
            \ for more details."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "5xx":
          description: "Server error. See [API status codes](#api-status-codes-1)\
            \ for more details."
      security:
      - oauth2:
        - card-control:edit
  /api/v2/cards/{cardUid}/controls/enabled:
    put:
      tags:
      - Cards
      summary: Update card lock
      operationId: enableCard
      parameters:
      - name: cardUid
        in: path
        description: Card uid of the targeted card
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa
      requestBody:
        description: "Whether the card should be locked. Set to false to lock, true\
          \ to unlock."
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Enabling'
        required: true
      responses:
        "200":
          description: Successful operation
        "4xx":
          description: "Client error. See [API status codes](#api-status-codes-1)\
            \ for more details."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "5xx":
          description: "Server error. See [API status codes](#api-status-codes-1)\
            \ for more details."
      security:
      - oauth2:
        - card-control:edit
  /api/v2/cards/{cardUid}/controls/currency-switch:
    put:
      tags:
      - Cards
      summary: Update currency switch payments control
      operationId: enableCurrencySwitch
      parameters:
      - name: cardUid
        in: path
        description: Card uid of the targeted card
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa
      requestBody:
        description: "Whether currency switch payments should be allowed for a given\
          \ currency. Set to false to block, true to allow."
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CurrencyFlag'
        required: true
      responses:
        "200":
          description: Successful operation
        "4xx":
          description: "Client error. See [API status codes](#api-status-codes-1)\
            \ for more details."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "5xx":
          description: "Server error. See [API status codes](#api-status-codes-1)\
            \ for more details."
      security:
      - oauth2:
        - card-control:edit
  /api/v2/cards/{cardUid}/controls/gambling-enabled:
    put:
      tags:
      - Cards
      summary: Update gambling payments control
      operationId: enableGamblingPayments
      parameters:
      - name: cardUid
        in: path
        description: Card uid of the targeted card
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa
      requestBody:
        description: "Whether gambling payments should be allowed. Set to false to\
          \ block, true to allow."
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Enabling'
        required: true
      responses:
        "200":
          description: Successful operation
        "4xx":
          description: "Client error. See [API status codes](#api-status-codes-1)\
            \ for more details."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "5xx":
          description: "Server error. See [API status codes](#api-status-codes-1)\
            \ for more details."
      security:
      - oauth2:
        - card-control:edit
  /api/v2/cards/{cardUid}/controls/mag-stripe-enabled:
    put:
      tags:
      - Cards
      summary: Update magstripe payments control
      operationId: enableMagStripePayment
      parameters:
      - name: cardUid
        in: path
        description: Card uid of the targeted card
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa
      requestBody:
        description: "Whether magstripe payments should be allowed. Set to false to\
          \ block, true to allow."
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Enabling'
        required: true
      responses:
        "200":
          description: Successful operation
        "4xx":
          description: "Client error. See [API status codes](#api-status-codes-1)\
            \ for more details."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "5xx":
          description: "Server error. See [API status codes](#api-status-codes-1)\
            \ for more details."
      security:
      - oauth2:
        - card-control:edit
  /api/v2/cards/{cardUid}/controls/mobile-wallet-enabled:
    put:
      tags:
      - Cards
      summary: Update mobile wallet payments control
      operationId: enableMobileWallet
      parameters:
      - name: cardUid
        in: path
        description: Card uid of the targeted card
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa
      requestBody:
        description: "Whether mobile wallet payments should be allowed. Set to false\
          \ to block, true to allow."
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Enabling'
        required: true
      responses:
        "200":
          description: Successful operation
        "4xx":
          description: "Client error. See [API status codes](#api-status-codes-1)\
            \ for more details."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "5xx":
          description: "Server error. See [API status codes](#api-status-codes-1)\
            \ for more details."
      security:
      - oauth2:
        - card-control:edit
  /api/v2/cards/{cardUid}/controls/online-enabled:
    put:
      tags:
      - Cards
      summary: Update online payments control
      operationId: enableOnlinePayments
      parameters:
      - name: cardUid
        in: path
        description: Card uid of the targeted card
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa
      requestBody:
        description: "Whether online payments should be allowed. Set to false to block,\
          \ true to allow."
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Enabling'
        required: true
      responses:
        "200":
          description: Successful operation
        "4xx":
          description: "Client error. See [API status codes](#api-status-codes-1)\
            \ for more details."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "5xx":
          description: "Server error. See [API status codes](#api-status-codes-1)\
            \ for more details."
      security:
      - oauth2:
        - card-control:edit
  /api/v2/cards/{cardUid}/controls/pos-enabled:
    put:
      tags:
      - Cards
      summary: Update card present payments (contactless and chip and pin) control
      operationId: enablePos
      parameters:
      - name: cardUid
        in: path
        description: Card uid of the targeted card
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa
      requestBody:
        description: "Whether card present payments (contactless and chip and pin)\
          \ should be allowed. Set to false to block, true to allow."
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Enabling'
        required: true
      responses:
        "200":
          description: Successful operation
        "4xx":
          description: "Client error. See [API status codes](#api-status-codes-1)\
            \ for more details."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "5xx":
          description: "Server error. See [API status codes](#api-status-codes-1)\
            \ for more details."
      security:
      - oauth2:
        - card-control:edit
  /api/v2/cards:
    get:
      tags:
      - Cards
      summary: Get all the cards for an account holder
      operationId: listCards
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cards'
        "4xx":
          description: "Client error. See [API status codes](#api-status-codes-1)\
            \ for more details."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "5xx":
          description: "Server error. See [API status codes](#api-status-codes-1)\
            \ for more details."
      security:
      - oauth2:
        - card:read
  /api/v2/accounts/{accountUid}/recurring-payment:
    get:
      tags:
      - Recurring Card Payments
      summary: Fetch recurring card payments for an account holder
      operationId: listRecurringPayments
      parameters:
      - name: accountUid
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecurringCardPayments'
        "4xx":
          description: "Client error. See [API status codes](#api-status-codes-1)\
            \ for more details."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "5xx":
          description: "Server error. See [API status codes](#api-status-codes-1)\
            \ for more details."
      security:
      - oauth2:
        - transaction:read
  /api/v2/direct-debit/mandates/{mandateUid}:
    get:
      tags:
      - Direct Debit Mandates
      summary: Get the direct debit mandate with the specified identifier
      operationId: getMandate
      parameters:
      - name: mandateUid
        in: path
        description: Unique identifier of the mandate.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectDebitMandateV2'
        "4xx":
          description: "Client error. See [API status codes](#api-status-codes-1)\
            \ for more details."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "5xx":
          description: "Server error. See [API status codes](#api-status-codes-1)\
            \ for more details."
      security:
      - oauth2:
        - mandate:read
    delete:
      tags:
      - Direct Debit Mandates
      summary: Cancel the direct debit mandate with the specified identifier
      operationId: cancelMandate
      parameters:
      - name: mandateUid
        in: path
        description: Unique identifier of the mandate.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa
      responses:
        "200":
          description: Successful operation
        "4xx":
          description: "Client error. See [API status codes](#api-status-codes-1)\
            \ for more details."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "5xx":
          description: "Server error. See [API status codes](#api-status-codes-1)\
            \ for more details."
      security:
      - oauth2:
        - mandate:delete
  /api/v2/direct-debit/mandates:
    get:
      tags:
      - Direct Debit Mandates
      summary: Get a list of direct debit mandates
      operationId: listMandates
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectDebitMandatesV2'
        "4xx":
          description: "Client error. See [API status codes](#api-status-codes-1)\
            \ for more details."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "5xx":
          description: "Server error. See [API status codes](#api-status-codes-1)\
            \ for more details."
      security:
      - oauth2:
        - mandate:read
  /api/v2/direct-debit/mandates/account/{accountUid}:
    get:
      tags:
      - Direct Debit Mandates
      summary: Get a list of direct debit mandates
      operationId: listMandatesForAccount
      parameters:
      - name: accountUid
        in: path
        description: Unique identifier of the account.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectDebitMandatesV2'
        "4xx":
          description: "Client error. See [API status codes](#api-status-codes-1)\
            \ for more details."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "5xx":
          description: "Server error. See [API status codes](#api-status-codes-1)\
            \ for more details."
      security:
      - oauth2:
        - mandate:read
  /api/v2/direct-debit/mandates/{mandateUid}/payments:
    get:
      tags:
      - Direct Debit Mandates
      summary: Get a transaction history for a direct debit
      operationId: listPaymentsForMandate
      parameters:
      - name: mandateUid
        in: path
        description: Unique identifier of the mandate.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa
      - name: since
        in: query
        description: Start date for a transaction history
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: date
          example: 2023-04-05
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectDebitPaymentsResponse'
        "4xx":
          description: "Client error. See [API status codes](#api-status-codes-1)\
            \ for more details."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "5xx":
          description: "Server error. See [API status codes](#api-status-codes-1)\
            \ for more details."
      security:
      - oauth2:
        - mandate:read
  /api/v2/feed/account/{accountUid}/category/{categoryUid}/{feedItemUid}/spending-category:
    put:
      tags:
      - Transaction Feed
      summary: Changes the spending category for a transaction
      description: |-
        Categories are subdivisions of an account.
        The default category holds the main balance and transactions. Savings goals and spending spaces are examples of other categories. You can use [`/api/v2/accounts`](#operations-tag-Accounts) to get the default category UID for an account.

        The spending category is different. It specifies the type of spending associated with the transaction, for example, `GROCERIES`, `GIFTS` or `VAT`.
      operationId: changeTransactionCategory
      parameters:
      - name: accountUid
        in: path
        description: Account uid
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa
      - name: categoryUid
        in: path
        description: Category uid
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa
      - name: feedItemUid
        in: path
        description: Feed item uid
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa
      requestBody:
        description: Spending category
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSpendingCategory'
        required: true
      responses:
        "200":
          description: Successful operation
        "4xx":
          description: "Client error. See [API status codes](#api-status-codes-1)\
            \ for more details."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "5xx":
          description: "Server error. See [API status codes](#api-status-codes-1)\
            \ for more details."
      security:
      - oauth2:
        - transaction:edit
  /api/v2/feed/account/{accountUid}/category/{categoryUid}/{feedItemUid}/receipt:
    get:
      tags:
      - Transaction Feed
      summary: "Fetches the receipt, created by the registered application, for a\
        \ given feed item"
      description: |-
        Categories are subdivisions of an account.
        The default category holds the main balance and transactions. Savings goals and spending spaces are examples of other categories. You can use [`/api/v2/accounts`](#operations-tag-Accounts) to get the default category UID for an account.
      operationId: getReceipt
      parameters:
      - name: accountUid
        in: path
        description: Account uid
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa
      - name: categoryUid
        in: path
        description: Category uid
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa
      - name: feedItemUid
        in: path
        description: Feed item uid
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Receipt'
        "4xx":
          description: "Client error. See [API status codes](#api-status-codes-1)\
            \ for more details."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "5xx":
          description: "Server error. See [API status codes](#api-status-codes-1)\
            \ for more details."
      security:
      - oauth2:
        - receipt:read
    put:
      tags:
      - Transaction Feed
      summary: Submit a receipt for a feed item
      description: |-
        Categories are subdivisions of an account.
        The default category holds the main balance and transactions. Savings goals and spending spaces are examples of other categories. You can use [`/api/v2/accounts`](#operations-tag-Accounts) to get the default category UID for an account.
      operationId: createOrUpdateReceipt
      parameters:
      - name: accountUid
        in: path
        description: Account uid
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa
      - name: categoryUid
        in: path
        description: Category uid
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa
      - name: feedItemUid
        in: path
        description: Feed item uid
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa
      requestBody:
        description: Receipt
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Receipt'
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReceiptCreationResponse'
        "4xx":
          description: "Client error. See [API status codes](#api-status-codes-1)\
            \ for more details."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "5xx":
          description: "Server error. See [API status codes](#api-status-codes-1)\
            \ for more details."
      security:
      - oauth2:
        - receipt:write
        - metadata:create
        - metadata:edit
  /api/v2/feed/account/{accountUid}/category/{categoryUid}/{feedItemUid}/attachments/{feedItemAttachmentUid}:
    get:
      tags:
      - Transaction Feed
      summary: Downloads the feed item attachment
      description: |-
        Categories are subdivisions of an account.
        The default category holds the main balance and transactions. Savings goals and spending spaces are examples of other categories. You can use [`/api/v2/accounts`](#operations-tag-Accounts) to get the default category UID for an account.
      operationId: downloadFeedItemAttachment
      parameters:
      - name: accountUid
        in: path
        description: Account uid
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa
      - name: categoryUid
        in: path
        description: Category uid
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa
      - name: feedItemUid
        in: path
        description: Feed item uid
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa
      - name: feedItemAttachmentUid
        in: path
        description: Feed item attachment uid
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa
      responses:
        "200":
          description: Successful operation
          content:
            '*/*':
              schema:
                type: string
                format: binary
        "4xx":
          description: "Client error. See [API status codes](#api-status-codes-1)\
            \ for more details."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "5xx":
          description: "Server error. See [API status codes](#api-status-codes-1)\
            \ for more details."
      security:
      - oauth2:
        - attachment:read
  /api/v2/feed/account/{accountUid}/category/{categoryUid}/{feedItemUid}:
    get:
      tags:
      - Transaction Feed
      summary: Fetches a single feed item
      description: |-
        Categories are subdivisions of an account.
        The default category holds the main balance and transactions. Savings goals and spending spaces are examples of other categories. You can use [`/api/v2/accounts`](#operations-tag-Accounts) to get the default category UID for an account.
      operationId: getFeedItem
      parameters:
      - name: accountUid
        in: path
        description: Account uid
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa
      - name: categoryUid
        in: path
        description: Category uid
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa
      - name: feedItemUid
        in: path
        description: Feed item uid
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeedItem'
        "4xx":
          description: "Client error. See [API status codes](#api-status-codes-1)\
            \ for more details."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "5xx":
          description: "Server error. See [API status codes](#api-status-codes-1)\
            \ for more details."
      security:
      - oauth2:
        - transaction:read
  /api/v2/feed/account/{accountUid}/category/{categoryUid}/{feedItemUid}/attachments:
    get:
      tags:
      - Transaction Feed
      summary: Fetches the list of items attached to a feed item
      description: |-
        Categories are subdivisions of an account.
        The default category holds the main balance and transactions. Savings goals and spending spaces are examples of other categories. You can use [`/api/v2/accounts`](#operations-tag-Accounts) to get the default category UID for an account.
      operationId: getFeedItemAttachments
      parameters:
      - name: accountUid
        in: path
        description: Account uid
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa
      - name: categoryUid
        in: path
        description: Category uid
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa
      - name: feedItemUid
        in: path
        description: Feed item uid
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeedItemAttachments'
        "4xx":
          description: "Client error. See [API status codes](#api-status-codes-1)\
            \ for more details."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "5xx":
          description: "Server error. See [API status codes](#api-status-codes-1)\
            \ for more details."
      security:
      - oauth2:
        - attachment:read
  /api/v2/feed/account/{accountUid}/category/{categoryUid}/{feedItemUid}/mastercard:
    get:
      tags:
      - Transaction Feed
      summary: Fetches additional details about the Mastercard Feed Item
      description: |-
        Categories are subdivisions of an account.
        The default category holds the main balance and transactions. Savings goals and spending spaces are examples of other categories. You can use [`/api/v2/accounts`](#operations-tag-Accounts) to get the default category UID for an account.
      operationId: getMastercardFeedItem
      parameters:
      - name: accountUid
        in: path
        description: Account uid
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa
      - name: categoryUid
        in: path
        description: Category uid
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa
      - name: feedItemUid
        in: path
        description: Feed item uid
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MastercardFeedItem'
        "4xx":
          description: "Client error. See [API status codes](#api-status-codes-1)\
            \ for more details."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "5xx":
          description: "Server error. See [API status codes](#api-status-codes-1)\
            \ for more details."
      security:
      - oauth2:
        - transaction:read
  /api/v2/feed/account/{accountUid}/category/{categoryUid}/{feedItemUid}/receipts:
    get:
      tags:
      - Transaction Feed
      summary: Fetches all receipts for a given feed item
      description: |-
        Categories are subdivisions of an account.
        The default category holds the main balance and transactions. Savings goals and spending spaces are examples of other categories. You can use [`/api/v2/accounts`](#operations-tag-Accounts) to get the default category UID for an account.
      operationId: getReceipts
      parameters:
      - name: accountUid
        in: path
        description: Account uid
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa
      - name: categoryUid
        in: path
        description: Category uid
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa
      - name: feedItemUid
        in: path
        description: Feed item uid
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Receipt'
        "4xx":
          description: "Client error. See [API status codes](#api-status-codes-1)\
            \ for more details."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "5xx":
          description: "Server error. See [API status codes](#api-status-codes-1)\
            \ for more details."
      security:
      - oauth2:
        - receipts:read
  /api/v2/feed/account/{accountUid}/category/{categoryUid}:
    get:
      tags:
      - Transaction Feed
      summary: Get the account holder's feed items which were created or updated since
        a given date
      description: |-
        Categories are subdivisions of an account.
        The default category holds the main balance and transactions. Savings goals and spending spaces are examples of other categories. You can use [`/api/v2/accounts`](#operations-tag-Accounts) to get the default category UID for an account.
      operationId: queryFeedItems
      parameters:
      - name: accountUid
        in: path
        description: Account uid
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa
      - name: categoryUid
        in: path
        description: Category uid
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa
      - name: changesSince
        in: query
        description: Items which have changed since
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: date-time
        example: 2020-01-01T12:34:56.000Z
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeedItems'
        "4xx":
          description: "Client error. See [API status codes](#api-status-codes-1)\
            \ for more details."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "5xx":
          description: "Server error. See [API status codes](#api-status-codes-1)\
            \ for more details."
      security:
      - oauth2:
        - transaction:read
  /api/v2/feed/account/{accountUid}/category/{categoryUid}/transactions-between:
    get:
      tags:
      - Transaction Feed
      summary: "Get the account holder's feed items for the specified category, which\
        \ were created between two timestamps"
      description: |-
        Categories are subdivisions of an account.
        The default category holds the main balance and transactions. Savings goals and spending spaces are examples of other categories. You can use [`/api/v2/accounts`](#operations-tag-Accounts) to get the default category UID for an account.
      operationId: queryFeedItemsByCategoryWithTransactionTimesBetween
      parameters:
      - name: accountUid
        in: path
        description: Account uid
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa
      - name: categoryUid
        in: path
        description: Category uid
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa
      - name: minTransactionTimestamp
        in: query
        description: Minimum transaction timestamp
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: date-time
        example: 2020-06-01T12:34:56.000Z
      - name: maxTransactionTimestamp
        in: query
        description: Maximum transaction timestamp
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: date-time
        example: 2020-07-01T12:34:56.000Z
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeedItems'
        "4xx":
          description: "Client error. See [API status codes](#api-status-codes-1)\
            \ for more details."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "5xx":
          description: "Server error. See [API status codes](#api-status-codes-1)\
            \ for more details."
      security:
      - oauth2:
        - transaction:read
  /api/v2/feed/account/{accountUid}/settled-transactions-between:
    get:
      tags:
      - Transaction Feed
      summary: "Get the account holder's settled feed items for the specified account,\
        \ which have settlement time between the two provided timestamps"
      operationId: queryFeedItemsWithTransactionTimesBetween
      parameters:
      - name: accountUid
        in: path
        description: Account uid
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa
      - name: minTransactionTimestamp
        in: query
        description: Minimum transaction timestamp
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: date-time
        example: 2020-06-01T12:34:56.000Z
      - name: maxTransactionTimestamp
        in: query
        description: Maximum transaction timestamp
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: date-time
        example: 2020-07-01T12:34:56.000Z
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeedItems'
        "4xx":
          description: "Client error. See [API status codes](#api-status-codes-1)\
            \ for more details."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "5xx":
          description: "Server error. See [API status codes](#api-status-codes-1)\
            \ for more details."
      security:
      - oauth2:
        - transaction:read
  /api/v2/feed/account/{accountUid}/category/{categoryUid}/{feedItemUid}/user-note:
    put:
      tags:
      - Transaction Feed
      summary: Changes the user-specified note attached to a transaction
      description: |-
        Categories are subdivisions of an account.
        The default category holds the main balance and transactions. Savings goals and spending spaces are examples of other categories. You can use [`/api/v2/accounts`](#operations-tag-Accounts) to get the default category UID for an account.
      operationId: updateUserNote
      parameters:
      - name: accountUid
        in: path
        description: Account uid
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa
      - name: categoryUid
        in: path
        description: Category uid
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa
      - name: feedItemUid
        in: path
        description: Feed item uid
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa
      requestBody:
        description: User Note
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserNoteWrapper'
        required: true
      responses:
        "200":
          description: Successful operation
        "4xx":
          description: "Client error. See [API status codes](#api-status-codes-1)\
            \ for more details."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "5xx":
          description: "Server error. See [API status codes](#api-status-codes-1)\
            \ for more details."
      security:
      - oauth2:
        - transaction:edit
  /api/v2/feed/account/{accountUid}/round-up:
    get:
      tags:
      - Feed Round-up
      summary: Returns the the round-up goal associated with an account if one has
        been created
      operationId: fetchRoundUpGoal
      parameters:
      - name: accountUid
        in: path
        description: Account uid
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoundUpGoalResponse'
        "4xx":
          description: "Client error. See [API status codes](#api-status-codes-1)\
            \ for more details."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "5xx":
          description: "Server error. See [API status codes](#api-status-codes-1)\
            \ for more details."
      security:
      - oauth2:
        - savings-goal:read
    put:
      tags:
      - Feed Round-up
      summary: Activates transaction round-up and adds remainder to savings goal
      operationId: activateRoundUpGoal
      parameters:
      - name: accountUid
        in: path
        description: Account uid
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa
      requestBody:
        description: Round-up goal
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoundUpGoalPayload'
        required: true
      responses:
        "200":
          description: Successful operation
        "4xx":
          description: "Client error. See [API status codes](#api-status-codes-1)\
            \ for more details."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "5xx":
          description: "Server error. See [API status codes](#api-status-codes-1)\
            \ for more details."
      security:
      - oauth2:
        - savings-goal:create
    delete:
      tags:
      - Feed Round-up
      summary: Deletes the round-up goal associated with an account if one exists
      operationId: stopRoundUpGoal
      parameters:
      - name: accountUid
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa
      responses:
        "200":
          description: Successful operation
        "4xx":
          description: "Client error. See [API status codes](#api-status-codes-1)\
            \ for more details."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "5xx":
          description: "Server error. See [API status codes](#api-status-codes-1)\
            \ for more details."
      security:
      - oauth2:
        - savings-goal:delete
  /api/v2/identity/individual:
    get:
      tags:
      - API User Identities
      summary: The individual who authorised the application
      operationId: getAuthorisingIndividual
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Individual'
        "4xx":
          description: "Client error. See [API status codes](#api-status-codes-1)\
            \ for more details."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "5xx":
          description: "Server error. See [API status codes](#api-status-codes-1)\
            \ for more details."
      security:
      - oauth2:
        - authorising-individual:read
  /api/v2/identity/token:
    get:
      tags:
      - API User Identities
      summary: Get current token identity
      description: "This endpoint returns the permissions you have access to, the\
        \ time until the token expires and the account holder's unique identifier."
      operationId: getTokenIdentity
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityV2'
        "4xx":
          description: "Client error. See [API status codes](#api-status-codes-1)\
            \ for more details."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "5xx":
          description: "Server error. See [API status codes](#api-status-codes-1)\
            \ for more details."
      security:
      - oauth2:
        - none
  /api/v2/identity/logout:
    put:
      tags:
      - API User Identities
      summary: Logout the current individual
      description: This endpoint logs an individual out by disabling all of their
        active access tokens.
      operationId: logoutIndividual
      responses:
        "202":
          description: Successful operation
        "4xx":
          description: "Client error. See [API status codes](#api-status-codes-1)\
            \ for more details."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "5xx":
          description: "Server error. See [API status codes](#api-status-codes-1)\
            \ for more details."
      security:
      - oauth2:
        - none
  /api/v2/payments/local/account/{accountUid}/category/{categoryUid}/standing-orders/{paymentOrderUid}:
    get:
      tags:
      - Payments
      summary: Get a standing order
      description: |-
        Categories are subdivisions of an account.
        The default category holds the main balance and transactions. Savings goals and spending spaces are examples of other categories. You can use [`/api/v2/accounts`](#operations-tag-Accounts) to get the default category UID for an account.

        If `startDate` is null, the standing order is awaiting review and has not yet been approved.

        If `cancelledAt` is non-null, the standing order has been cancelled, either by the customer, or as a result of the payment review.
      operationId: getStandingOrder
      parameters:
      - name: accountUid
        in: path
        description: Account uid
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa
      - name: categoryUid
        in: path
        description: Category uid
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa
      - name: paymentOrderUid
        in: path
        description: Payment Order uid
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandingOrder'
        "4xx":
          description: "Client error. See [API status codes](#api-status-codes-1)\
            \ for more details."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "5xx":
          description: "Server error. See [API status codes](#api-status-codes-1)\
            \ for more details."
      security:
      - oauth2:
        - standing-order:read
        - standing-order-own:read
    put:
      tags:
      - Payments
      summary: Update a standing order
      description: "Categories are subdivisions of an account.\nThe default category\
        \ holds the main balance and transactions. Savings goals and spending spaces\
        \ are examples of other categories. You can use [`/api/v2/accounts`](#operations-tag-Accounts)\
        \ to get the default category UID for an account.\n\nPossible 400 (Bad Request)\
        \ errors include:\n * `CANNOT_MAKE_REQUESTED_CHANGE`: you cannot make this\
        \ change to this standing order. You can create a new standing order instead.\
        \ \n* `CANNOT_UPDATE_CANCELLED_PAYMENT_ORDER`: you cannot update this standing\
        \ order because it has been cancelled.\n* `CANNOT_UPDATE_PENDING_PAYMENT_ORDER`:\
        \ you cannot update this standing order at this time because it is pending.\
        \ This can happen if the original standing order is awaiting review. In this\
        \ case, `GET /api/v2/payments/local/account/{accountUid}/category/{categoryUid}/standing-orders/{paymentOrderUid}`\
        \ will return a null `startDate`."
      operationId: updateStandingOrder
      parameters:
      - name: accountUid
        in: path
        description: Account uid
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa
      - name: categoryUid
        in: path
        description: Category uid
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa
      - name: paymentOrderUid
        in: path
        description: Payment order uid
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa
      requestBody:
        description: Standing order update request.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateStandingOrderRequest'
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateStandingOrderResponse'
        "4xx":
          description: "Client error. See [API status codes](#api-status-codes-1)\
            \ for more details."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "5xx":
          description: "Server error. See [API status codes](#api-status-codes-1)\
            \ for more details."
      security:
      - oauth2+signature:
        - standing-order:create
    delete:
      tags:
      - Payments
      summary: Cancel a standing order
      description: |-
        Categories are subdivisions of an account.
        The default category holds the main balance and transactions. Savings goals and spending spaces are examples of other categories. You can use [`/api/v2/accounts`](#operations-tag-Accounts) to get the default category UID for an account.

        Possible 400 (Bad Request) errors include:
         * `CANNOT_CANCEL_PENDING_PAYMENT_ORDER`: you cannot cancel this standing order at this time because it is pending. This can happen if the original standing order is awaiting review. In this case, `GET /api/v2/payments/local/account/{accountUid}/category/{categoryUid}/standing-orders/{paymentOrderUid}` returns a null `startDate`.
      operationId: cancelStandingOrder
      parameters:
      - name: accountUid
        in: path
        description: Account uid
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa
      - name: categoryUid
        in: path
        description: Category uid
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa
      - name: paymentOrderUid
        in: path
        description: Payment order uid
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa
      responses:
        "200":
          description: Successful operation
        "4xx":
          description: "Client error. See [API status codes](#api-status-codes-1)\
            \ for more details."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "5xx":
          description: "Server error. See [API status codes](#api-status-codes-1)\
            \ for more details."
      security:
      - oauth2+signature:
        - standing-order:delete
  /api/v2/payments/local/account/{accountUid}/category/{categoryUid}/standing-orders:
    get:
      tags:
      - Payments
      summary: List standing orders
      description: |-
        Categories are subdivisions of an account.
        The default category holds the main balance and transactions. Savings goals and spending spaces are examples of other categories. You can use [`/api/v2/accounts`](#operations-tag-Accounts) to get the default category UID for an account.

        Standing orders that are awaiting review are omitted from the list.
      operationId: listStandingOrders
      parameters:
      - name: accountUid
        in: path
        description: Account uid
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa
      - name: categoryUid
        in: path
        description: Category uid
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandingOrdersResponse'
        "4xx":
          description: "Client error. See [API status codes](#api-status-codes-1)\
            \ for more details."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "5xx":
          description: "Server error. See [API status codes](#api-status-codes-1)\
            \ for more details."
      security:
      - oauth2:
        - standing-order:read
        - standing-order-own:read
    put:
      tags:
      - Payments
      summary: Create a new standing order
      description: |-
        Categories are subdivisions of an account.
        The default category holds the main balance and transactions. Savings goals and spending spaces are examples of other categories. You can use [`/api/v2/accounts`](#operations-tag-Accounts) to get the default category UID for an account.

        The recipient of the standing order must either be defined in the `paymentRecipient` field in the request body  or be an existing payee of the account holder (you can create a new payee using `/api/v2/payees`).

        `externalIdentifier` is a unique identifier for the standing order request, and is generated by you. To ensure idempotency, this must be unique for each standing order request you create.

        Note that the standing order may not be created immediately if we need to review the request. In that case, the request may remain in a `PENDING` state for a while (possibly for a few hours).
      operationId: createStandingOrder
      parameters:
      - name: accountUid
        in: path
        description: Account uid
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa
      - name: categoryUid
        in: path
        description: Category uid
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa
      requestBody:
        description: Standing order creation object.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateStandingOrderRequest'
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateStandingOrderResponse'
        "4xx":
          description: "Client error. See [API status codes](#api-status-codes-1)\
            \ for more details."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "5xx":
          description: "Server error. See [API status codes](#api-status-codes-1)\
            \ for more details."
      security:
      - oauth2+signature:
        - standing-order:create
  /api/v2/payments/local/payment-order/{paymentOrderUid}:
    get:
      tags:
      - Payments
      summary: Get a payment order
      operationId: getPaymentOrder
      parameters:
      - name: paymentOrderUid
        in: path
        description: Payment order uid
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentOrderV2'
        "4xx":
          description: "Client error. See [API status codes](#api-status-codes-1)\
            \ for more details."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "5xx":
          description: "Server error. See [API status codes](#api-status-codes-1)\
            \ for more details."
      security:
      - oauth2:
        - pay-local:read
  /api/v2/payments/local/payment-order/{paymentOrderUid}/payments:
    get:
      tags:
      - Payments
      summary: Get the payments associated with a payment order
      description: Note that a payment associated with a payment order may be pending
        (`paymentStatusDetails.paymentStatus = PENDING`)  or rejected (`paymentStatusDetails.paymentStatus
        = REJECTED`).
      operationId: getPaymentOrderPayments
      parameters:
      - name: paymentOrderUid
        in: path
        description: Payment order uid
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentOrderPaymentsResponse'
        "4xx":
          description: "Client error. See [API status codes](#api-status-codes-1)\
            \ for more details."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "5xx":
          description: "Server error. See [API status codes](#api-status-codes-1)\
            \ for more details."
      security:
      - oauth2:
        - pay-local:read
  /api/v2/payments/local/account/{accountUid}/category/{categoryUid}/standing-orders/{paymentOrderUid}/upcoming-payments:
    get:
      tags:
      - Payments
      summary: List the next payment dates of a standing order
      description: |-
        Categories are subdivisions of an account.
        The default category holds the main balance and transactions. Savings goals and spending spaces are examples of other categories. You can use [`/api/v2/accounts`](#operations-tag-Accounts) to get the default category UID for an account.

        If you only want the next payment date, you can also get this from the `nextDate` returned by `GET /api/v2/payments/local/account/{accountUid}/category/{categoryUid}/standing-orders/{paymentOrderUid}`.

        If `nextPaymentDates` is empty for a standing order, the standing order may be awaiting review, or may have been cancelled. Or it may have been a one-off standing order: in this case, `nextDate` will be null too.
      operationId: listNextPaymentDates
      parameters:
      - name: accountUid
        in: path
        description: Account uid
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa
      - name: categoryUid
        in: path
        description: Category uid
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa
      - name: paymentOrderUid
        in: path
        description: Payment Order uid
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa
      - name: count
        in: query
        description: "Number of next payment dates to retrieve, between 1 and 100.\
          \ If count is greater than the number of future payments all future payments\
          \ will be returned. Defaults to 10."
        required: false
        style: form
        explode: true
        schema:
          maximum: 100
          minimum: 1
          type: integer
          format: int32
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NextPaymentDatesResponse'
        "4xx":
          description: "Client error. See [API status codes](#api-status-codes-1)\
            \ for more details."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "5xx":
          description: "Server error. See [API status codes](#api-status-codes-1)\
            \ for more details."
      security:
      - oauth2:
        - standing-order:read
  /api/v2/payments/local/account/{accountUid}/category/{categoryUid}:
    put:
      tags:
      - Payments
      summary: Create payment
      description: |-
        Creates and sends an immediate payment within the UK under the Faster Payments Scheme or via SEPA for payments between Euro accounts.

        Categories are subdivisions of an account.
        The default category holds the main balance and transactions. Savings goals and spending spaces are examples of other categories. You can use [`/api/v2/accounts`](#operations-tag-Accounts) to get the default category UID for an account.

        The recipient of the payment must either be defined in the `paymentRecipient` field in the request body  or be an existing payee of the account holder (you can create a new payee using `/api/v2/payees`).

        `externalIdentifier` is a unique identifier for the payment request, and is generated by you. To ensure idempotency, this must be unique for each payment request you create.

        Note that the payment may not take place immediately if we need to review the payment request. In that case, the payment may remain in a `PENDING` state for a while (possibly for a few hours).
      operationId: makeLocalPayment
      parameters:
      - name: accountUid
        in: path
        description: Account uid
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa
      - name: categoryUid
        in: path
        description: Category uid
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa
      requestBody:
        description: Payment instruction object.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InstructLocalPaymentRequest'
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InstructLocalPaymentResponse'
        "4xx":
          description: "Client error. See [API status codes](#api-status-codes-1)\
            \ for more details."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "5xx":
          description: "Server error. See [API status codes](#api-status-codes-1)\
            \ for more details."
      security:
      - oauth2+signature:
        - pay-local:create
        - pay-local-once:create
  /api/v2/payees:
    get:
      tags:
      - Payees
      summary: Get an account holder's payees
      operationId: getPayees
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payees'
        "4xx":
          description: "Client error. See [API status codes](#api-status-codes-1)\
            \ for more details."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "5xx":
          description: "Server error. See [API status codes](#api-status-codes-1)\
            \ for more details."
      security:
      - oauth2:
        - payee:read
    put:
      tags:
      - Payees
      summary: Create a payee
      operationId: createPayee
      requestBody:
        description: Payee creation object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PayeeCreationRequest'
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayeeCreationResponse'
        "4xx":
          description: "Client error. See [API status codes](#api-status-codes-1)\
            \ for more details."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "5xx":
          description: "Server error. See [API status codes](#api-status-codes-1)\
            \ for more details."
      security:
      - oauth2:
        - payee:create
  /api/v2/payees/{payeeUid}/account:
    put:
      tags:
      - Payees
      summary: Create a payee account
      operationId: createPayeeAccount
      parameters:
      - name: payeeUid
        in: path
        description: Unique identifier of the payee
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa
      requestBody:
        description: Payee account creation object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PayeeAccountCreationRequest'
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayeeAccountCreationResponse'
        "4xx":
          description: "Client error. See [API status codes](#api-status-codes-1)\
            \ for more details."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "5xx":
          description: "Server error. See [API status codes](#api-status-codes-1)\
            \ for more details."
      security:
      - oauth2:
        - payee:create
  /api/v2/payees/{payeeUid}:
    get:
      tags:
      - Payees
      summary: Get a specific account holder payee
      operationId: getPayee
      parameters:
      - name: payeeUid
        in: path
        description: Unique identifier of the payee
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payee'
        "4xx":
          description: "Client error. See [API status codes](#api-status-codes-1)\
            \ for more details."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "5xx":
          description: "Server error. See [API status codes](#api-status-codes-1)\
            \ for more details."
      security:
      - oauth2:
        - payee:read
    put:
      tags:
      - Payees
      summary: Update a payee
      operationId: updatePayee
      parameters:
      - name: payeeUid
        in: path
        description: Unique identifier of the payee
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa
      requestBody:
        description: Payee update object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PayeeCreationRequest'
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConsentInformation'
        "4xx":
          description: "Client error. See [API status codes](#api-status-codes-1)\
            \ for more details."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "5xx":
          description: "Server error. See [API status codes](#api-status-codes-1)\
            \ for more details."
      security:
      - oauth2:
        - payee:edit
    delete:
      tags:
      - Payees
      summary: Deletes a payee
      operationId: deletePayee
      parameters:
      - name: payeeUid
        in: path
        description: Unique identifier of the payee
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa
      responses:
        "200":
          description: Successful operation
        "4xx":
          description: "Client error. See [API status codes](#api-status-codes-1)\
            \ for more details."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "5xx":
          description: "Server error. See [API status codes](#api-status-codes-1)\
            \ for more details."
      security:
      - oauth2:
        - payee:delete
  /api/v2/payees/{payeeUid}/account/{accountUid}:
    delete:
      tags:
      - Payees
      summary: Delete a payee account
      operationId: deletePayeeAccount
      parameters:
      - name: payeeUid
        in: path
        description: Unique identifier of the payee
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa
      - name: accountUid
        in: path
        description: Unique identifier of the payee account
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa
      responses:
        "200":
          description: Successful operation
        "4xx":
          description: "Client error. See [API status codes](#api-status-codes-1)\
            \ for more details."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "5xx":
          description: "Server error. See [API status codes](#api-status-codes-1)\
            \ for more details."
      security:
      - oauth2:
        - payee:delete
  /api/v2/payees/{payeeUid}/account/{accountUid}/scheduled-payments:
    get:
      tags:
      - Payees
      summary: Get scheduled payments
      operationId: listPaymentOrdersForAccount
      parameters:
      - name: payeeUid
        in: path
        description: Unique identifier of the payee
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa
      - name: accountUid
        in: path
        description: Unique identifier of the payee account
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScheduledPaymentResponse'
        "4xx":
          description: "Client error. See [API status codes](#api-status-codes-1)\
            \ for more details."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "5xx":
          description: "Server error. See [API status codes](#api-status-codes-1)\
            \ for more details."
      security:
      - oauth2:
        - scheduled-payment:read
  /api/v2/payees/{payeeUid}/account/{accountUid}/payments:
    get:
      tags:
      - Payees
      summary: View a history of payments to your payee
      operationId: listPaymentsForPayeeAccount
      parameters:
      - name: payeeUid
        in: path
        description: Unique identifier of the payee
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa
      - name: accountUid
        in: path
        description: Unique identifier of the payee account
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa
      - name: since
        in: query
        description: Start date for a transaction history
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: date
          example: 2023-04-05
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payments'
        "4xx":
          description: "Client error. See [API status codes](#api-status-codes-1)\
            \ for more details."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "5xx":
          description: "Server error. See [API status codes](#api-status-codes-1)\
            \ for more details."
      security:
      - oauth2:
        - payee-transaction:read
  /api/v2/payees/{payeeUid}/image:
    get:
      tags:
      - Payees
      summary: Serves the image for the payee
      operationId: servePayeeImageFile
      parameters:
      - name: payeeUid
        in: path
        description: Unique identifier of the payee
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa
      responses:
        "200":
          description: Successful operation
          content:
            image/png:
              schema:
                type: string
                format: binary
        "4xx":
          description: "Client error. See [API status codes](#api-status-codes-1)\
            \ for more details."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "5xx":
          description: "Server error. See [API status codes](#api-status-codes-1)\
            \ for more details."
      security:
      - oauth2:
        - payee-image:read
  /api/v2/account/{accountUid}/savings-goals/{savingsGoalUid}/add-money/{transferUid}:
    put:
      tags:
      - Savings Goals
      summary: Add money into a savings goal
      operationId: addMoney
      parameters:
      - name: accountUid
        in: path
        description: Account uid
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa
      - name: savingsGoalUid
        in: path
        description: Savings goal uid
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa
      - name: transferUid
        in: path
        description: "Transfer uid, generated by the caller"
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa
      requestBody:
        description: Top up request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TopUpRequestV2'
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SavingsGoalTransferResponseV2'
        "4xx":
          description: "Client error. See [API status codes](#api-status-codes-1)\
            \ for more details."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "5xx":
          description: "Server error. See [API status codes](#api-status-codes-1)\
            \ for more details."
      security:
      - oauth2:
        - savings-goal-transfer:create
  /api/v2/account/{accountUid}/savings-goals/{savingsGoalUid}/recurring-transfer:
    get:
      tags:
      - Savings Goals
      summary: Get the recurring transfer of a savings goal
      operationId: getRecurringTransfer
      parameters:
      - name: accountUid
        in: path
        description: Account uid
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa
      - name: savingsGoalUid
        in: path
        description: Savings goal uid
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScheduledSavingsPaymentV2'
        "4xx":
          description: "Client error. See [API status codes](#api-status-codes-1)\
            \ for more details."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "5xx":
          description: "Server error. See [API status codes](#api-status-codes-1)\
            \ for more details."
      security:
      - oauth2:
        - savings-goal-transfer:read
    put:
      tags:
      - Savings Goals
      summary: Create a recurring transfer into a savings goal
      operationId: createOrUpdateRecurringTransfer
      parameters:
      - name: accountUid
        in: path
        description: Account uid
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa
      - name: savingsGoalUid
        in: path
        description: Savings goal uid
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa
      requestBody:
        description: Recurring transfer request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScheduledSavingsPaymentRequestV2'
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SavingsGoalTransferResponseV2'
        "4xx":
          description: "Client error. See [API status codes](#api-status-codes-1)\
            \ for more details."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "5xx":
          description: "Server error. See [API status codes](#api-status-codes-1)\
            \ for more details."
      security:
      - oauth2:
        - savings-goal-transfer:create
    delete:
      tags:
      - Savings Goals
      summary: Delete the recurring transfer of a savings goal
      operationId: deleteRecurringTransfer
      parameters:
      - name: accountUid
        in: path
        description: Account uid
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa
      - name: savingsGoalUid
        in: path
        description: Savings goal uid
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa
      responses:
        "200":
          description: Successful operation
        "4xx":
          description: "Client error. See [API status codes](#api-status-codes-1)\
            \ for more details."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "5xx":
          description: "Server error. See [API status codes](#api-status-codes-1)\
            \ for more details."
      security:
      - oauth2:
        - savings-goal-transfer:delete
  /api/v2/account/{accountUid}/savings-goals:
    get:
      tags:
      - Savings Goals
      summary: Get all savings goals
      operationId: getSavingsGoals
      parameters:
      - name: accountUid
        in: path
        description: Account uid
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SavingsGoalsV2'
        "4xx":
          description: "Client error. See [API status codes](#api-status-codes-1)\
            \ for more details."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "5xx":
          description: "Server error. See [API status codes](#api-status-codes-1)\
            \ for more details."
      security:
      - oauth2:
        - savings-goal:read
    put:
      tags:
      - Savings Goals
      summary: Create a savings goal
      operationId: createSavingsGoal
      parameters:
      - name: accountUid
        in: path
        description: Account uid
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa
      requestBody:
        description: Savings goal request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SavingsGoalRequestV2'
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateOrUpdateSavingsGoalResponseV2'
        "4xx":
          description: "Client error. See [API status codes](#api-status-codes-1)\
            \ for more details."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "5xx":
          description: "Server error. See [API status codes](#api-status-codes-1)\
            \ for more details."
      security:
      - oauth2:
        - savings-goal:create
  /api/v2/account/{accountUid}/savings-goals/{savingsGoalUid}:
    get:
      tags:
      - Savings Goals
      summary: Get a savings goal
      operationId: getSavingsGoal
      parameters:
      - name: accountUid
        in: path
        description: Account uid
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa
      - name: savingsGoalUid
        in: path
        description: Savings goal uid
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SavingsGoalV2'
        "4xx":
          description: "Client error. See [API status codes](#api-status-codes-1)\
            \ for more details."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "5xx":
          description: "Server error. See [API status codes](#api-status-codes-1)\
            \ for more details."
      security:
      - oauth2:
        - savings-goal:read
    put:
      tags:
      - Savings Goals
      summary: Update an existing goal
      operationId: updateSavingsGoal
      parameters:
      - name: accountUid
        in: path
        description: Account uid
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa
      - name: savingsGoalUid
        in: path
        description: Savings goal uid
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa
      requestBody:
        description: Savings goal request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SavingsGoalRequestV2'
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateOrUpdateSavingsGoalResponseV2'
        "4xx":
          description: "Client error. See [API status codes](#api-status-codes-1)\
            \ for more details."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "5xx":
          description: "Server error. See [API status codes](#api-status-codes-1)\
            \ for more details."
      security:
      - oauth2:
        - savings-goal:create
    delete:
      tags:
      - Savings Goals
      summary: Delete a savings goal
      operationId: deleteSavingsGoal
      parameters:
      - name: accountUid
        in: path
        description: Account uid
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa
      - name: savingsGoalUid
        in: path
        description: Savings goal uid
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa
      responses:
        "200":
          description: Successful operation
        "4xx":
          description: "Client error. See [API status codes](#api-status-codes-1)\
            \ for more details."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "5xx":
          description: "Server error. See [API status codes](#api-status-codes-1)\
            \ for more details."
      security:
      - oauth2:
        - savings-goal:delete
  /api/v2/account/{accountUid}/savings-goals/{savingsGoalUid}/photo:
    get:
      tags:
      - Savings Goals
      summary: Get the photo associated with a savings goal
      operationId: getSavingsGoalPhoto
      parameters:
      - name: accountUid
        in: path
        description: Account uid
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa
      - name: savingsGoalUid
        in: path
        description: Savings goal uid
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SavingsGoalPhotoV2'
        "4xx":
          description: "Client error. See [API status codes](#api-status-codes-1)\
            \ for more details."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "5xx":
          description: "Server error. See [API status codes](#api-status-codes-1)\
            \ for more details."
      security:
      - oauth2:
        - savings-goal:read
  /api/v2/account/{accountUid}/savings-goals/{savingsGoalUid}/withdraw-money/{transferUid}:
    put:
      tags:
      - Savings Goals
      summary: Withdraw money from a savings goal
      operationId: withdrawMoney
      parameters:
      - name: accountUid
        in: path
        description: Account uid
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa
      - name: savingsGoalUid
        in: path
        description: Savings goal uid
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa
      - name: transferUid
        in: path
        description: "Transfer uid, generated by the caller"
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa
      requestBody:
        description: Withdrawal request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WithdrawalRequestV2'
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SavingsGoalTransferResponseV2'
        "4xx":
          description: "Client error. See [API status codes](#api-status-codes-1)\
            \ for more details."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "5xx":
          description: "Server error. See [API status codes](#api-status-codes-1)\
            \ for more details."
      security:
      - oauth2:
        - savings-goal-transfer:create
  /api/v2/settle-up/profile:
    get:
      tags:
      - Settle Up
      summary: Fetch Settle Up profile for an account holder
      operationId: getSettleUpProfile
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SettleUpProfile'
        "4xx":
          description: "Client error. See [API status codes](#api-status-codes-1)\
            \ for more details."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "5xx":
          description: "Server error. See [API status codes](#api-status-codes-1)\
            \ for more details."
      security:
      - oauth2:
        - settle-up:read
  /api/v2/account/{accountUid}/spaces/{spaceUid}/photo:
    get:
      tags:
      - Spaces
      summary: Get the photo associated with a space
      operationId: getSpacePhoto
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa
      - name: spaceUid
        in: path
        description: Space UID
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpacePhoto'
        "4xx":
          description: "Client error. See [API status codes](#api-status-codes-1)\
            \ for more details."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "5xx":
          description: "Server error. See [API status codes](#api-status-codes-1)\
            \ for more details."
      security:
      - oauth2:
        - space:read
  /api/v2/account/{accountUid}/spaces:
    get:
      tags:
      - Spaces
      summary: Get all active savings and spending spaces
      operationId: getSpaces
      parameters:
      - name: accountUid
        in: path
        description: Account uid
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Spaces'
        "4xx":
          description: "Client error. See [API status codes](#api-status-codes-1)\
            \ for more details."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "5xx":
          description: "Server error. See [API status codes](#api-status-codes-1)\
            \ for more details."
      security:
      - oauth2:
        - space:read
  /api/v2/account/{accountUid}/spaces/spending/{spaceUid}:
    get:
      tags:
      - Spaces
      summary: Get a spending space
      operationId: getSpendingSpace
      parameters:
      - name: accountUid
        in: path
        description: Account uid
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa
      - name: spaceUid
        in: path
        description: Spending space uid
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpendingSpace'
        "4xx":
          description: "Client error. See [API status codes](#api-status-codes-1)\
            \ for more details."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "5xx":
          description: "Server error. See [API status codes](#api-status-codes-1)\
            \ for more details."
      security:
      - oauth2:
        - space:read
  /api/v2/account/{accountUid}/spaces/{spaceUid}/daily-limit:
    put:
      tags:
      - Spaces
      summary: Get the recurring transfer of a space
      operationId: updateSpendingSpaceDailyLimit
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa
      - name: spaceUid
        in: path
        description: Space UID
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa
      requestBody:
        description: Spending Space Limit Update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SpendingSpaceDailyLimitUpdateRequest'
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: string
      security:
      - oauth2:
        - space-daily-limit:write
components:
  schemas:
    AccountStatementPeriod:
      required:
      - partial
      - period
      type: object
      properties:
        period:
          type: string
          description: The period for which the statement is available
          example: 2023-04
        partial:
          type: boolean
          description: Is the statement for this period partial
          example: true
        endsAt:
          type: string
          description: End timestamp for the period
          format: date-time
      description: A period for which an account statement is available
    AccountStatementPeriods:
      type: object
      properties:
        periods:
          type: array
          items:
            $ref: '#/components/schemas/AccountStatementPeriod'
      description: A list of periods for which an account statement is available
    ErrorDetail:
      type: object
      properties:
        message:
          type: string
          description: The error message
          example: Something about the error
      description: Detail of the error
    ErrorResponse:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ErrorDetail'
        success:
          type: boolean
          example: false
      description: Erroneous response wrapper
    BalanceV2:
      type: object
      properties:
        clearedBalance:
          $ref: '#/components/schemas/SignedCurrencyAndAmount'
        effectiveBalance:
          $ref: '#/components/schemas/SignedCurrencyAndAmount'
        pendingTransactions:
          $ref: '#/components/schemas/SignedCurrencyAndAmount'
        acceptedOverdraft:
          $ref: '#/components/schemas/SignedCurrencyAndAmount'
        amount:
          $ref: '#/components/schemas/SignedCurrencyAndAmount'
        totalClearedBalance:
          $ref: '#/components/schemas/SignedCurrencyAndAmount'
        totalEffectiveBalance:
          $ref: '#/components/schemas/SignedCurrencyAndAmount'
      description: Balance details
    SignedCurrencyAndAmount:
      required:
      - currency
      - minorUnits
      type: object
      properties:
        currency:
          type: string
          description: ISO-4217 3 character currency code
          example: GBP
        minorUnits:
          minimum: -9223372036854775808
          type: integer
          description: "Amount in the minor units of the given currency; eg pence\
            \ in GBP, cents in EUR"
          format: int64
          example: 123456
    AccountIdentifier:
      type: object
      properties:
        identifierType:
          type: string
          description: The type of account identifier
          example: SORT_CODE
          enum:
          - SORT_CODE
          - IBAN_BIC
          - ABA_ACH
        bankIdentifier:
          type: string
          description: "Identifier to uniquely identify the bank, e.g. a sort code\
            \ or BIC"
          example: "608371"
        accountIdentifier:
          type: string
          description: "Identifier to uniquely identify the account at the bank, e.g.\
            \ an account number or IBAN"
          example: "47675488"
      description: Bank and account identifiers for a particular identifier type
    AccountIdentifiers:
      type: object
      properties:
        accountIdentifier:
          type: string
          description: Identifier to uniquely identify the account at the bank
          example: "01234567"
        bankIdentifier:
          type: string
          description: Identifier to uniquely identify the bank
          example: "608371"
        iban:
          type: string
          description: International identifier to uniquely identify the account at
            the bank
          example: GB63SRLG60837101234567
        bic:
          type: string
          description: International identifier to uniquely identify the bank
          example: SRLGGB2L
        accountIdentifiers:
          type: array
          items:
            $ref: '#/components/schemas/AccountIdentifier'
      description: Bank account identifiers
    AccountV2:
      type: object
      properties:
        accountUid:
          type: string
          format: uuid
          example: bbccbbcc-bbcc-bbcc-bbcc-bbccbbccbbcc
        accountType:
          type: string
          example: PRIMARY
          enum:
          - PRIMARY
          - ADDITIONAL
          - LOAN
          - FIXED_TERM_DEPOSIT
        defaultCategory:
          type: string
          format: uuid
          example: ccddccdd-ccdd-ccdd-ccdd-ccddccddccdd
        currency:
          type: string
          example: GBP
          enum:
          - UNDEFINED
          - AED
          - AFN
          - ALL
          - AMD
          - ANG
          - AOA
          - ARS
          - AUD
          - AWG
          - AZN
          - BAM
          - BBD
          - BDT
          - BGN
          - BHD
          - BIF
          - BMD
          - BND
          - BOB
          - BOV
          - BRL
          - BSD
          - BTN
          - BWP
          - BYN
          - BYR
          - BZD
          - CAD
          - CDF
          - CHE
          - CHF
          - CHW
          - CLF
          - CLP
          - CNY
          - COP
          - COU
          - CRC
          - CUC
          - CUP
          - CVE
          - CZK
          - DJF
          - DKK
          - DOP
          - DZD
          - EGP
          - ERN
          - ETB
          - EUR
          - FJD
          - FKP
          - GBP
          - GEL
          - GHS
          - GIP
          - GMD
          - GNF
          - GTQ
          - GYD
          - HKD
          - HNL
          - HRK
          - HTG
          - HUF
          - IDR
          - ILS
          - INR
          - IQD
          - IRR
          - ISK
          - JMD
          - JOD
          - JPY
          - KES
          - KGS
          - KHR
          - KMF
          - KPW
          - KRW
          - KWD
          - KYD
          - KZT
          - LAK
          - LBP
          - LKR
          - LRD
          - LSL
          - LTL
          - LYD
          - MAD
          - MDL
          - MGA
          - MKD
          - MMK
          - MNT
          - MOP
          - MRO
          - MRU
          - MUR
          - MVR
          - MWK
          - MXN
          - MXV
          - MYR
          - MZN
          - NAD
          - NGN
          - NIO
          - NOK
          - NPR
          - NZD
          - OMR
          - PAB
          - PEN
          - PGK
          - PHP
          - PKR
          - PLN
          - PYG
          - QAR
          - RON
          - RSD
          - RUB
          - RUR
          - RWF
          - SAR
          - SBD
          - SCR
          - SDG
          - SEK
          - SGD
          - SHP
          - SLL
          - SLE
          - SOS
          - SRD
          - SSP
          - STD
          - STN
          - SVC
          - SYP
          - SZL
          - THB
          - TJS
          - TMT
          - TND
          - TOP
          - TRY
          - TTD
          - TWD
          - TZS
          - UAH
          - UGX
          - USD
          - USN
          - USS
          - UYI
          - UYU
          - UZS
          - VEF
          - VES
          - VND
          - VUV
          - WST
          - XAF
          - XAG
          - XAU
          - XBA
          - XBB
          - XBC
          - XBD
          - XCD
          - XDR
          - XOF
          - XPD
          - XPF
          - XPT
          - XSU
          - XTS
          - XUA
          - XXX
          - YER
          - ZAR
          - ZMW
          - ZWL
        createdAt:
          type: string
          format: date-time
        name:
          type: string
          example: Personal
      description: Bank account details
    Accounts:
      type: object
      properties:
        accounts:
          type: array
          items:
            $ref: '#/components/schemas/AccountV2'
      description: The accounts of an account holder
    ConfirmationOfFundsResponse:
      type: object
      properties:
        requestedAmountAvailableToSpend:
          type: boolean
          description: True if requested amount is available to spend
          example: true
        accountWouldBeInOverdraftIfRequestedAmountSpent:
          type: boolean
          description: True if spending the requested amount would put the account
            in overdraft
          example: true
    Business:
      type: object
      properties:
        companyName:
          type: string
          example: Starling Bank
        companyType:
          type: string
          example: LTD
        companyCategory:
          type: string
          example: FINANCIAL_SERVICES_AND_PRODUCTS
        companySubCategory:
          type: string
          example: FINANCIAL_AND_INVESTMENT_ADVICE
        companyRegistrationNumber:
          type: string
          example: "09092149"
        email:
          type: string
          example: help@starlingbank.com
        phone:
          type: string
          example: "442079304450"
      description: Details of a business account holder
    AddressV2:
      required:
      - countryCode
      - line1
      - postCode
      - postTown
      type: object
      properties:
        line1:
          type: string
          example: 1A Admiralty Arch
        line2:
          type: string
          example: The Mall
        line3:
          type: string
          example: City of Westminster
        postTown:
          type: string
          example: London
        postCode:
          type: string
          example: SW1A 2WH
        countryCode:
          type: string
          description: "Country code in ISO 3166-1 alpha-2. NB GB is the official\
            \ country code for the UK. UK is not the officially assigned code, and\
            \ so is not valid"
          example: GB
      description: Physical address of account holder
    Individual:
      type: object
      properties:
        title:
          type: string
          example: Mr
        firstName:
          type: string
          example: Dave
        lastName:
          type: string
          example: Bowman
        dateOfBirth:
          type: string
          format: date
          example: 1968-04-02
        email:
          type: string
          example: dave.bowman@example.com
        phone:
          type: string
          example: "447700900123"
      description: Information about an individual account holder
    UpdateEmailRequest:
      required:
      - email
      type: object
      properties:
        email:
          type: string
          description: The new email address for the account holder
          example: dave.bowman@example.com
    JointAccount:
      type: object
      properties:
        accountHolderUid:
          type: string
          format: uuid
          example: aabbaabb-aabb-aabb-aabb-aabbaabbaabb
        personOne:
          $ref: '#/components/schemas/Individual'
        personTwo:
          $ref: '#/components/schemas/Individual'
      description: Information about a joint account
    SoleTrader:
      type: object
      properties:
        tradingAsName:
          type: string
          description: Trading as name
          example: Starling Bank
        businessCategory:
          type: string
          description: Business category
          example: FINANCIAL_SERVICES_AND_PRODUCTS
          enum:
          - NOT_PROVIDED
          - ARTS_CRAFTS_AND_COLLECTIBLES
          - BABY
          - BEAUTY_AND_FRAGRANCES
          - BOOKS_AND_MAGAZINES
          - BUSINESS_TO_BUSINESS
          - CLOTHING_ACCESSORIES_AND_SHOES
          - COMPUTERS_ACCESSORIES_AND_SERVICES
          - EDUCATION
          - ELECTRONICS_AND_TELECOM
          - ENTERTAINMENT_AND_MEDIA
          - FINANCIAL_SERVICES_AND_PRODUCTS
          - FOOD_RETAIL_AND_SERVICE
          - GIFTS_AND_FLOWERS
          - HEALTH_AND_PERSONAL_CARE
          - HOME_AND_GARDEN
          - NONPROFIT
          - PETS_AND_ANIMALS
          - RELIGION_AND_SPIRITUALITY_FOR_PROFIT
          - RETAIL_NOT_ELSEWHERE_CLASSIFIED
          - SERVICES_OTHER
          - SPORTS_AND_OUTDOORS
          - TOYS_AND_HOBBIES
          - TRAVEL
          - VEHICLE_SERVICE_AND_ACCESSORIES
          - PROFESSIONAL_SERVICES
          - RETAIL_BARS_AND_RESTAURANTS
          - ENTERTAINMENT_AND_TRAVEL
          - HEALTH_AND_SOCIAL_CARE
          - TRANSPORT_AND_VEHICLES
          - CONSTRUCTION_TRADES_AND_CLEANING
          - PROPERTY
          - EXERCISE_AND_FITNESS
          - EDUCATION_AND_SKILLS
          - NON_PROFIT
          - MANUFACTURING_RND_AND_AGRICULTURE
        businessSubCategory:
          type: string
          description: Business subcategory
          example: FINANCIAL_AND_INVESTMENT_ADVICE
          enum:
          - NOT_PROVIDED
          - ART_AND_CRAFT_SUPPLIES
          - ART_DEALERS_AND_GALLERIES
          - CAMERA_AND_PHOTOGRAPHIC_SUPPLIES
          - DIGITAL_ART
          - MEMORABILIA
          - MUSIC_STORE_INSTRUMENTS_AND_SHEET_MUSIC
          - SEWING_NEEDLEWORK_AND_FABRICS
          - STAMP_AND_COIN
          - STATIONARY_PRINTING_AND_WRITING_PAPER
          - VINTAGE_AND_COLLECTIBLES
          - CLOTHING
          - FURNITURE
          - BABY_PRODUCTS_OTHER
          - SAFETY_AND_HEALTH
          - BATH_AND_BODY
          - FRAGRANCES_AND_PERFUMES
          - MAKEUP_AND_COSMETICS
          - AUDIO_BOOKS
          - DIGITAL_CONTENT
          - EDUCATIONAL_AND_TEXTBOOKS
          - FICTION_AND_NONFICTION
          - MAGAZINES
          - BOOKS_PUBLISHING_AND_PRINTING
          - RARE_AND_USED_BOOKS
          - ACCOUNTING
          - ADVERTISING
          - AGRICULTURAL
          - ARCHITECTURAL_ENGINEERING_AND_SURVEYING_SERVICES
          - CHEMICALS_AND_ALLIED_PRODUCTS
          - COMMERCIAL_PHOTOGRAPHY_ART_AND_GRAPHICS
          - CONSTRUCTION
          - CONSULTING_SERVICES
          - EDUCATIONAL_SERVICES
          - EQUIPMENT_RENTALS_AND_LEASING_SERVICES
          - EQUIPMENT_REPAIR_SERVICES
          - HIRING_SERVICES
          - INDUSTRIAL_AND_MANUFACTURING_SUPPLIES
          - MAILING_LISTS
          - MARKETING
          - MULTILEVEL_MARKETING
          - OFFICE_AND_COMMERCIAL_FURNITURE
          - OFFICE_SUPPLIES_AND_EQUIPMENT
          - PUBLISHING_AND_PRINTING
          - QUICK_COPY_AND_REPRODUCTION_SERVICES
          - SHIPPING_AND_PACKING
          - STENOGRAPHIC_AND_SECRETARIAL_SUPPORT_SERVICES
          - WHOLESALE
          - CHILDRENS_CLOTHING
          - MENS_CLOTHING
          - WOMENS_CLOTHING
          - SHOES
          - MILITARY_AND_CIVIL_SERVICE_UNIFORMS
          - ACCESSORIES
          - RETAIL_FINE_JEWELRY_AND_WATCHES
          - WHOLESALE_PRECIOUS_STONES_AND_METALS
          - FASHION_JEWELLERY
          - COMPUTER_AND_DATA_PROCESSING_SERVICES
          - DESKTOPS_LAPTOPS_AND_NOTEBOOKS
          - COMPUTER_DIGITAL_CONTENT
          - ECOMMERCE_SERVICES
          - MAINTENANCE_AND_REPAIR_SERVICES
          - MONITORS_AND_PROJECTORS
          - NETWORKING
          - ONLINE_GAMING
          - PARTS_AND_ACCESSORIES
          - PERIPHERALS
          - SOFTWARE
          - TRAINING_SERVICES
          - WEB_HOSTING_AND_DESIGN
          - BUSINESS_AND_SECRETARIAL_SCHOOLS
          - CHILD_DAYCARE_SERVICES
          - DANCE_HALLS_STUDIOS_AND_SCHOOLS
          - VOCATIONAL_AND_TRADE_SCHOOLS
          - CAMERAS_CAMCORDERS_AND_EQUIPMENT
          - CELL_PHONES_PDAS_AND_PAGERS
          - GENERAL_ELECTRONIC_ACCESSORIES
          - HOME_AUDIO
          - HOME_ELECTRONICS
          - SECURITY_AND_SURVEILLANCE
          - TELECOMMUNICATION_EQUIPMENT_AND_SALES
          - TELECOMMUNICATION_SERVICES
          - TELEPHONE_CARDS
          - ENTERTAINMENT_MEMORABILIA
          - MOVIE_TICKETS
          - MOVIES_DVDS_VIDEOTAPES
          - MUSIC_CDS_CASSETTES_AND_ALBUMS
          - CABLE_SATELLITE_AND_OTHER_PAY_TV_AND_RADIO
          - CONCERT_TICKETS
          - THEATER_TICKETS
          - TOYS_AND_GAMES
          - ENTERTAINMENT_DIGITAL_CONTENT
          - ENTERTAINERS
          - ONLINE_GAMES
          - VIDEO_GAMES_AND_SYSTEMS
          - FINANCIAL_ACCOUNTING
          - DEBT_COUNSELING_SERVICE
          - FINANCIAL_AND_INVESTMENT_ADVICE
          - REAL_ESTATE_AGENT
          - RENTAL_PROPERTY_MANAGEMENT
          - ALCOHOLIC_BEVERAGES
          - CATERING_SERVICES
          - COFFEE_AND_TEA
          - GOURMET_FOODS
          - SPECIALTY_AND_MISCELLANEOUS_FOOD_STORES
          - RESTAURANT
          - TOBACCO
          - VITAMINS_AND_SUPPLEMENTS
          - FLORIST
          - GIFT_CARD_NOVELTY_AND_SOUVENIR_SHOPS
          - GIFTS_GOURMET_FOODS
          - NURSERY_PLANTS_AND_FLOWERS
          - PARTY_SUPPLIES
          - DENTAL_CARE
          - MEDICAL_CARE
          - MEDICAL_EQUIPMENT_AND_SUPPLIES
          - VISION_CARE
          - HEALTH_VITAMINS_AND_SUPPLEMENTS
          - APPLIANCES
          - HOME_ART_DEALERS_AND_GALLERIES
          - BED_AND_BATH
          - CONSTRUCTION_MATERIAL
          - DRAPERY_WINDOW_COVERING_AND_UPHOLSTERY
          - EXTERMINATING_AND_DISINFECTING_SERVICES
          - FIREPLACE_AND_FIREPLACE_SCREENS
          - HOME_FURNITURE
          - GARDEN_SUPPLIES
          - GLASS_PAINT_AND_WALLPAPER
          - HARDWARE_AND_TOOLS
          - HOME_DECOR
          - HOUSEWARES
          - KITCHENWARE
          - LANDSCAPING
          - RUGS_AND_CARPETS
          - SECURITY_AND_SURVEILLANCE_EQUIPMENT
          - SWIMMING_POOLS_AND_SPAS
          - CHARITY
          - POLITICAL
          - RELIGIOUS
          - OTHER
          - PERSONAL
          - EDUCATIONAL
          - MEDICATION_AND_SUPPLEMENTS
          - PET_SHOPS_PET_FOOD_AND_SUPPLIES
          - SPECIALTY_OR_RARE_PETS
          - VETERINARY_SERVICES
          - MEMBERSHIP_SERVICES
          - MERCHANDISE
          - SERVICES_NOT_ELSEWHERE_CLASSIFIED
          - RETAIL_CHEMICALS_AND_ALLIED_PRODUCTS
          - DEPARTMENT_STORE
          - DISCOUNT_STORE
          - DURABLE_GOODS
          - NONDURABLE_GOODS
          - USED_AND_SECONDHAND_STORE
          - VARIETY_STORE
          - SERVICES_ADVERTISING
          - SHOPPING_SERVICES_AND_BUYING_CLUBS
          - CAREER_SERVICES
          - CARPENTRY
          - CHILD_CARE_SERVICES
          - CLEANING_AND_MAINTENANCE
          - COMMERCIAL_PHOTOGRAPHY
          - SERVICES_COMPUTER_AND_DATA_PROCESSING_SERVICES
          - COMPUTER_NETWORK_SERVICES
          - SERVICES_CONSULTING_SERVICES
          - COUNSELING_SERVICES
          - COURIER_SERVICES
          - SERVICES_DENTAL_CARE
          - SERVICES_ECOMMERCE_SERVICES
          - ELECTRICAL_AND_SMALL_APPLIANCE_REPAIR
          - ENTERTAINMENT
          - EQUIPMENT_RENTAL_AND_LEASING_SERVICES
          - EVENT_AND_WEDDING_PLANNING
          - GENERAL_CONTRACTORS
          - GRAPHIC_AND_COMMERCIAL_DESIGN
          - HEALTH_AND_BEAUTY_SPAS
          - IDS_LICENSES_AND_PASSPORTS
          - IMPORTING_AND_EXPORTING
          - INFORMATION_RETRIEVAL_SERVICES
          - LANDSCAPING_AND_HORTICULTURAL
          - LEGAL_SERVICES_AND_ATTORNEYS
          - LOCAL_DELIVERY_SERVICE
          - SERVICES_MEDICAL_CARE
          - MEMBERSHIP_CLUBS_AND_ORGANIZATIONS
          - SERVICES_MISC_PUBLISHING_AND_PRINTING
          - MOVING_AND_STORAGE
          - PHOTOFINISHING
          - PHOTOGRAPHIC_STUDIOS__PORTRAITS
          - PROTECTIVE_AND_SECURITY_SERVICES
          - SERVICES_QUICK_COPY_AND_REPRODUCTION_SERVICES
          - RADIO_TELEVISION_AND_STEREO_REPAIR
          - REAL_ESTATE_AGENT_
          - SERVICES_RENTAL_PROPERTY_MANAGEMENT
          - REUPHOLSTERY_AND_FURNITURE_REPAIR
          - SERVICES_SERVICES_NOT_ELSEWHERE_CLASSIFIED
          - SERVICES_SHIPPING_AND_PACKING
          - SWIMMING_POOL_SERVICES
          - TAILORS_AND_ALTERATIONS
          - TELECOMMUNICATION_SERVICE
          - UTILITIES
          - SERVICES_VISION_CARE
          - WATCH_CLOCK_AND_JEWELRY_REPAIR
          - ATHLETIC_SHOES
          - BICYCLE_SHOP_SERVICE_AND_REPAIR
          - BOATING_SAILING_AND_ACCESSORIES
          - CAMPING_AND_OUTDOORS
          - SPORTS_DANCE_HALLS_STUDIOS_AND_SCHOOLS
          - EXERCISE_AND_FITNESS
          - FAN_GEAR_AND_MEMORABILIA
          - HUNTING
          - MARTIAL_ARTS_WEAPONS
          - SPORT_GAMES_AND_TOYS
          - SPORTING_EQUIPMENT
          - SPORTS_SWIMMING_POOLS_AND_SPAS
          - ARTS_AND_CRAFTS
          - HOBBIES_CAMERA_AND_PHOTOGRAPHIC_SUPPLIES
          - HOBBY_TOY_AND_GAME_SHOPS
          - HOBBIES_MEMORABILIA
          - MUSIC_STORE__INSTRUMENTS_AND_SHEET_MUSIC
          - HOBBIES_STAMP_AND_COIN
          - HOBBIES_STATIONARY_PRINTING_AND_WRITING_PAPER
          - HOBBIES_VINTAGE_AND_COLLECTIBLES
          - HOBBIES_VIDEO_GAMES_AND_SYSTEMS
          - AIRLINE
          - AUTO_RENTAL
          - BUS_LINE
          - CRUISES
          - LODGING_AND_ACCOMMODATIONS
          - LUGGAGE_AND_LEATHER_GOODS
          - RECREATIONAL_SERVICES
          - SPORTING_AND_RECREATION_CAMPS
          - TAXICABS_AND_LIMOUSINES
          - TIMESHARES
          - TOURS
          - TRAILER_PARKS_OR_CAMPGROUNDS
          - TRANSPORTATION_SERVICES__OTHER
          - TRAVEL_AGENCY
          - NEW_PARTS_AND_SUPPLIES__MOTOR_VEHICLE
          - USED_PARTS__MOTOR_VEHICLE
          - AUDIO_AND_VIDEO
          - AUTO_BODY_REPAIR_AND_PAINT
          - SERVICES_AUTO_RENTAL
          - AUTO_SERVICE
          - AUTOMOTIVE_TIRE_SUPPLY_AND_SERVICE
          - BOAT_RENTAL_AND_LEASES
          - CAR_WASH
          - MOTOR_HOME_AND_RECREATIONAL_VEHICLE_RENTAL
          - TOOLS_AND_EQUIPMENT
          - TOWING_SERVICE
          - TRUCK_AND_UTILITY_TRAILER_RENTAL
          - VEHICLE_ACCESSORIES
          - CLEANING
          - DECORATING
          - ELECTRICIAN
          - PLUMBER
          - GAS_AND_HEATING
          - CARPENTRY_TRADE
          - ROOFING
          - GARDENING_AND_TREE_SURGERY
          - GENERAL_CONTRACTOR
          - CONSTRUCTION_SUPPLIER
          - WASTE_AND_RECYCLING
          - SCRAP_METAL
          - SITE_AND_BUILDING_MANAGEMENT
          - PEST_CONTROL
          - CONSTRUCTION_TRADES_AND_CLEANING_OTHER
          - PERSONAL_TUTOR
          - MUSIC_TEACHERS
          - PROFESSIONAL_TRAINER
          - PUBLIC_SPEAKING
          - NURSERY
          - CHILDMINDER
          - NANNY_OR_AU_PAIR
          - CHILDRENS_ACTIVITIES
          - STUDENT_RECRUITMENT
          - STUDENT_SUPPORT
          - SCHOOLS_COLLEGES_AND_TRAINING
          - EDUCATION_AND_SKILLS_OTHER
          - DIGITAL_CONTENT_OR_GAMES
          - VIDEO_PRODUCTION
          - INFLUENCER
          - PROMOTION_AND_PUBLISHING
          - CATERING
          - ENTERTAINERS_AND_DJS
          - EVENTS_AND_WEDDINGS
          - EVENTS_PRODUCTS
          - EVENTS_STAFFING_AND_SERVICES
          - TRAVEL_AGENT
          - TOUR_GUIDE
          - LODGING_AND_ACCOMMODATION
          - TV_AND_RADIO
          - MUSICIAN_OR_GROUPS
          - ENTERTAINMENT_AND_TRAVEL_OTHER
          - PERSONAL_TRAINER
          - SPORTS_COACH
          - SPORTS_CLUB
          - SPORTS_AND_FITNESS_VENUE
          - GYM_OPERATOR
          - CLASS_INSTRUCTOR
          - EXERCISE_AND_FITNESS_OTHER
          - DOCTOR_NURSE_OR_MIDWIFE
          - PHARMACY
          - PERSONAL_AND_SOCIAL_CARE
          - PHYSIOTHERAPIST
          - NUTRITION_AND_DIET
          - MENTAL_HEALTH_AND_COUNSELLING
          - MEDICAL_EQUIPMENT_AND_SUPPLIERS
          - DENTAL
          - OPTICIAN
          - OTHER_MEDICAL_THERAPY
          - CHIROPRACTOR_OR_OSTEOPATH
          - PODIATRIST
          - COMPLIMENTARY_AND_ALTERNATIVE_MEDICINE
          - HEALTH_AND_SOCIAL_CARE_OTHER
          - MANUFACTURING
          - INDUSTRIAL_ENGINEER
          - FOOD_OR_DRINK_PRODUCTION
          - RESEARCH_AND_DEVELOPMENT
          - LIVESTOCK_FARMING
          - CROP_FARMING
          - HORTICULTURE_OR_PLANT_NURSERY
          - FORESTRY
          - VETERINARY
          - SUPPLIER_TO_AGRICULTURE_OR_INDUSTRY
          - EQUESTRIAN
          - ANIMAL_CARE
          - ARMS_MANUFACTURER
          - MINING
          - OIL_AND_GAS
          - COAL
          - COMMERCIAL_FISHING
          - MANUFACTURING_RND_AND_AGRICULTURE_OTHER
          - ANIMALS
          - ARTS_CULTURE_AND_HUMANITIES
          - COMMUNITY_DEVELOPMENT
          - EDUCATION
          - ENVIRONMENT
          - HEALTH_AND_DISEASE
          - HUMAN_AND_CIVIL_RIGHTS
          - CHILDREN_YOUTH_AND_FAMILY
          - HOMELESSNESS
          - INTERNATIONAL
          - RESEARCH_AND_PUBLIC_POLICY
          - RELIGION
          - POLITICAL_PARTY
          - NON_PROFIT_OTHER
          - ARCHITECT_STRUCTURAL_ENGINEER_OR_SURVEYOR
          - ACCOUNTANCY_AND_BOOKKEEPING
          - BUSINESS_SERVICES
          - FINANCIAL_OR_INVESTMENT_ADVICE
          - MORTGAGE_BROKERS
          - SOFTWARE_AND_IT
          - WEBSITE_DEVELOPMENT
          - MANAGEMENT_CONSULTANCY
          - PROJECT_MANAGEMENT
          - MARKETING_ADVERTISING_AND_DESIGN
          - GRAPHIC_DESIGN_AND_ILLUSTRATION
          - INTERIOR_DESIGN
          - RECRUITMENT_AND_HIRING
          - LEGAL
          - PHOTOGRAPHY
          - SECURITY
          - PROBATE_ESTATE_MANAGEMENT
          - PAYROLL_PROVIDER
          - INSOLVENCY_PRACTITIONER
          - TRUST_AND_COMPANY_SERVICE
          - PROFESSIONAL_SERVICES_OTHER
          - RETAIL_DEPOSIT_TAKER
          - DEBT_MANAGEMENT
          - DEBT_COLLECTOR
          - ASSET_FINANCE
          - BUY_NOW_PAY_LATER
          - PEER_TO_PEER_LENDING
          - PAY_DAY_LENDER
          - PAWN_BROKER
          - CREDIT_CARDS
          - TERM_LOANS
          - MORTGAGE_LENDER
          - CLAIMS_MANAGEMENT
          - EMONEY_PREPAID
          - INSURANCE
          - PENSION_PROVIDER
          - CREDIT_REFERENCE_AGENCY
          - CURRENCY_EXCHANGE
          - CRYPTO_EXCHANGE
          - COMMODITY_EXCHANGE
          - MONEY_TRANSFER
          - INVESTMENT_BANK
          - FUND_MANAGER
          - FUND_MANAGEMENT
          - INTERNATIONAL_FINANCE
          - MERCHANT_BANKING
          - MARKET_MAKER
          - SHARE_TRADING
          - EQUITIES_TRADING
          - DERIVATIVES_TRADING
          - FX_TRADING
          - INVESTMENT_MANAGEMENT
          - ASSET_MANAGEMENT
          - INVESTMENT_DEAL_ARRANGEMENTS
          - BEARER_SHARES
          - PROPERTY_OWNER
          - PROPERTY_INVESTOR
          - PROPERTY_INVESTMENT_FUND
          - RESIDENTS_ASSOCIATION
          - LEASEHOLD_OR_FREEHOLD
          - HOLIDAY_OR_SHORT_TERM_LETS
          - PROPERTY_REDEVELOPMENT
          - ESTATE_AGENT
          - PROPERTY_MANAGEMENT
          - STORAGE
          - PROPERTY_OTHER
          - RESTAURANT_OR_CAFE
          - TAKEAWAY
          - STREET_FOOD_OR_MARKET_STALL
          - RETAIL
          - WHOLESALING
          - SALONS
          - NAIL_PARLOUR
          - TATTOO_PARLOUR
          - AT_HOME_SERVICES
          - LICENSED_RETAIL
          - LICENSED_FOOD_VENUE
          - NEWSAGENTS_CONVENIENCE_STORES
          - MOBILE_PHONE_SALES
          - IMPORT_EXPORT
          - AUCTION_HOUSE
          - FIREARMS_MILITARY_GOODS
          - GAMBLING_BETTING
          - JEWELLERY_PRECIOUS_STONES_OR_METALS
          - ANTIQUE_ART_DEALER
          - DATING_ESCORT_SERVICES
          - ADULT_INDUSTRY
          - ILLEGAL_OR_UNLICENSED_DRUGS
          - DROPSHIPPING
          - RETAIL_BARS_AND_RESTAURANTS_OTHER
          - HGV_OR_BUS_OR_COACH_DRIVER
          - TAXI_OR_PRIVATE_HIRE_DRIVER
          - TRAIN_DRIVER
          - OTHER_PROFESSIONAL_DRIVER
          - HOME_DELIVERY_AND_COURIER_FIRMS
          - HAULAGE_FIRMS
          - TAXI_OR_PRIVATE_HIRE_OPERATOR
          - MINIBUS_OR_COACH_OPERATOR
          - VEHICLE_REPAIR_AND_MAINTENANCE
          - NEW_CARS_OR_VEHICLE_SALES
          - VEHICLE_RENTAL
          - BICYCLE_SHOPS
          - USED_CAR_OR_VEHICLE_SALES
          - VEHICLE_PARTS
          - CAR_WASHING
          - TRANSPORT_AND_VEHICLES_OTHER
      description: Response object contain sole trader business details
    SpendingCounterPartyBreakdown:
      type: object
      properties:
        counterPartyUid:
          type: string
          format: uuid
          example: 68e16af4-c2c3-413b-bf93-1056b90097fa
        counterPartyType:
          type: string
          description: The type of counter party for a transaction
          example: MERCHANT
          enum:
          - CATEGORY
          - CHEQUE
          - CUSTOMER
          - PAYEE
          - MERCHANT
          - SENDER
          - STARLING
          - LOAN
        counterPartyName:
          type: string
          example: Tesco
        totalSpent:
          minimum: 0
          type: number
          description: Amount spent at/sent to this counter party
          example: 123.45
        totalReceived:
          minimum: 0
          type: number
          description: Amount received from this counter party
          example: 23.45
        netSpend:
          minimum: 0
          type: number
          example: 100.0
        netDirection:
          type: string
          description: Was this an inbound or outbound transaction
          example: OUT
          enum:
          - IN
          - OUT
        currency:
          type: string
          example: GBP
          enum:
          - UNDEFINED
          - AED
          - AFN
          - ALL
          - AMD
          - ANG
          - AOA
          - ARS
          - AUD
          - AWG
          - AZN
          - BAM
          - BBD
          - BDT
          - BGN
          - BHD
          - BIF
          - BMD
          - BND
          - BOB
          - BOV
          - BRL
          - BSD
          - BTN
          - BWP
          - BYN
          - BYR
          - BZD
          - CAD
          - CDF
          - CHE
          - CHF
          - CHW
          - CLF
          - CLP
          - CNY
          - COP
          - COU
          - CRC
          - CUC
          - CUP
          - CVE
          - CZK
          - DJF
          - DKK
          - DOP
          - DZD
          - EGP
          - ERN
          - ETB
          - EUR
          - FJD
          - FKP
          - GBP
          - GEL
          - GHS
          - GIP
          - GMD
          - GNF
          - GTQ
          - GYD
          - HKD
          - HNL
          - HRK
          - HTG
          - HUF
          - IDR
          - ILS
          - INR
          - IQD
          - IRR
          - ISK
          - JMD
          - JOD
          - JPY
          - KES
          - KGS
          - KHR
          - KMF
          - KPW
          - KRW
          - KWD
          - KYD
          - KZT
          - LAK
          - LBP
          - LKR
          - LRD
          - LSL
          - LTL
          - LYD
          - MAD
          - MDL
          - MGA
          - MKD
          - MMK
          - MNT
          - MOP
          - MRO
          - MRU
          - MUR
          - MVR
          - MWK
          - MXN
          - MXV
          - MYR
          - MZN
          - NAD
          - NGN
          - NIO
          - NOK
          - NPR
          - NZD
          - OMR
          - PAB
          - PEN
          - PGK
          - PHP
          - PKR
          - PLN
          - PYG
          - QAR
          - RON
          - RSD
          - RUB
          - RUR
          - RWF
          - SAR
          - SBD
          - SCR
          - SDG
          - SEK
          - SGD
          - SHP
          - SLL
          - SLE
          - SOS
          - SRD
          - SSP
          - STD
          - STN
          - SVC
          - SYP
          - SZL
          - THB
          - TJS
          - TMT
          - TND
          - TOP
          - TRY
          - TTD
          - TWD
          - TZS
          - UAH
          - UGX
          - USD
          - USN
          - USS
          - UYI
          - UYU
          - UZS
          - VEF
          - VES
          - VND
          - VUV
          - WST
          - XAF
          - XAG
          - XAU
          - XBA
          - XBB
          - XBC
          - XBD
          - XCD
          - XDR
          - XOF
          - XPD
          - XPF
          - XPT
          - XSU
          - XTS
          - XUA
          - XXX
          - YER
          - ZAR
          - ZMW
          - ZWL
        percentage:
          maximum: 100
          minimum: 0
          type: number
          description: Percentage that the netSpend makes up of the sum of the netSpends
            of breakdowns in the same period with the same netDirection
          example: 100.0
        transactionCount:
          minimum: 0
          type: integer
          format: int64
          example: 4
      description: Spending insights entry for a counter party
    SpendingCounterPartySummary:
      type: object
      properties:
        period:
          type: string
          example: 2023-04
        totalSpent:
          type: number
          description: Amount spent from the account in the month
          example: 1873.27
        totalReceived:
          type: number
          description: Amount received to the account in the month
          example: 3837.03
        netSpend:
          type: number
          description: "|totalReceived - totalSpent|, i.e. how much the balance has\
            \ changed in the month"
          example: 1963.76
        totalSpendNetOut:
          type: number
          description: Sum of netSpend for counter parties whose net direction for
            the month is OUT
          example: 212.35
        totalReceivedNetIn:
          type: number
          description: Sum of netSpend for counter parties whose net direction for
            the month is IN
          example: 2176.11
        currency:
          type: string
          example: GBP
          enum:
          - UNDEFINED
          - AED
          - AFN
          - ALL
          - AMD
          - ANG
          - AOA
          - ARS
          - AUD
          - AWG
          - AZN
          - BAM
          - BBD
          - BDT
          - BGN
          - BHD
          - BIF
          - BMD
          - BND
          - BOB
          - BOV
          - BRL
          - BSD
          - BTN
          - BWP
          - BYN
          - BYR
          - BZD
          - CAD
          - CDF
          - CHE
          - CHF
          - CHW
          - CLF
          - CLP
          - CNY
          - COP
          - COU
          - CRC
          - CUC
          - CUP
          - CVE
          - CZK
          - DJF
          - DKK
          - DOP
          - DZD
          - EGP
          - ERN
          - ETB
          - EUR
          - FJD
          - FKP
          - GBP
          - GEL
          - GHS
          - GIP
          - GMD
          - GNF
          - GTQ
          - GYD
          - HKD
          - HNL
          - HRK
          - HTG
          - HUF
          - IDR
          - ILS
          - INR
          - IQD
          - IRR
          - ISK
          - JMD
          - JOD
          - JPY
          - KES
          - KGS
          - KHR
          - KMF
          - KPW
          - KRW
          - KWD
          - KYD
          - KZT
          - LAK
          - LBP
          - LKR
          - LRD
          - LSL
          - LTL
          - LYD
          - MAD
          - MDL
          - MGA
          - MKD
          - MMK
          - MNT
          - MOP
          - MRO
          - MRU
          - MUR
          - MVR
          - MWK
          - MXN
          - MXV
          - MYR
          - MZN
          - NAD
          - NGN
          - NIO
          - NOK
          - NPR
          - NZD
          - OMR
          - PAB
          - PEN
          - PGK
          - PHP
          - PKR
          - PLN
          - PYG
          - QAR
          - RON
          - RSD
          - RUB
          - RUR
          - RWF
          - SAR
          - SBD
          - SCR
          - SDG
          - SEK
          - SGD
          - SHP
          - SLL
          - SLE
          - SOS
          - SRD
          - SSP
          - STD
          - STN
          - SVC
          - SYP
          - SZL
          - THB
          - TJS
          - TMT
          - TND
          - TOP
          - TRY
          - TTD
          - TWD
          - TZS
          - UAH
          - UGX
          - USD
          - USN
          - USS
          - UYI
          - UYU
          - UZS
          - VEF
          - VES
          - VND
          - VUV
          - WST
          - XAF
          - XAG
          - XAU
          - XBA
          - XBB
          - XBC
          - XBD
          - XCD
          - XDR
          - XOF
          - XPD
          - XPF
          - XPT
          - XSU
          - XTS
          - XUA
          - XXX
          - YER
          - ZAR
          - ZMW
          - ZWL
        direction:
          type: string
          description: Was this an inbound or outbound transaction
          example: IN
          enum:
          - IN
          - OUT
        breakdown:
          type: array
          items:
            $ref: '#/components/schemas/SpendingCounterPartyBreakdown'
      description: "Spending insights for a month, grouped by counter party"
    SpendingCountryBreakdown:
      type: object
      properties:
        countryCode:
          type: string
          description: The country code for this spending insights entry (ISO 3166-1
            alpha-2)
          example: GB
          enum:
          - UNDEFINED
          - AC
          - AD
          - AE
          - AF
          - AG
          - AI
          - AL
          - AM
          - AN
          - AO
          - AQ
          - AR
          - AS
          - AT
          - AU
          - AW
          - AX
          - AZ
          - BA
          - BB
          - BD
          - BE
          - BF
          - BG
          - BH
          - BI
          - BJ
          - BL
          - BM
          - BN
          - BO
          - BQ
          - BR
          - BS
          - BT
          - BU
          - BV
          - BW
          - BY
          - BZ
          - CA
          - CC
          - CD
          - CF
          - CG
          - CH
          - CI
          - CK
          - CL
          - CM
          - CN
          - CO
          - CP
          - CR
          - CS
          - CU
          - CV
          - CW
          - CX
          - CY
          - CZ
          - DE
          - DG
          - DJ
          - DK
          - DM
          - DO
          - DZ
          - EA
          - EC
          - EE
          - EG
          - EH
          - ER
          - ES
          - ET
          - EU
          - EZ
          - FI
          - FJ
          - FK
          - FM
          - FO
          - FR
          - FX
          - GA
          - GB
          - GD
          - GE
          - GF
          - GG
          - GH
          - GI
          - GL
          - GM
          - GN
          - GP
          - GQ
          - GR
          - GS
          - GT
          - GU
          - GW
          - GY
          - HK
          - HM
          - HN
          - HR
          - HT
          - HU
          - IC
          - ID
          - IE
          - IL
          - IM
          - IN
          - IO
          - IQ
          - IR
          - IS
          - IT
          - JE
          - JM
          - JO
          - JP
          - KE
          - KG
          - KH
          - KI
          - KM
          - KN
          - KP
          - KR
          - KW
          - KY
          - KZ
          - LA
          - LB
          - LC
          - LI
          - LK
          - LR
          - LS
          - LT
          - LU
          - LV
          - LY
          - MA
          - MC
          - MD
          - ME
          - MF
          - MG
          - MH
          - MK
          - ML
          - MM
          - MN
          - MO
          - MP
          - MQ
          - MR
          - MS
          - MT
          - MU
          - MV
          - MW
          - MX
          - MY
          - MZ
          - NA
          - NC
          - NE
          - NF
          - NG
          - NI
          - NL
          - "NO"
          - NP
          - NR
          - NT
          - NU
          - NZ
          - OM
          - PA
          - PE
          - PF
          - PG
          - PH
          - PK
          - PL
          - PM
          - PN
          - PR
          - PS
          - PT
          - PW
          - PY
          - QA
          - RE
          - RO
          - RS
          - RU
          - RW
          - SA
          - SB
          - SC
          - SD
          - SE
          - SF
          - SG
          - SH
          - SI
          - SJ
          - SK
          - SL
          - SM
          - SN
          - SO
          - SR
          - SS
          - ST
          - SU
          - SV
          - SX
          - SY
          - SZ
          - TA
          - TC
          - TD
          - TF
          - TG
          - TH
          - TJ
          - TK
          - TL
          - TM
          - TN
          - TO
          - TP
          - TR
          - TT
          - TV
          - TW
          - TZ
          - UA
          - UG
          - UK
          - UM
          - US
          - UY
          - UZ
          - VA
          - VC
          - VE
          - VG
          - VI
          - VN
          - VU
          - WF
          - WS
          - XI
          - XU
          - XK
          - XX
          - YE
          - YT
          - YU
          - ZA
          - ZM
          - ZR
          - ZW
        totalSpent:
          type: number
          description: Amount spent in/sent to this country
          example: 123.45
        totalReceived:
          type: number
          description: Amount received from this country
          example: 23.45
        netSpend:
          type: number
          example: 100.0
        netDirection:
          type: string
          description: Was this an inbound or outbound transaction
          example: OUT
          enum:
          - IN
          - OUT
        currency:
          type: string
          example: GBP
          enum:
          - UNDEFINED
          - AED
          - AFN
          - ALL
          - AMD
          - ANG
          - AOA
          - ARS
          - AUD
          - AWG
          - AZN
          - BAM
          - BBD
          - BDT
          - BGN
          - BHD
          - BIF
          - BMD
          - BND
          - BOB
          - BOV
          - BRL
          - BSD
          - BTN
          - BWP
          - BYN
          - BYR
          - BZD
          - CAD
          - CDF
          - CHE
          - CHF
          - CHW
          - CLF
          - CLP
          - CNY
          - COP
          - COU
          - CRC
          - CUC
          - CUP
          - CVE
          - CZK
          - DJF
          - DKK
          - DOP
          - DZD
          - EGP
          - ERN
          - ETB
          - EUR
          - FJD
          - FKP
          - GBP
          - GEL
          - GHS
          - GIP
          - GMD
          - GNF
          - GTQ
          - GYD
          - HKD
          - HNL
          - HRK
          - HTG
          - HUF
          - IDR
          - ILS
          - INR
          - IQD
          - IRR
          - ISK
          - JMD
          - JOD
          - JPY
          - KES
          - KGS
          - KHR
          - KMF
          - KPW
          - KRW
          - KWD
          - KYD
          - KZT
          - LAK
          - LBP
          - LKR
          - LRD
          - LSL
          - LTL
          - LYD
          - MAD
          - MDL
          - MGA
          - MKD
          - MMK
          - MNT
          - MOP
          - MRO
          - MRU
          - MUR
          - MVR
          - MWK
          - MXN
          - MXV
          - MYR
          - MZN
          - NAD
          - NGN
          - NIO
          - NOK
          - NPR
          - NZD
          - OMR
          - PAB
          - PEN
          - PGK
          - PHP
          - PKR
          - PLN
          - PYG
          - QAR
          - RON
          - RSD
          - RUB
          - RUR
          - RWF
          - SAR
          - SBD
          - SCR
          - SDG
          - SEK
          - SGD
          - SHP
          - SLL
          - SLE
          - SOS
          - SRD
          - SSP
          - STD
          - STN
          - SVC
          - SYP
          - SZL
          - THB
          - TJS
          - TMT
          - TND
          - TOP
          - TRY
          - TTD
          - TWD
          - TZS
          - UAH
          - UGX
          - USD
          - USN
          - USS
          - UYI
          - UYU
          - UZS
          - VEF
          - VES
          - VND
          - VUV
          - WST
          - XAF
          - XAG
          - XAU
          - XBA
          - XBB
          - XBC
          - XBD
          - XCD
          - XDR
          - XOF
          - XPD
          - XPF
          - XPT
          - XSU
          - XTS
          - XUA
          - XXX
          - YER
          - ZAR
          - ZMW
          - ZWL
        percentage:
          type: number
          description: Percentage that the netSpend makes up of the sum of the netSpends
            of breakdowns in the same period with the same netDirection
          example: 100.0
        transactionCount:
          type: integer
          format: int64
          example: 4
      description: Spending insights entry for a country
    SpendingCountrySummary:
      type: object
      properties:
        period:
          type: string
          example: 2023-04
        totalSpent:
          type: number
          description: Amount spent from the account in the month
          example: 1873.27
        totalReceived:
          type: number
          description: Amount received to the account in the month
          example: 3837.03
        netSpend:
          type: number
          description: "|totalReceived - totalSpent|, i.e. how much the balance has\
            \ changed in the month"
          example: 1963.76
        totalSpendNetOut:
          type: number
          description: Sum of netSpend for countries whose net direction for the month
            is OUT
          example: 212.35
        totalReceivedNetIn:
          type: number
          description: Sum of netSpend for countries whose net direction for the month
            is IN
          example: 2176.11
        currency:
          type: string
          example: GBP
          enum:
          - UNDEFINED
          - AED
          - AFN
          - ALL
          - AMD
          - ANG
          - AOA
          - ARS
          - AUD
          - AWG
          - AZN
          - BAM
          - BBD
          - BDT
          - BGN
          - BHD
          - BIF
          - BMD
          - BND
          - BOB
          - BOV
          - BRL
          - BSD
          - BTN
          - BWP
          - BYN
          - BYR
          - BZD
          - CAD
          - CDF
          - CHE
          - CHF
          - CHW
          - CLF
          - CLP
          - CNY
          - COP
          - COU
          - CRC
          - CUC
          - CUP
          - CVE
          - CZK
          - DJF
          - DKK
          - DOP
          - DZD
          - EGP
          - ERN
          - ETB
          - EUR
          - FJD
          - FKP
          - GBP
          - GEL
          - GHS
          - GIP
          - GMD
          - GNF
          - GTQ
          - GYD
          - HKD
          - HNL
          - HRK
          - HTG
          - HUF
          - IDR
          - ILS
          - INR
          - IQD
          - IRR
          - ISK
          - JMD
          - JOD
          - JPY
          - KES
          - KGS
          - KHR
          - KMF
          - KPW
          - KRW
          - KWD
          - KYD
          - KZT
          - LAK
          - LBP
          - LKR
          - LRD
          - LSL
          - LTL
          - LYD
          - MAD
          - MDL
          - MGA
          - MKD
          - MMK
          - MNT
          - MOP
          - MRO
          - MRU
          - MUR
          - MVR
          - MWK
          - MXN
          - MXV
          - MYR
          - MZN
          - NAD
          - NGN
          - NIO
          - NOK
          - NPR
          - NZD
          - OMR
          - PAB
          - PEN
          - PGK
          - PHP
          - PKR
          - PLN
          - PYG
          - QAR
          - RON
          - RSD
          - RUB
          - RUR
          - RWF
          - SAR
          - SBD
          - SCR
          - SDG
          - SEK
          - SGD
          - SHP
          - SLL
          - SLE
          - SOS
          - SRD
          - SSP
          - STD
          - STN
          - SVC
          - SYP
          - SZL
          - THB
          - TJS
          - TMT
          - TND
          - TOP
          - TRY
          - TTD
          - TWD
          - TZS
          - UAH
          - UGX
          - USD
          - USN
          - USS
          - UYI
          - UYU
          - UZS
          - VEF
          - VES
          - VND
          - VUV
          - WST
          - XAF
          - XAG
          - XAU
          - XBA
          - XBB
          - XBC
          - XBD
          - XCD
          - XDR
          - XOF
          - XPD
          - XPF
          - XPT
          - XSU
          - XTS
          - XUA
          - XXX
          - YER
          - ZAR
          - ZMW
          - ZWL
        direction:
          type: string
          description: Was this an inbound or outbound transaction
          example: IN
          enum:
          - IN
          - OUT
        breakdown:
          type: array
          items:
            $ref: '#/components/schemas/SpendingCountryBreakdown'
      description: "Spending insights for a month, grouped by spending country"
    SpendingCategoryBreakdown:
      type: object
      properties:
        spendingCategory:
          type: string
          description: The category of a transaction
          enum:
          - BIKE
          - BILLS_AND_SERVICES
          - BUCKET_LIST
          - CAR
          - CASH
          - CELEBRATION
          - CHARITY
          - CHILDREN
          - COFFEE
          - DEBT_REPAYMENT
          - DIY
          - DRINKS
          - EATING_OUT
          - EDUCATION
          - EMERGENCY
          - ENTERTAINMENT
          - ESSENTIAL_SPEND
          - EXPENSES
          - FAMILY
          - FITNESS
          - FUEL
          - GAMBLING
          - GAMING
          - GARDEN
          - GENERAL
          - GIFTS
          - GROCERIES
          - HOBBY
          - HOLIDAYS
          - HOME
          - IMPULSE_BUY
          - INCOME
          - INSURANCE
          - INVESTMENTS
          - LIFESTYLE
          - MAINTENANCE_AND_REPAIRS
          - MEDICAL
          - MORTGAGE
          - NON_ESSENTIAL_SPEND
          - PAYMENTS
          - PERSONAL_TRANSFERS
          - PETS
          - PROJECTS
          - RELATIONSHIPS
          - RENT
          - SAVING
          - SHOPPING
          - SUBSCRIPTIONS
          - TAKEAWAY
          - TAXI
          - TRANSPORT
          - TREATS
          - WEDDING
          - WELLBEING
          - NONE
          - REVENUE
          - OTHER_INCOME
          - CLIENT_REFUNDS
          - INVENTORY
          - STAFF
          - TRAVEL
          - WORKPLACE
          - REPAIRS_AND_MAINTENANCE
          - ADMIN
          - MARKETING
          - BUSINESS_ENTERTAINMENT
          - INTEREST_PAYMENTS
          - BANK_CHARGES
          - OTHER
          - FOOD_AND_DRINK
          - EQUIPMENT
          - PROFESSIONAL_SERVICES
          - PHONE_AND_INTERNET
          - VEHICLES
          - DIRECTORS_WAGES
          - VAT
          - CORPORATION_TAX
          - SELF_ASSESSMENT_TAX
          - INVESTMENT_CAPITAL
          - TRANSFERS
          - LOAN_PRINCIPAL
          - PERSONAL
          - DIVIDENDS
        totalSpent:
          minimum: 0
          type: number
          description: Amount spent under this spending category
          example: 123.45
        totalReceived:
          minimum: 0
          type: number
          description: Amount received under this spending category
          example: 23.45
        netSpend:
          minimum: 0
          type: number
          example: 100.0
        netDirection:
          type: string
          description: Was this an inbound or outbound transaction
          example: OUT
          enum:
          - IN
          - OUT
        currency:
          type: string
          example: GBP
          enum:
          - UNDEFINED
          - AED
          - AFN
          - ALL
          - AMD
          - ANG
          - AOA
          - ARS
          - AUD
          - AWG
          - AZN
          - BAM
          - BBD
          - BDT
          - BGN
          - BHD
          - BIF
          - BMD
          - BND
          - BOB
          - BOV
          - BRL
          - BSD
          - BTN
          - BWP
          - BYN
          - BYR
          - BZD
          - CAD
          - CDF
          - CHE
          - CHF
          - CHW
          - CLF
          - CLP
          - CNY
          - COP
          - COU
          - CRC
          - CUC
          - CUP
          - CVE
          - CZK
          - DJF
          - DKK
          - DOP
          - DZD
          - EGP
          - ERN
          - ETB
          - EUR
          - FJD
          - FKP
          - GBP
          - GEL
          - GHS
          - GIP
          - GMD
          - GNF
          - GTQ
          - GYD
          - HKD
          - HNL
          - HRK
          - HTG
          - HUF
          - IDR
          - ILS
          - INR
          - IQD
          - IRR
          - ISK
          - JMD
          - JOD
          - JPY
          - KES
          - KGS
          - KHR
          - KMF
          - KPW
          - KRW
          - KWD
          - KYD
          - KZT
          - LAK
          - LBP
          - LKR
          - LRD
          - LSL
          - LTL
          - LYD
          - MAD
          - MDL
          - MGA
          - MKD
          - MMK
          - MNT
          - MOP
          - MRO
          - MRU
          - MUR
          - MVR
          - MWK
          - MXN
          - MXV
          - MYR
          - MZN
          - NAD
          - NGN
          - NIO
          - NOK
          - NPR
          - NZD
          - OMR
          - PAB
          - PEN
          - PGK
          - PHP
          - PKR
          - PLN
          - PYG
          - QAR
          - RON
          - RSD
          - RUB
          - RUR
          - RWF
          - SAR
          - SBD
          - SCR
          - SDG
          - SEK
          - SGD
          - SHP
          - SLL
          - SLE
          - SOS
          - SRD
          - SSP
          - STD
          - STN
          - SVC
          - SYP
          - SZL
          - THB
          - TJS
          - TMT
          - TND
          - TOP
          - TRY
          - TTD
          - TWD
          - TZS
          - UAH
          - UGX
          - USD
          - USN
          - USS
          - UYI
          - UYU
          - UZS
          - VEF
          - VES
          - VND
          - VUV
          - WST
          - XAF
          - XAG
          - XAU
          - XBA
          - XBB
          - XBC
          - XBD
          - XCD
          - XDR
          - XOF
          - XPD
          - XPF
          - XPT
          - XSU
          - XTS
          - XUA
          - XXX
          - YER
          - ZAR
          - ZMW
          - ZWL
        percentage:
          maximum: 100
          minimum: 0
          type: number
          description: Percentage that the netSpend makes up of the sum of the netSpends
            of breakdowns in the same period with the same netDirection
          example: 100.0
        transactionCount:
          minimum: 0
          type: integer
          format: int64
          example: 4
      description: Spending insights entry for a spending category
    SpendingCategorySummary:
      type: object
      properties:
        period:
          type: string
          example: 2023-04
        totalSpent:
          type: number
          description: Amount spent from the account in the month
          example: 1873.27
        totalReceived:
          type: number
          description: Amount received to the account in the month
          example: 3837.03
        netSpend:
          type: number
          description: "|totalReceived - totalSpent|, i.e. how much the balance has\
            \ changed in the month"
          example: 1963.76
        totalSpendNetOut:
          type: number
          description: Sum of netSpend for spending categories whose net direction
            for the month is OUT
          example: 212.35
        totalReceivedNetIn:
          type: number
          description: Sum of netSpend for spending categories whose net direction
            for the month is IN
          example: 2176.11
        currency:
          type: string
          example: GBP
          enum:
          - UNDEFINED
          - AED
          - AFN
          - ALL
          - AMD
          - ANG
          - AOA
          - ARS
          - AUD
          - AWG
          - AZN
          - BAM
          - BBD
          - BDT
          - BGN
          - BHD
          - BIF
          - BMD
          - BND
          - BOB
          - BOV
          - BRL
          - BSD
          - BTN
          - BWP
          - BYN
          - BYR
          - BZD
          - CAD
          - CDF
          - CHE
          - CHF
          - CHW
          - CLF
          - CLP
          - CNY
          - COP
          - COU
          - CRC
          - CUC
          - CUP
          - CVE
          - CZK
          - DJF
          - DKK
          - DOP
          - DZD
          - EGP
          - ERN
          - ETB
          - EUR
          - FJD
          - FKP
          - GBP
          - GEL
          - GHS
          - GIP
          - GMD
          - GNF
          - GTQ
          - GYD
          - HKD
          - HNL
          - HRK
          - HTG
          - HUF
          - IDR
          - ILS
          - INR
          - IQD
          - IRR
          - ISK
          - JMD
          - JOD
          - JPY
          - KES
          - KGS
          - KHR
          - KMF
          - KPW
          - KRW
          - KWD
          - KYD
          - KZT
          - LAK
          - LBP
          - LKR
          - LRD
          - LSL
          - LTL
          - LYD
          - MAD
          - MDL
          - MGA
          - MKD
          - MMK
          - MNT
          - MOP
          - MRO
          - MRU
          - MUR
          - MVR
          - MWK
          - MXN
          - MXV
          - MYR
          - MZN
          - NAD
          - NGN
          - NIO
          - NOK
          - NPR
          - NZD
          - OMR
          - PAB
          - PEN
          - PGK
          - PHP
          - PKR
          - PLN
          - PYG
          - QAR
          - RON
          - RSD
          - RUB
          - RUR
          - RWF
          - SAR
          - SBD
          - SCR
          - SDG
          - SEK
          - SGD
          - SHP
          - SLL
          - SLE
          - SOS
          - SRD
          - SSP
          - STD
          - STN
          - SVC
          - SYP
          - SZL
          - THB
          - TJS
          - TMT
          - TND
          - TOP
          - TRY
          - TTD
          - TWD
          - TZS
          - UAH
          - UGX
          - USD
          - USN
          - USS
          - UYI
          - UYU
          - UZS
          - VEF
          - VES
          - VND
          - VUV
          - WST
          - XAF
          - XAG
          - XAU
          - XBA
          - XBB
          - XBC
          - XBD
          - XCD
          - XDR
          - XOF
          - XPD
          - XPF
          - XPT
          - XSU
          - XTS
          - XUA
          - XXX
          - YER
          - ZAR
          - ZMW
          - ZWL
        direction:
          type: string
          description: Was this an inbound or outbound transaction
          example: IN
          enum:
          - IN
          - OUT
        breakdown:
          type: array
          items:
            $ref: '#/components/schemas/SpendingCategoryBreakdown'
      description: "Spending insights for a month, grouped by spending category"
    AccountHolder:
      type: object
      properties:
        accountHolderUid:
          type: string
          format: uuid
          example: aabbaabb-aabb-aabb-aabb-aabbaabbaabb
        accountHolderType:
          type: string
          enum:
          - INDIVIDUAL
          - BUSINESS
          - SOLE_TRADER
          - JOINT
          - BANKING_AS_A_SERVICE
      description: Information about the account holder type
    AccountHolderName:
      type: object
      properties:
        accountHolderName:
          type: string
          example: Dave Bowman
      description: Name of the account holder
    AddressesV2:
      type: object
      properties:
        current:
          $ref: '#/components/schemas/AddressV2'
        previous:
          type: array
          items:
            $ref: '#/components/schemas/AddressV2'
      description: Current and previous physical addresses
    AddressUpdateRequest:
      required:
      - countryCode
      - from
      - line1
      - postCode
      - postTown
      type: object
      properties:
        line1:
          maxLength: 255
          minLength: 0
          type: string
          example: 1A Admiralty Arch
        line2:
          maxLength: 255
          minLength: 0
          type: string
          example: The Mall
        line3:
          maxLength: 255
          minLength: 0
          type: string
          example: City of Westminster
        postTown:
          maxLength: 255
          minLength: 0
          type: string
          example: London
        postCode:
          maxLength: 20
          minLength: 0
          type: string
          example: SW1A 2WH
        countryCode:
          type: string
          description: "Country code in ISO 3166-1 alpha-2. NB GB is the official\
            \ country code for the UK. UK is not the officially assigned code, and\
            \ so is not valid"
          example: GB
        udprn:
          maxLength: 255
          minLength: 0
          type: string
          description: The UDPRN of the property
          example: "23748063"
        umprn:
          maxLength: 255
          minLength: 0
          type: string
          description: The UMPRN of the property
          example: "923827402"
        from:
          type: string
          description: Date the account holder's residency at this address started
          format: date
          example: 2023-04-05
      description: Address update request
    AddressRequest:
      required:
      - addressFormat
      type: object
      properties:
        addressFormat:
          type: string
          description: Format of the address
          enum:
          - UK_PAF
          - UK_MANUAL
          - BFPO
          - IE
          - MANUAL
          - AUSTRALIA_STREET
          - ROMANIAN_STREET
      description: "Account holder's previous address history, 6 month minimum"
      discriminator:
        propertyName: addressFormat
      anyOf:
      - $ref: '#/components/schemas/UkPafAddressRequest'
      - $ref: '#/components/schemas/UkManualAddressRequest'
    ChangeAddressRequest:
      required:
      - addressRequest
      type: object
      properties:
        addressRequest:
          $ref: '#/components/schemas/AddressRequest'
        addressVerified:
          type: boolean
          description: Confirmation of the address validity
      description: Request to update an account holder address
    UkManualAddressRequest:
      required:
      - addressFormat
      - countryCode
      - postTown
      - postcode
      - streetName
      type: object
      allOf:
      - $ref: '#/components/schemas/AddressRequest'
      - type: object
        properties:
          postcode:
            type: string
          postTown:
            maxLength: 60
            minLength: 0
            type: string
          countryCode:
            type: string
            enum:
            - UNDEFINED
            - AC
            - AD
            - AE
            - AF
            - AG
            - AI
            - AL
            - AM
            - AN
            - AO
            - AQ
            - AR
            - AS
            - AT
            - AU
            - AW
            - AX
            - AZ
            - BA
            - BB
            - BD
            - BE
            - BF
            - BG
            - BH
            - BI
            - BJ
            - BL
            - BM
            - BN
            - BO
            - BQ
            - BR
            - BS
            - BT
            - BU
            - BV
            - BW
            - BY
            - BZ
            - CA
            - CC
            - CD
            - CF
            - CG
            - CH
            - CI
            - CK
            - CL
            - CM
            - CN
            - CO
            - CP
            - CR
            - CS
            - CU
            - CV
            - CW
            - CX
            - CY
            - CZ
            - DE
            - DG
            - DJ
            - DK
            - DM
            - DO
            - DZ
            - EA
            - EC
            - EE
            - EG
            - EH
            - ER
            - ES
            - ET
            - EU
            - EZ
            - FI
            - FJ
            - FK
            - FM
            - FO
            - FR
            - FX
            - GA
            - GB
            - GD
            - GE
            - GF
            - GG
            - GH
            - GI
            - GL
            - GM
            - GN
            - GP
            - GQ
            - GR
            - GS
            - GT
            - GU
            - GW
            - GY
            - HK
            - HM
            - HN
            - HR
            - HT
            - HU
            - IC
            - ID
            - IE
            - IL
            - IM
            - IN
            - IO
            - IQ
            - IR
            - IS
            - IT
            - JE
            - JM
            - JO
            - JP
            - KE
            - KG
            - KH
            - KI
            - KM
            - KN
            - KP
            - KR
            - KW
            - KY
            - KZ
            - LA
            - LB
            - LC
            - LI
            - LK
            - LR
            - LS
            - LT
            - LU
            - LV
            - LY
            - MA
            - MC
            - MD
            - ME
            - MF
            - MG
            - MH
            - MK
            - ML
            - MM
            - MN
            - MO
            - MP
            - MQ
            - MR
            - MS
            - MT
            - MU
            - MV
            - MW
            - MX
            - MY
            - MZ
            - NA
            - NC
            - NE
            - NF
            - NG
            - NI
            - NL
            - "NO"
            - NP
            - NR
            - NT
            - NU
            - NZ
            - OM
            - PA
            - PE
            - PF
            - PG
            - PH
            - PK
            - PL
            - PM
            - PN
            - PR
            - PS
            - PT
            - PW
            - PY
            - QA
            - RE
            - RO
            - RS
            - RU
            - RW
            - SA
            - SB
            - SC
            - SD
            - SE
            - SF
            - SG
            - SH
            - SI
            - SJ
            - SK
            - SL
            - SM
            - SN
            - SO
            - SR
            - SS
            - ST
            - SU
            - SV
            - SX
            - SY
            - SZ
            - TA
            - TC
            - TD
            - TF
            - TG
            - TH
            - TJ
            - TK
            - TL
            - TM
            - TN
            - TO
            - TP
            - TR
            - TT
            - TV
            - TW
            - TZ
            - UA
            - UG
            - UK
            - UM
            - US
            - UY
            - UZ
            - VA
            - VC
            - VE
            - VG
            - VI
            - VN
            - VU
            - WF
            - WS
            - XI
            - XU
            - XK
            - XX
            - YE
            - YT
            - YU
            - ZA
            - ZM
            - ZR
            - ZW
          flatIdentifier:
            maxLength: 40
            minLength: 0
            type: string
          buildingName:
            maxLength: 60
            minLength: 0
            type: string
          streetNumber:
            maxLength: 4
            minLength: 0
            type: string
          streetName:
            maxLength: 100
            minLength: 0
            type: string
          locality:
            maxLength: 100
            minLength: 0
            type: string
          line1:
            type: string
          line2:
            type: string
          line3:
            type: string
    UkPafAddressRequest:
      required:
      - addressFormat
      - countryCode
      - line1
      - postTown
      - postcode
      type: object
      allOf:
      - $ref: '#/components/schemas/AddressRequest'
      - type: object
        properties:
          postcode:
            type: string
          postTown:
            maxLength: 30
            minLength: 0
            type: string
          line1:
            maxLength: 255
            minLength: 0
            type: string
          line2:
            maxLength: 255
            minLength: 0
            type: string
          line3:
            maxLength: 255
            minLength: 0
            type: string
          buildingName:
            maxLength: 50
            minLength: 0
            type: string
          buildingNumber:
            maxLength: 4
            minLength: 0
            type: string
          subBuildingName:
            maxLength: 30
            minLength: 0
            type: string
          premise:
            maxLength: 90
            minLength: 0
            type: string
          poBox:
            maxLength: 6
            minLength: 0
            type: string
          organisationName:
            maxLength: 60
            minLength: 0
            type: string
          departmentName:
            maxLength: 60
            minLength: 0
            type: string
          thoroughfare:
            maxLength: 80
            minLength: 0
            type: string
          dependantThoroughfare:
            maxLength: 80
            minLength: 0
            type: string
          dependantLocality:
            maxLength: 35
            minLength: 0
            type: string
          doubleDependantLocality:
            maxLength: 35
            minLength: 0
            type: string
          county:
            maxLength: 30
            minLength: 0
            type: string
          countryCode:
            type: string
            enum:
            - UNDEFINED
            - AC
            - AD
            - AE
            - AF
            - AG
            - AI
            - AL
            - AM
            - AN
            - AO
            - AQ
            - AR
            - AS
            - AT
            - AU
            - AW
            - AX
            - AZ
            - BA
            - BB
            - BD
            - BE
            - BF
            - BG
            - BH
            - BI
            - BJ
            - BL
            - BM
            - BN
            - BO
            - BQ
            - BR
            - BS
            - BT
            - BU
            - BV
            - BW
            - BY
            - BZ
            - CA
            - CC
            - CD
            - CF
            - CG
            - CH
            - CI
            - CK
            - CL
            - CM
            - CN
            - CO
            - CP
            - CR
            - CS
            - CU
            - CV
            - CW
            - CX
            - CY
            - CZ
            - DE
            - DG
            - DJ
            - DK
            - DM
            - DO
            - DZ
            - EA
            - EC
            - EE
            - EG
            - EH
            - ER
            - ES
            - ET
            - EU
            - EZ
            - FI
            - FJ
            - FK
            - FM
            - FO
            - FR
            - FX
            - GA
            - GB
            - GD
            - GE
            - GF
            - GG
            - GH
            - GI
            - GL
            - GM
            - GN
            - GP
            - GQ
            - GR
            - GS
            - GT
            - GU
            - GW
            - GY
            - HK
            - HM
            - HN
            - HR
            - HT
            - HU
            - IC
            - ID
            - IE
            - IL
            - IM
            - IN
            - IO
            - IQ
            - IR
            - IS
            - IT
            - JE
            - JM
            - JO
            - JP
            - KE
            - KG
            - KH
            - KI
            - KM
            - KN
            - KP
            - KR
            - KW
            - KY
            - KZ
            - LA
            - LB
            - LC
            - LI
            - LK
            - LR
            - LS
            - LT
            - LU
            - LV
            - LY
            - MA
            - MC
            - MD
            - ME
            - MF
            - MG
            - MH
            - MK
            - ML
            - MM
            - MN
            - MO
            - MP
            - MQ
            - MR
            - MS
            - MT
            - MU
            - MV
            - MW
            - MX
            - MY
            - MZ
            - NA
            - NC
            - NE
            - NF
            - NG
            - NI
            - NL
            - "NO"
            - NP
            - NR
            - NT
            - NU
            - NZ
            - OM
            - PA
            - PE
            - PF
            - PG
            - PH
            - PK
            - PL
            - PM
            - PN
            - PR
            - PS
            - PT
            - PW
            - PY
            - QA
            - RE
            - RO
            - RS
            - RU
            - RW
            - SA
            - SB
            - SC
            - SD
            - SE
            - SF
            - SG
            - SH
            - SI
            - SJ
            - SK
            - SL
            - SM
            - SN
            - SO
            - SR
            - SS
            - ST
            - SU
            - SV
            - SX
            - SY
            - SZ
            - TA
            - TC
            - TD
            - TF
            - TG
            - TH
            - TJ
            - TK
            - TL
            - TM
            - TN
            - TO
            - TP
            - TR
            - TT
            - TV
            - TW
            - TZ
            - UA
            - UG
            - UK
            - UM
            - US
            - UY
            - UZ
            - VA
            - VC
            - VE
            - VG
            - VI
            - VN
            - VU
            - WF
            - WS
            - XI
            - XU
            - XK
            - XX
            - YE
            - YT
            - YU
            - ZA
            - ZM
            - ZR
            - ZW
          longitude:
            type: number
          latitude:
            type: number
          udprn:
            maxLength: 8
            minLength: 0
            type: string
          umprn:
            maxLength: 8
            minLength: 0
            type: string
    ChangeEmailRequest:
      required:
      - email
      type: object
      properties:
        email:
          type: string
          description: Details of the new email address
        emailVerified:
          type: boolean
          description: Confirmation of the email address validity
      description: Request to update an account holder email
    ChangeMobilePhoneNumberRequest:
      required:
      - mobilePhoneNumber
      - mobilePhoneNumberVerified
      type: object
      properties:
        mobilePhoneNumber:
          type: string
          description: Details of the new mobile phone number
        mobilePhoneNumberVerified:
          type: boolean
          description: Confirmation of the mobile phone number validity
      description: Request to update an account holder mobile phone number
    DefundingPaymentResult:
      type: object
      properties:
        defundingPaymentUid:
          type: string
          format: uuid
          example: aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa
        paymentOrderRequestUid:
          type: string
          format: uuid
          example: aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa
        status:
          type: string
          enum:
          - PAYMENT_INITIATED
          - PENDING
          - FAILED
          - FAILED_NO_ACCOUNT_HOLDER
          - FAILED_NAME_CHECK
          - FAILED_UNSUPPORTED_PAYMENT_RECIPIENT
    CurrencyAndAmount:
      required:
      - currency
      - minorUnits
      type: object
      properties:
        currency:
          type: string
          description: ISO-4217 3 character currency code
          example: GBP
        minorUnits:
          minimum: 0
          type: integer
          description: "Amount in the minor units of the given currency; eg pence\
            \ in GBP, cents in EUR"
          format: int64
          example: 123456
      description: Representation of money
    DefundingPaymentRecipientRequest:
      required:
      - accountIdentifier
      - bankIdentifier
      - bankIdentifierType
      - countryCode
      - payeeType
      type: object
      properties:
        payeeType:
          type: string
          example: INDIVIDUAL
          enum:
          - BUSINESS
          - INDIVIDUAL
        countryCode:
          type: string
          description: The country code for the account (ISO 3166-1 alpha-2)
          example: GB
        accountIdentifier:
          type: string
          example: "12345678"
        bankIdentifier:
          type: string
          example: "123456"
        bankIdentifierType:
          type: string
          example: SORT_CODE
          enum:
          - SORT_CODE
          - SWIFT
          - IBAN
          - ABA
          - ABA_WIRE
          - ABA_ACH
          - BSB
      description: The desired payment recipient. The payment recipient must be present
    DefundingPaymentRequest:
      required:
      - amount
      - externalIdentifier
      - paymentRecipient
      - reference
      type: object
      properties:
        externalIdentifier:
          maxLength: 100
          minLength: 0
          type: string
          description: "Identifier for the payment request, generated by you. Must\
            \ be unique for each payment request you create"
          example: Unique identifier to ensure idempotency
        paymentRecipient:
          $ref: '#/components/schemas/DefundingPaymentRecipientRequest'
        reference:
          pattern: "[a-zA-Z0-9-/?:().,+#=!%&*<>;{@ \"']{1,35}"
          type: string
          description: "The payment reference. The 35 character limit applies to SEPA\
            \ payments (Euro accounts). For FPS payments (GBP accounts), the limit\
            \ is 18 characters"
          example: December Expenses
        amount:
          $ref: '#/components/schemas/CurrencyAndAmount'
        spendingCategory:
          type: string
          description: The category of a transaction
          enum:
          - BIKE
          - BILLS_AND_SERVICES
          - BUCKET_LIST
          - CAR
          - CASH
          - CELEBRATION
          - CHARITY
          - CHILDREN
          - COFFEE
          - DEBT_REPAYMENT
          - DIY
          - DRINKS
          - EATING_OUT
          - EDUCATION
          - EMERGENCY
          - ENTERTAINMENT
          - ESSENTIAL_SPEND
          - EXPENSES
          - FAMILY
          - FITNESS
          - FUEL
          - GAMBLING
          - GAMING
          - GARDEN
          - GENERAL
          - GIFTS
          - GROCERIES
          - HOBBY
          - HOLIDAYS
          - HOME
          - IMPULSE_BUY
          - INCOME
          - INSURANCE
          - INVESTMENTS
          - LIFESTYLE
          - MAINTENANCE_AND_REPAIRS
          - MEDICAL
          - MORTGAGE
          - NON_ESSENTIAL_SPEND
          - PAYMENTS
          - PERSONAL_TRANSFERS
          - PETS
          - PROJECTS
          - RELATIONSHIPS
          - RENT
          - SAVING
          - SHOPPING
          - SUBSCRIPTIONS
          - TAKEAWAY
          - TAXI
          - TRANSPORT
          - TREATS
          - WEDDING
          - WELLBEING
          - NONE
          - REVENUE
          - OTHER_INCOME
          - CLIENT_REFUNDS
          - INVENTORY
          - STAFF
          - TRAVEL
          - WORKPLACE
          - REPAIRS_AND_MAINTENANCE
          - ADMIN
          - MARKETING
          - BUSINESS_ENTERTAINMENT
          - INTEREST_PAYMENTS
          - BANK_CHARGES
          - OTHER
          - FOOD_AND_DRINK
          - EQUIPMENT
          - PROFESSIONAL_SERVICES
          - PHONE_AND_INTERNET
          - VEHICLES
          - DIRECTORS_WAGES
          - VAT
          - CORPORATION_TAX
          - SELF_ASSESSMENT_TAX
          - INVESTMENT_CAPITAL
          - TRANSFERS
          - LOAN_PRINCIPAL
          - PERSONAL
          - DIVIDENDS
      description: Request to make a defunding payment
    CreatePersonNameChangeRequest:
      required:
      - externalIdentifier
      - firstName
      - lastName
      - title
      type: object
      properties:
        externalIdentifier:
          maxLength: 64
          minLength: 0
          type: string
          description: External identifier for the request
          example: fx3gnyg2d7si533iobfmt9vy4ryj1
        title:
          maxLength: 20
          minLength: 0
          type: string
          description: Account holder's title
          example: MISS
          enum:
          - "MRS, MISS, MS, LADY, MR, SIR"
        firstName:
          maxLength: 64
          minLength: 0
          type: string
          description: Account holder's first name
          example: Gytha
        middleName:
          maxLength: 64
          minLength: 0
          type: string
          description: Account holder's middle name
          example: Courtney
        lastName:
          maxLength: 64
          minLength: 0
          type: string
          description: Account holder's last name
          example: Ogg
      description: Request to update an account holder's name
    DocumentUploadPresignedUrlResponse:
      type: object
      properties:
        presignedUrl:
          type: string
          description: URL where a document file can be uploaded. Valid for only 10
            minutes.
          example: https://presigned-url-demo23071997.s3.eu-west-1.amazonaws.com/img.png?X-Amz-Algorithm=xx&X-Amz-Credential=xx&X-Amz-Expires=1800&X-Amz-Signature=xx&X-Amz-SignedHeaders=host
        personNameChangeDocumentUid:
          type: string
          description: Unique identifier for the name change document to be uploaded
          format: uuid
          example: 0c26f4cc-7ba4-475c-8a19-2d13db9f4a81
      description: A temporary presigned upload URL for uploading a supporting document
        and a unique identifier to reference that document in later calls
    PresignedUploadRequest:
      required:
      - md5Checksum
      - mimeType
      type: object
      properties:
        mimeType:
          type: object
          properties:
            type:
              type: string
            subtype:
              type: string
            parameters:
              type: object
              additionalProperties:
                type: string
            wildcardType:
              type: boolean
            wildcardSubtype:
              type: boolean
          description: The MIME type of the content to be uploaded
          example: image/png
        md5Checksum:
          type: string
          description: A MD5 checksum of the content to be uploaded
          example: Qlu5/ZIObKCQNx4xyMUI+w==
      description: Request to generate an upload URL for identity information
    NameChangeDocumentUploadConfirmation:
      required:
      - filename
      - nameChangeDocumentType
      type: object
      properties:
        nameChangeDocumentType:
          type: string
          description: The type of supporting document that has been uploaded
          enum:
          - MARRIAGE_CERTIFICATE
          - DEED_POLL
          - DIVORCE_CERTIFICATE
          - BIRTH_CERTIFICATE
        filename:
          type: string
          description: The filename of the uploaded document
      description: Request with metadata about an uploaded supporting document
    ConfirmImageUploadRequest:
      required:
      - filename
      - idDocumentImageType
      - idDocumentType
      type: object
      properties:
        idDocumentImageType:
          type: string
          description: The image type of the document image being uploaded
          enum:
          - ID_PHOTO_FRONT
          - ID_PHOTO_BACK
          - VIDEO
          - PDF_DOCUMENT
          - WORD_DOCUMENT
          - PROOF_OF_ADDRESS
          - PROOF_OF_NAME_CHANGE
        idDocumentType:
          type: string
          description: The type of identity document
          enum:
          - PASSPORT
          - PROVISIONAL_DRIVING_LICENSE
          - FULL_DRIVING_LICENSE
          - RESIDENCE_PERMIT
          - IDENTITY_CARD
          - MARRIAGE_CERTIFICATE
          - DEED_POLL
          - DIVORCE_CERTIFICATE
          - BANK_STATEMENT
          - UTILITY_BILL
          - GOVERNMENT_LETTER
          - COUNCIL_TAX
          - FINANCIAL_STATEMENT
          - HOUSING_LETTER
          - UNIVERSITY_LETTER
          - NI_LETTER
        filename:
          type: string
          description: The filename of the identity document image that was uploaded
          example: id_photo.png
        issuingCountry:
          type: string
          description: The issuing country code for the photo ID document (ISO 3166-1
            alpha-2). This should be left blank for other document types
          example: GB
      description: Request to confirm an upload of an image of a document
    ConfirmVideoUploadRequest:
      required:
      - filename
      - phraseUid
      type: object
      properties:
        phraseUid:
          type: string
          description: The UID of the phrase to be included in the video
          format: uuid
          example: 0c26f4cc-7ba4-475c-8a19-2d13db9f4a81
        filename:
          type: string
          description: The filename of the video that was uploaded
          example: idv_video.mp4
      description: Request to confirm that a video has been uploaded
    AccessToken:
      type: object
      properties:
        accessToken:
          type: string
          description: The access token
          example: bW3kAkyNWCYUvNG6QFBLoiZc1YbGGblvLFW9FYvNzMF0FAidxNoPZP5gsN1T3NiS
        refreshToken:
          type: string
          description: The refresh token
          example: Km9frBk55jnZdY9RZktUfyFPTDi8JUWwdPdDwG68yjWYe2c8RVuTtrtjJ46eTl5M
        tokenType:
          type: string
          description: "The token type, as described in https://tools.ietf.org/html/rfc6749#section-7.1"
          example: bearer
        accessTokenExpiresInSeconds:
          type: integer
          description: The time in seconds from issuance at which the access token
            will expire
          format: int64
          example: 3600
        scope:
          type: string
          description: "The scopes which this token has permission to use: Space delimited\
            \ case sensitive Strings, as described in https://tools.ietf.org/html/rfc6749#section-3.3"
          example: balance:read
      description: Access token response
    AccountHolderCreationResponse:
      required:
      - accountHolderUid
      - accountUid
      type: object
      properties:
        accountHolderUid:
          type: string
          description: The unique identifier of the account holder which has been
            created
          format: uuid
          example: aabbaabb-aabb-aabb-aabb-aabbaabbaabb
        accountUid:
          type: string
          description: The unique identifier of the underlying account which has been
            created
          format: uuid
          example: aabbaabb-aabb-aabb-aabb-aabbaabbaabb
        authTokens:
          $ref: '#/components/schemas/AccessToken'
      description: Response after creating an account holder following a successful
        onboarding
    AccountHolderCreationRequest:
      required:
      - accountCurrency
      type: object
      properties:
        accountCurrency:
          type: string
          description: The currency for the underlying account
      description: Request to create a account holder and an account for an onboarded
        individual
    PersonTaxLiabilityDeclaration:
      required:
      - countryDeclarations
      type: object
      properties:
        countryDeclarations:
          type: array
          description: Liability declaration details
          items:
            $ref: '#/components/schemas/PersonTaxLiabilityDeclarationEntry'
      description: "The tax liability declaration, and any countries to which it may\
        \ apply if a liability exists"
    PersonTaxLiabilityDeclarationEntry:
      required:
      - countryCode
      type: object
      properties:
        countryCode:
          type: string
          description: Country code in Alpha-2 format
          example: US
        taxIdentificationNumber:
          maxLength: 30
          minLength: 0
          type: string
          description: Tax identification number for this declaration entry
          example: NNN-NN-NNNN
      description: Tax liability declaration details
    IdentityDocumentActions:
      type: object
      properties:
        documentStatus:
          type: string
          description: Document onboarding status
          enum:
          - AWAITING_UPLOAD
          - READY_FOR_REVIEW
          - NOT_REQUIRED
        acceptableDocumentTypes:
          type: array
          description: Dynamically generated list of acceptable ID documents for the
            user
          items:
            type: string
            description: Dynamically generated list of acceptable ID documents for
              the user
            enum:
            - PASSPORT
            - FULL_DRIVING_LICENSE
            - PROVISIONAL_DRIVING_LICENSE
            - RESIDENCE_PERMIT
            - IDENTITY_CARD
        rejectionReasons:
          type: array
          description: The reasons a document was rejected
          items:
            type: string
            description: The reasons a document was rejected
            enum:
            - NOT_ACCEPTABLE_DOC_TYPE
            - DOC_OUT_OF_DATE
            - SOME_INFORMATION_ILLEGIBLE
            - PHOTO_BLURRY
            - PHOTO_TOO_DARK
            - PHOTO_CROPPED
            - PHOTO_PARTIALLY_COVERED
            - PHOTO_REFLECTION
            - PHOTO_NO_FACE
            - DOB_NOT_VISIBLE
            - DOCUMENT_DAMAGED
            - CANNOT_VALIDATE
            - MUST_BE_ORIGINAL
            - ADDRESS_MISMATCH
            - PARTIAL_OR_MISSING_ADDRESS
            - NAME_MISMATCH
            - NEEDS_FULL_DOC
            - NEEDS_RESIDENCE_PERMIT
            - NEEDS_PASSPORT
            - UNKNOWN
      description: ID Document status
    IdentityVideoActions:
      type: object
      properties:
        videoStatus:
          type: string
          description: Video document onboarding status
          enum:
          - AWAITING_UPLOAD
          - READY_FOR_REVIEW
          - NOT_REQUIRED
        rejectionReasons:
          type: array
          description: The reasons a video was rejected
          items:
            type: string
            description: The reasons a video was rejected
            enum:
            - NOBODY_IN_VIDEO
            - FACE_NOT_CLEAR
            - NOT_CLEAR_BLURRY
            - NOT_CLEAR_TOO_DARK
            - NOT_CLEAR_FACE_COVERED
            - NOT_CLEAR_WEARING_HAT
            - ANGLE_INCORRECT
            - PHRASE_PROBLEM
            - PHRASE_NO_AUDIO
            - PHRASE_WRONG
            - PHRASE_INCOMPLETE
            - PHRASE_SAID_BY_SOMEONE_ELSE
            - ID_VIDEO_MISMATCH
            - NOT_SUITABLE
            - UNKNOWN
      description: ID Video Document status
    ImmigrationStatusActions:
      type: object
      properties:
        status:
          type: string
          description: Immigration actions status
          enum:
          - AWAITING_UPLOAD
          - READY_FOR_REVIEW
          - NOT_REQUIRED
        rejectionReasons:
          type: array
          description: The reasons why an immigration status check was rejected
          items:
            type: string
            description: The reasons why an immigration status check was rejected
            enum:
            - SHARE_CODE_INVALID
            - IMMIGRATION_STATUS_REQUIRED
            - UNKNOWN
      description: Proof of immigration status
    IncomeAndEmploymentActions:
      type: object
      properties:
        status:
          type: string
          description: Income and employment actions status
          enum:
          - AWAITING_UPLOAD
          - READY_FOR_REVIEW
          - NOT_REQUIRED
      description: Income and employment information actions
    OutstandingActionsResponse:
      type: object
      properties:
        status:
          type: string
          description: Current onboarding status of the person
          enum:
          - MORE_INFORMATION_REQUIRED
          - READY_FOR_REVIEW
          - IN_REVIEW
          - ACCEPTED
          - REJECTED
          - CANCELLED
        personalInformationActions:
          $ref: '#/components/schemas/PersonalInformationActions'
        identityDocumentActions:
          $ref: '#/components/schemas/IdentityDocumentActions'
        identityVideoActions:
          $ref: '#/components/schemas/IdentityVideoActions'
        incomeAndEmploymentActions:
          $ref: '#/components/schemas/IncomeAndEmploymentActions'
        termsAcceptanceActions:
          $ref: '#/components/schemas/TermsAcceptanceActions'
        proofOfAddressActions:
          $ref: '#/components/schemas/ProofOfAddressActions'
        taxDeclarationActions:
          $ref: '#/components/schemas/TaxDeclarationActions'
        immigrationStatusActions:
          $ref: '#/components/schemas/ImmigrationStatusActions'
      description: The status of various onboarding actions required before the onboarding
        process can continue
    PersonalInformationActions:
      type: object
      properties:
        firstNameStatus:
          type: string
          description: First name onboarding status
          enum:
          - AWAITING_UPLOAD
          - READY_FOR_REVIEW
          - NOT_REQUIRED
        lastNameStatus:
          type: string
          description: Last name onboarding status
          enum:
          - AWAITING_UPLOAD
          - READY_FOR_REVIEW
          - NOT_REQUIRED
        dateOfBirthStatus:
          type: string
          description: Date of birth onboarding status
          enum:
          - AWAITING_UPLOAD
          - READY_FOR_REVIEW
          - NOT_REQUIRED
        nameChangedocumentStatus:
          type: string
          writeOnly: true
          enum:
          - AWAITING_UPLOAD
          - READY_FOR_REVIEW
          - NOT_REQUIRED
        employmentSectorStatus:
          type: string
          description: Employment sector onboarding status
          enum:
          - AWAITING_UPLOAD
          - READY_FOR_REVIEW
          - NOT_REQUIRED
        documentRejectionReasons:
          type: array
          description: The reasons a proof of name change document was rejected
          items:
            type: string
            description: The reasons a proof of name change document was rejected
            enum:
            - NOT_ACCEPTABLE_DOC_TYPE
            - DOC_OUT_OF_DATE
            - SOME_INFORMATION_ILLEGIBLE
            - PHOTO_BLURRY
            - PHOTO_TOO_DARK
            - PHOTO_CROPPED
            - PHOTO_PARTIALLY_COVERED
            - PHOTO_REFLECTION
            - PHOTO_NO_FACE
            - DOB_NOT_VISIBLE
            - DOCUMENT_DAMAGED
            - CANNOT_VALIDATE
            - MUST_BE_ORIGINAL
            - ADDRESS_MISMATCH
            - PARTIAL_OR_MISSING_ADDRESS
            - NAME_MISMATCH
            - NEEDS_FULL_DOC
            - NEEDS_RESIDENCE_PERMIT
            - NEEDS_PASSPORT
            - UNKNOWN
        acceptableDocumentTypes:
          type: array
          description: Dynamically generated list of name change documents for the
            user
          items:
            type: string
            description: Dynamically generated list of name change documents for the
              user
            enum:
            - PASSPORT
            - PROVISIONAL_DRIVING_LICENSE
            - FULL_DRIVING_LICENSE
            - RESIDENCE_PERMIT
            - IDENTITY_CARD
            - MARRIAGE_CERTIFICATE
            - DEED_POLL
            - DIVORCE_CERTIFICATE
        nameChangeDocumentStatus:
          type: string
          description: Proof of name change document onboarding status
          enum:
          - AWAITING_UPLOAD
          - READY_FOR_REVIEW
          - NOT_REQUIRED
      description: Personal information status
    ProofOfAddressActions:
      type: object
      properties:
        status:
          type: string
          description: Proof of address onboarding status
          enum:
          - AWAITING_UPLOAD
          - READY_FOR_REVIEW
          - NOT_REQUIRED
        acceptableDocumentTypes:
          type: array
          description: Dynamically generated list of acceptable proof of address documents
            for the user
          items:
            type: string
            description: Dynamically generated list of acceptable proof of address
              documents for the user
            enum:
            - FULL_DRIVING_LICENSE
            - PROVISIONAL_DRIVING_LICENSE
            - BANK_STATEMENT
            - FINANCIAL_STATEMENT
            - UTILITY_BILL
            - GOVERNMENT_LETTER
            - COUNCIL_TAX
            - HOUSING_LETTER
            - UNIVERSITY_LETTER
            - NI_LETTER
        rejectionReasons:
          type: array
          description: Reasons the document was rejected
          items:
            type: string
            description: Reasons the document was rejected
            enum:
            - NOT_ACCEPTABLE_DOC_TYPE
            - DOC_OUT_OF_DATE
            - SOME_INFORMATION_ILLEGIBLE
            - PHOTO_BLURRY
            - PHOTO_TOO_DARK
            - PHOTO_CROPPED
            - PHOTO_PARTIALLY_COVERED
            - PHOTO_REFLECTION
            - PHOTO_NO_FACE
            - DOB_NOT_VISIBLE
            - DOCUMENT_DAMAGED
            - CANNOT_VALIDATE
            - MUST_BE_ORIGINAL
            - ADDRESS_MISMATCH
            - PARTIAL_OR_MISSING_ADDRESS
            - NAME_MISMATCH
            - NEEDS_FULL_DOC
            - NEEDS_RESIDENCE_PERMIT
            - NEEDS_PASSPORT
            - UNKNOWN
      description: Proof of address status
    TaxDeclarationActions:
      type: object
      properties:
        status:
          type: string
          description: Tax Declaration onboarding status
          enum:
          - AWAITING_UPLOAD
          - READY_FOR_REVIEW
          - NOT_REQUIRED
      description: Tax Declaration status
    TermsAcceptanceActions:
      type: object
      properties:
        status:
          type: string
          description: Terms acceptance status
          enum:
          - AWAITING_UPLOAD
          - READY_FOR_REVIEW
          - NOT_REQUIRED
      description: Terms acceptance actions
    SourceOfFunds:
      type: object
      properties:
        source:
          type: string
          description: The source of funds
        displayText:
          type: string
          description: Human-readable representation of the source of funds
        employmentSectorRequired:
          type: boolean
          description: Whether the source of funds needs to be qualified with an employment
            sector
      description: Information relating to a particular source of funds
    SourcesOfFunds:
      type: object
      properties:
        sourceOfFunds:
          uniqueItems: true
          type: array
          description: "Sources of funds. DEPRECATED: please read data from sourcesOfFunds\
            \ tag instead"
          items:
            type: string
            description: "Sources of funds. DEPRECATED: please read data from sourcesOfFunds\
              \ tag instead"
            enum:
            - BENEFITS
            - FRIENDS_AND_FAMILY
            - INVESTMENT
            - LOANS
            - MONTHLY_SALARY
            - PENSION
            - PROPERTY
            - WEEKLY_WAGES
        sourcesOfFunds:
          type: array
          description: Available options to choose from for sources of funds.
          items:
            $ref: '#/components/schemas/SourceOfFunds'
      description: The possible sources of funds available to choose from
    ValidMobilePhoneCountries:
      type: object
      properties:
        validCountries:
          type: array
          description: ISO country codes where a mobile number can originate from
          example:
          - AD
          - AT
          - AU
          items:
            type: string
            description: ISO country codes where a mobile number can originate from
            example: "[\"AD\",\"AT\",\"AU\"]"
      description: The valid countries from where a mobile number can originate from
    PresignedUploadUrl:
      type: object
      properties:
        url:
          type: string
          description: Presigned media document upload URL
          example: https://presigned-url-demo23071997.s3.eu-west-1.amazonaws.com/img.png?X-Amz-Algorithm=xx&X-Amz-Credential=xx&X-Amz-Expires=1800&X-Amz-Signature=xx&X-Amz-SignedHeaders=host
        identityUploadUid:
          type: string
          description: Identity Document Upload UID
          format: uuid
          example: 0c26f4cc-7ba4-475c-8a19-2d13db9f4a81
      description: Identity document upload URL response
    Phrase:
      type: object
      properties:
        phrase:
          type: string
          description: 'The phrase for identity verification '
          example: "Hi, my name is Bob and I'd like to open an account"
        issuedAt:
          type: string
          description: The date and time that the phrase was generated
          format: date-time
          example: 2021-05-04T12:55:36.523Z
        phraseUid:
          type: string
          description: The phrase UID
          format: uuid
          example: 0c26f4cc-7ba4-475c-8a19-2d13db9f4a81
      description: Identity verification phrase for onboarding a new customer
    IdentityDocumentStatusResponse:
      type: object
      properties:
        documentPredictionStatus:
          type: string
          writeOnly: true
          enum:
          - SUCCESS
          - AWAITING_PREDICTION
          - FAILURE
        modelDocumentDecision:
          $ref: '#/components/schemas/IdentityModelDocumentDecision'
        modelPredictionStatus:
          type: string
          description: Outcome of the model prediction process
          enum:
          - SUCCESS
          - AWAITING_PREDICTION
          - FAILURE
      description: Response representing the overall status of the identity document
        checks
    IdentityModelDocumentDecision:
      type: object
      properties:
        decision:
          type: string
          description: Outcome of the machine learning document check
          enum:
          - PASS
          - FAIL
        failedChecks:
          type: array
          description: List of quality checks that have failed for the given document
          items:
            type: string
            description: List of quality checks that have failed for the given document
            enum:
            - NOT_ACCEPTABLE_DOC_TYPE
            - PHOTO_BLURRY
            - PHOTO_TOO_DARK
            - PHOTO_CROPPED
            - PHOTO_REFLECTION
            - PHOTO_NO_FACE
            - UNKNOWN
      description: "Response representing the status of the identity document checks,\
        \ with any failed quality checks"
    EmploymentSectorRegulationStatus:
      required:
      - displayText
      type: object
      properties:
        employmentSector:
          type: string
          description: Employment sector
          example: SOFTWARE_AND_IT
        displayText:
          type: string
          description: Human-readable representation of the given employment sector
            for display purposes
        guidanceText:
          type: string
          description: Optional text giving additional information about the employment
            sector
        regulationStatus:
          type: string
          description: Regulation status
          example: NOT_REGULATED
          enum:
          - REGULATED
          - NOT_REGULATED
      description: "All information relating to an available employment sector, including\
        \ its regulation status"
    EmploymentSectorRoleResponse:
      type: object
      properties:
        role:
          type: string
          description: A position held within an employment sector
          example: EMPLOYEE
        displayText:
          type: string
          description: Human-readable representation of the given role for display
            purposes
      description: Information relating to an Employment Sector Role
    EmploymentSectorsResponse:
      type: object
      properties:
        employmentSectors:
          type: array
          description: All available employment sector options to choose from
          items:
            $ref: '#/components/schemas/EmploymentSectorRegulationStatus'
        employmentSectorRoles:
          type: array
          description: All available employment sector role options to choose from
          items:
            $ref: '#/components/schemas/EmploymentSectorRoleResponse'
      description: Response containing all available options relating to employment
        sectors
    IncomeBandDisplay:
      type: object
      properties:
        incomeBand:
          type: string
          enum:
          - BAND_0
          - BAND_1
          - BAND_2
          - BAND_3
          - BAND_4
          - BAND_5
          - BAND_6
        displayText:
          type: string
      description: Income band and display text
    IncomeBandDisplays:
      type: object
      properties:
        incomeBandDisplays:
          type: array
          items:
            $ref: '#/components/schemas/IncomeBandDisplay'
    PersonTermsAcceptance:
      type: object
      properties:
        documentName:
          type: string
          description: Name of the terms document
          example: GeneralTerms
        version:
          type: integer
          description: Version of the terms document
          format: int32
          example: 5
        firstOfferedDate:
          type: string
          description: Date the terms were first offered to the person being onboarded
          format: date
          example: 2023-04-05
        acceptanceDate:
          type: string
          description: Date the terms were accepted by the person being onboarded
          format: date
          example: 2023-04-05
        accepted:
          type: boolean
      description: Required term details
    PersonTermsAcceptanceResponse:
      type: object
      properties:
        personTermsAcceptances:
          type: array
          description: List of required terms
          items:
            $ref: '#/components/schemas/PersonTermsAcceptance'
      description: Response containing term names required
    TaxLiabilityCountries:
      type: object
      properties:
        countries:
          type: array
          items:
            type: string
            enum:
            - UNDEFINED
            - AC
            - AD
            - AE
            - AF
            - AG
            - AI
            - AL
            - AM
            - AN
            - AO
            - AQ
            - AR
            - AS
            - AT
            - AU
            - AW
            - AX
            - AZ
            - BA
            - BB
            - BD
            - BE
            - BF
            - BG
            - BH
            - BI
            - BJ
            - BL
            - BM
            - BN
            - BO
            - BQ
            - BR
            - BS
            - BT
            - BU
            - BV
            - BW
            - BY
            - BZ
            - CA
            - CC
            - CD
            - CF
            - CG
            - CH
            - CI
            - CK
            - CL
            - CM
            - CN
            - CO
            - CP
            - CR
            - CS
            - CU
            - CV
            - CW
            - CX
            - CY
            - CZ
            - DE
            - DG
            - DJ
            - DK
            - DM
            - DO
            - DZ
            - EA
            - EC
            - EE
            - EG
            - EH
            - ER
            - ES
            - ET
            - EU
            - EZ
            - FI
            - FJ
            - FK
            - FM
            - FO
            - FR
            - FX
            - GA
            - GB
            - GD
            - GE
            - GF
            - GG
            - GH
            - GI
            - GL
            - GM
            - GN
            - GP
            - GQ
            - GR
            - GS
            - GT
            - GU
            - GW
            - GY
            - HK
            - HM
            - HN
            - HR
            - HT
            - HU
            - IC
            - ID
            - IE
            - IL
            - IM
            - IN
            - IO
            - IQ
            - IR
            - IS
            - IT
            - JE
            - JM
            - JO
            - JP
            - KE
            - KG
            - KH
            - KI
            - KM
            - KN
            - KP
            - KR
            - KW
            - KY
            - KZ
            - LA
            - LB
            - LC
            - LI
            - LK
            - LR
            - LS
            - LT
            - LU
            - LV
            - LY
            - MA
            - MC
            - MD
            - ME
            - MF
            - MG
            - MH
            - MK
            - ML
            - MM
            - MN
            - MO
            - MP
            - MQ
            - MR
            - MS
            - MT
            - MU
            - MV
            - MW
            - MX
            - MY
            - MZ
            - NA
            - NC
            - NE
            - NF
            - NG
            - NI
            - NL
            - "NO"
            - NP
            - NR
            - NT
            - NU
            - NZ
            - OM
            - PA
            - PE
            - PF
            - PG
            - PH
            - PK
            - PL
            - PM
            - PN
            - PR
            - PS
            - PT
            - PW
            - PY
            - QA
            - RE
            - RO
            - RS
            - RU
            - RW
            - SA
            - SB
            - SC
            - SD
            - SE
            - SF
            - SG
            - SH
            - SI
            - SJ
            - SK
            - SL
            - SM
            - SN
            - SO
            - SR
            - SS
            - ST
            - SU
            - SV
            - SX
            - SY
            - SZ
            - TA
            - TC
            - TD
            - TF
            - TG
            - TH
            - TJ
            - TK
            - TL
            - TM
            - TN
            - TO
            - TP
            - TR
            - TT
            - TV
            - TW
            - TZ
            - UA
            - UG
            - UK
            - UM
            - US
            - UY
            - UZ
            - VA
            - VC
            - VE
            - VG
            - VI
            - VN
            - VU
            - WF
            - WS
            - XI
            - XU
            - XK
            - XX
            - YE
            - YT
            - YU
            - ZA
            - ZM
            - ZR
            - ZW
      description: List of countries that can be submitted in a tax declaration
      example:
        countries:
        - US
    CreatePersonRequest:
      required:
      - addressHistoryCoversMinimumTerm
      - currentAddress
      - dateOfBirth
      - email
      - externalIdentifier
      - firstName
      - lastName
      - mobileNumber
      - mobileNumberVerified
      - title
      type: object
      properties:
        externalIdentifier:
          maxLength: 64
          minLength: 0
          type: string
          description: External identifier for the request
          example: fx3gnyg2d7si533iobfmt9vy4ryj1
        mobileNumber:
          maxLength: 32
          minLength: 0
          type: string
          description: Account holder's mobile phone number
          example: "447812345678"
        mobileNumberVerified:
          type: boolean
          description: Account holder's mobile phone number has been verified
          example: true
        title:
          maxLength: 20
          minLength: 0
          type: string
          description: Account holder's title
          example: MISS
          enum:
          - "MRS, MISS, MS, LADY, MR, SIR"
        firstName:
          maxLength: 64
          minLength: 0
          type: string
          description: Account holder's first name
          example: Gytha
        middleName:
          maxLength: 64
          minLength: 0
          type: string
          description: Account holder's middle name
          example: Courtney
        lastName:
          maxLength: 64
          minLength: 0
          type: string
          description: Account holder's last name
          example: Ogg
        dateOfBirth:
          type: string
          description: Account holder's date of birth
          format: date
          example: 2000-12-30
        email:
          type: string
          description: The email address for the account holder
          example: gytha.ogg@example.com
        currentAddress:
          $ref: '#/components/schemas/AddressRequest'
        previousAddresses:
          type: array
          description: "Account holder's previous address history, 6 month minimum"
          items:
            $ref: '#/components/schemas/AddressRequest'
        addressHistoryCoversMinimumTerm:
          type: boolean
          description: Has provided address history covering at least six months
      description: Request to register an individual as part of onboarding
    AcceptedTerms:
      required:
      - termDocumentName
      - version
      type: object
      properties:
        termDocumentName:
          type: string
          description: The name of the terms document
        version:
          minimum: 1
          type: integer
          description: The version of the terms document
          format: int32
      description: The terms that are being accepted
    AcceptedTermsRequest:
      required:
      - acceptedTerms
      type: object
      properties:
        acceptedTerms:
          type: array
          description: All of the terms that have been accepted
          items:
            $ref: '#/components/schemas/AcceptedTerms'
      description: Request to provide a collection of terms that have been accepted
    EmploymentDeclaration:
      required:
      - employerRegulationStatus
      - employmentSector
      type: object
      properties:
        employmentSector:
          type: string
          description: The sector of the employer. This should match one of the options
            returned from GET /api/v2/onboard/employment-sectors. DEPRECATED - Use
            the nested employmentSectorInfo tag instead!
        employerName:
          maxLength: 255
          type: string
          description: "The employer's name, this must be provided if the employment\
            \ sector is regulated"
        employerRegulationStatus:
          type: string
          description: The regulation status of the employer
          enum:
          - NOT_ASKED
          - REGULATED
          - NOT_REGULATED
        employmentSectorInfo:
          $ref: '#/components/schemas/EmploymentSectorInfo'
      description: Details of employment
    EmploymentSectorInfo:
      required:
      - role
      - sector
      type: object
      properties:
        sector:
          type: string
          description: The sector of the employer. This should match one of the options
            returned from GET /api/v2/onboard/employment-sectors
        role:
          type: string
          description: The role within the employment sector
      description: Details of the employment sector
    IncomeAndEmploymentDetails:
      required:
      - employmentDeclaration
      - personIncomeDeclaration
      type: object
      properties:
        personIncomeDeclaration:
          $ref: '#/components/schemas/PersonIncomeDeclaration'
        employmentDeclaration:
          $ref: '#/components/schemas/EmploymentDeclaration'
      description: "Request to declare income and, if required, employment info"
    PersonIncomeDeclaration:
      required:
      - currencyCode
      - incomeBand
      - sourcesOfFunds
      type: object
      properties:
        incomeBand:
          type: string
          description: Income band for this declaration
          enum:
          - BAND_0
          - BAND_1
          - BAND_2
          - BAND_3
          - BAND_4
          - BAND_5
          - BAND_6
        currencyCode:
          type: string
          description: Currency code
          example: GBP
        sourcesOfFunds:
          uniqueItems: true
          type: array
          description: Source of funds
          items:
            type: string
            description: Source of funds
      description: "Declaration of person's income, its source, and a currency"
    ShareCodeDeclaration:
      required:
      - shareCode
      type: object
      properties:
        shareCode:
          maxLength: 9
          minLength: 9
          type: string
          description: An online nine-digit alphanumerical code provided by the UK
            government to prove <a href=https://www.gov.uk/view-prove-immigration-status>immigration
            status</a> for non-UK nationals
          example: S4Y9ADZWT
      description: Declaration of share code
    UpdateOnboardingPersonalInfoRequest:
      type: object
      properties:
        title:
          type: string
          description: Account holder's title
          example: Ms
        firstName:
          type: string
          description: Account holder's first name
          example: Gytha
        middleName:
          type: string
          description: Account holder's middle name
          example: Courtney
        lastName:
          type: string
          description: Account holder's last name
          example: Ogg
        dateOfBirth:
          type: string
          description: Account holder's date of birth
          format: date
          example: 2000-12-30
      description: "Request to update the personal information for an individual that's\
        \ onboarding. Only fields to be updated need to be supplied, if unchanged\
        \ they may be null."
    ConfirmUploadRequest:
      required:
      - filename
      - mimeType
      - phraseUid
      type: object
      properties:
        phraseUid:
          type: string
          description: The phrase UID
          format: uuid
          example: 0c26f4cc-7ba4-475c-8a19-2d13db9f4a81
        filename:
          type: string
          description: The filename of the video that was uploaded
          example: id_video.mp4
        contentType:
          type: object
          properties:
            type:
              type: string
            subtype:
              type: string
            parameters:
              type: object
              additionalProperties:
                type: string
            wildcardType:
              type: boolean
            wildcardSubtype:
              type: boolean
          writeOnly: true
        mimeType:
          type: object
          properties:
            type:
              type: string
            subtype:
              type: string
            parameters:
              type: object
              additionalProperties:
                type: string
            wildcardType:
              type: boolean
            wildcardSubtype:
              type: boolean
          description: The MIME type of the content to be uploaded
          example: image/png
      description: Request to confirm a document has been uploaded
    PersonReverificationRequest:
      required:
      - emailVerified
      - externalIdentifier
      type: object
      properties:
        emailVerified:
          type: boolean
          description: Whether the email has been verified
        externalIdentifier:
          maxLength: 64
          minLength: 0
          type: string
          description: External identifier
          example: fx3gnyg2d7si533iobfmt9vy4ryj1
      description: A request for person reverification
    PersonReverificationPhrase:
      type: object
      properties:
        phraseUid:
          type: string
          description: The phrase UID
          format: uuid
          example: 0c26f4cc-7ba4-475c-8a19-2d13db9f4a81
        phrase:
          type: string
          description: 'The phrase for identity verification '
          example: "Hi, my name is Bob Smith please verify my identity"
      description: Identity verification phrase for a customer
    PresignedUrl:
      type: object
      properties:
        presignedUrl:
          type: string
          description: Presigned media document upload URL
          example: https://presigned-url-demo23071997.s3.eu-west-1.amazonaws.com/img.png?X-Amz-Algorithm=xx&X-Amz-Credential=xx&X-Amz-Expires=1800&X-Amz-Signature=xx&X-Amz-SignedHeaders=host
      description: Response providing a presigned url
    PresignedUrlRequest:
      required:
      - md5Checksum
      - mimeType
      type: object
      properties:
        contentType:
          type: object
          properties:
            type:
              type: string
            subtype:
              type: string
            parameters:
              type: object
              additionalProperties:
                type: string
            wildcardType:
              type: boolean
            wildcardSubtype:
              type: boolean
          writeOnly: true
        contentMd5:
          type: string
          writeOnly: true
        mimeType:
          type: object
          properties:
            type:
              type: string
            subtype:
              type: string
            parameters:
              type: object
              additionalProperties:
                type: string
            wildcardType:
              type: boolean
            wildcardSubtype:
              type: boolean
          description: The MIME type of the content to be uploaded
          example: video/mp4
        md5Checksum:
          type: string
          description: A MD5 checksum of the content to be uploaded
          example: Qlu5/ZIObKCQNx4xyMUI+w==
      description: Request to generate an upload URL for submitting documentation
    PersonReverificationReview:
      type: object
      properties:
        status:
          type: string
          description: 'The current status of the review '
          example: IN_REVIEW
          enum:
          - DOCUMENT_UPLOAD_REQUIRED
          - IN_REVIEW
          - APPROVED
          - DECLINED
      description: Information relating to the review of the person reverification
        request
    SimulatedOnboardingRejectionReasonsWrapper:
      type: object
      properties:
        documentRejectionReasons:
          type: array
          description: Rejection reasons for the document uploaded in the onboarding
            application
          items:
            type: string
            description: Rejection reasons for the document uploaded in the onboarding
              application
            enum:
            - NOT_ACCEPTABLE_DOC_TYPE
            - DOC_OUT_OF_DATE
            - SOME_INFORMATION_ILLEGIBLE
            - PHOTO_BLURRY
            - PHOTO_TOO_DARK
            - PHOTO_CROPPED
            - PHOTO_PARTIALLY_COVERED
            - PHOTO_REFLECTION
            - PHOTO_NO_FACE
            - DOB_NOT_VISIBLE
            - DOCUMENT_DAMAGED
            - CANNOT_VALIDATE
            - MUST_BE_ORIGINAL
            - ADDRESS_MISMATCH
            - PARTIAL_OR_MISSING_ADDRESS
            - NAME_MISMATCH
            - NEEDS_FULL_DOC
            - NEEDS_RESIDENCE_PERMIT
            - NEEDS_PASSPORT
            - UNKNOWN
        videoRejectionReasons:
          type: array
          description: Rejection reasons for the video uploaded in the onboarding
            application
          items:
            type: string
            description: Rejection reasons for the video uploaded in the onboarding
              application
            enum:
            - NOBODY_IN_VIDEO
            - FACE_NOT_CLEAR
            - NOT_CLEAR_BLURRY
            - NOT_CLEAR_TOO_DARK
            - NOT_CLEAR_FACE_COVERED
            - NOT_CLEAR_WEARING_HAT
            - ANGLE_INCORRECT
            - PHRASE_PROBLEM
            - PHRASE_NO_AUDIO
            - PHRASE_WRONG
            - PHRASE_INCOMPLETE
            - PHRASE_SAID_BY_SOMEONE_ELSE
            - ID_VIDEO_MISMATCH
            - NOT_SUITABLE
            - UNKNOWN
        personalDetailsRejectionReasons:
          type: array
          description: Rejection reasons for the personal details provided in the
            application
          items:
            type: string
            description: Rejection reasons for the personal details provided in the
              application
            enum:
            - FIRST_NAME
            - LAST_NAME
            - DATE_OF_BIRTH
            - NAME_CHANGE_DOCUMENT
            - EMPLOYMENT_SECTOR_MISSING
        onboardingRejectionScenarios:
          type: array
          description: Rejection scenarios for the onboarding application - note that
            these rejection scenarios take precedence over all other rejection properties
          items:
            type: string
            description: Rejection scenarios for the onboarding application - note
              that these rejection scenarios take precedence over all other rejection
              properties
            enum:
            - PROOF_OF_ADDRESS_REQUIRED
            - MISMATCHED_FIRST_NAME
            - MISMATCHED_LAST_NAME
            - MISMATCHED_DOB
            - ID_DOC_REJECTED
            - VIDEO_REJECTED
            - TAX_DECLARATION_REQUIRED
            - PROOF_OF_UK_RESIDENCY_REQUIRED
            - PASSPORT_REQUIRED
      description: Request to reject an onboarding application
    Enabling:
      required:
      - enabled
      type: object
      properties:
        enabled:
          type: boolean
    CurrencyFlag:
      required:
      - currency
      - enabled
      type: object
      properties:
        enabled:
          type: boolean
        currency:
          type: string
      description: Whether spending is enabled on this card for the specified currency
    Card:
      required:
      - activated
      - activationRequested
      - atmEnabled
      - cancelled
      - cardAssociationUid
      - cardUid
      - currencyFlags
      - enabled
      - endOfCardNumber
      - gamblingEnabled
      - magStripeEnabled
      - mobileWalletEnabled
      - onlineEnabled
      - posEnabled
      - publicToken
      - walletNotificationEnabled
      type: object
      properties:
        cardUid:
          type: string
          format: uuid
          example: ddeeddee-ddee-ddee-ddee-ddeeddeeddee
        publicToken:
          type: string
          example: "123456789"
        enabled:
          type: boolean
        walletNotificationEnabled:
          type: boolean
        posEnabled:
          type: boolean
        atmEnabled:
          type: boolean
        onlineEnabled:
          type: boolean
        mobileWalletEnabled:
          type: boolean
        gamblingEnabled:
          type: boolean
        magStripeEnabled:
          type: boolean
        cancelled:
          type: boolean
        activationRequested:
          type: boolean
        activated:
          type: boolean
        endOfCardNumber:
          type: string
          example: "59312"
        currencyFlags:
          type: array
          items:
            $ref: '#/components/schemas/CurrencyFlag'
        cardAssociationUid:
          type: string
          format: uuid
          example: aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa
        gamblingToBeEnabledAt:
          type: string
          format: date-time
      description: Information about card
    Cards:
      required:
      - cards
      type: object
      properties:
        cards:
          type: array
          items:
            $ref: '#/components/schemas/Card'
      description: Wrapper around multiple cards
    Money:
      required:
      - amount
      - currency
      type: object
      properties:
        currency:
          type: string
          enum:
          - UNDEFINED
          - AED
          - AFN
          - ALL
          - AMD
          - ANG
          - AOA
          - ARS
          - AUD
          - AWG
          - AZN
          - BAM
          - BBD
          - BDT
          - BGN
          - BHD
          - BIF
          - BMD
          - BND
          - BOB
          - BOV
          - BRL
          - BSD
          - BTN
          - BWP
          - BYN
          - BYR
          - BZD
          - CAD
          - CDF
          - CHE
          - CHF
          - CHW
          - CLF
          - CLP
          - CNY
          - COP
          - COU
          - CRC
          - CUC
          - CUP
          - CVE
          - CZK
          - DJF
          - DKK
          - DOP
          - DZD
          - EGP
          - ERN
          - ETB
          - EUR
          - FJD
          - FKP
          - GBP
          - GEL
          - GHS
          - GIP
          - GMD
          - GNF
          - GTQ
          - GYD
          - HKD
          - HNL
          - HRK
          - HTG
          - HUF
          - IDR
          - ILS
          - INR
          - IQD
          - IRR
          - ISK
          - JMD
          - JOD
          - JPY
          - KES
          - KGS
          - KHR
          - KMF
          - KPW
          - KRW
          - KWD
          - KYD
          - KZT
          - LAK
          - LBP
          - LKR
          - LRD
          - LSL
          - LTL
          - LYD
          - MAD
          - MDL
          - MGA
          - MKD
          - MMK
          - MNT
          - MOP
          - MRO
          - MRU
          - MUR
          - MVR
          - MWK
          - MXN
          - MXV
          - MYR
          - MZN
          - NAD
          - NGN
          - NIO
          - NOK
          - NPR
          - NZD
          - OMR
          - PAB
          - PEN
          - PGK
          - PHP
          - PKR
          - PLN
          - PYG
          - QAR
          - RON
          - RSD
          - RUB
          - RUR
          - RWF
          - SAR
          - SBD
          - SCR
          - SDG
          - SEK
          - SGD
          - SHP
          - SLL
          - SLE
          - SOS
          - SRD
          - SSP
          - STD
          - STN
          - SVC
          - SYP
          - SZL
          - THB
          - TJS
          - TMT
          - TND
          - TOP
          - TRY
          - TTD
          - TWD
          - TZS
          - UAH
          - UGX
          - USD
          - USN
          - USS
          - UYI
          - UYU
          - UZS
          - VEF
          - VES
          - VND
          - VUV
          - WST
          - XAF
          - XAG
          - XAU
          - XBA
          - XBB
          - XBC
          - XBD
          - XCD
          - XDR
          - XOF
          - XPD
          - XPF
          - XPT
          - XSU
          - XTS
          - XUA
          - XXX
          - YER
          - ZAR
          - ZMW
          - ZWL
        amount:
          type: number
    RecurringCardPayment:
      type: object
      properties:
        recurringPaymentUid:
          type: string
          description: Unique identifier for the recurring card payment
          format: uuid
          example: a3864433-dbba-4257-99ad-1e29c4d72264
        accountUid:
          type: string
          description: Unique identifier for the account
          format: uuid
          example: f095e31d-6d8b-4015-acaa-da484ac50fd9
        counterPartyUid:
          type: string
          description: Unique identifier for the counterparty
          format: uuid
          example: 0cef5242-1d69-47ba-a72c-d9ab0e67ef88
        counterPartyName:
          type: string
          description: Counterparty name
          example: Bank of England
        status:
          type: string
          description: Recurring payment status
          example: ACTIVE
          enum:
          - ACTIVE
          - MARKED_HIDDEN
          - CANCELLED
        latestFeedItemUid:
          type: string
          description: Unique identifier for the latest feed item
          format: uuid
          example: cdfaed5b-e125-411f-9c5b-22621b8e077b
        latestPaymentDate:
          type: string
          description: Latest payment date
          format: date-time
          example: 2020-09-22T15:40:00-05:00
        latestPaymentAmount:
          $ref: '#/components/schemas/CurrencyAndAmount'
        mostRecentFeedItem:
          type: string
          description: Unique identifier for the feed item
          format: uuid
          example: cdfaed5b-e125-411f-9c5b-22621b8e077b
          deprecated: true
        mostRecentPaymentDate:
          type: string
          description: Most recent payment date
          format: date-time
          example: 2020-09-22T15:40:00-05:00
          deprecated: true
        mostRecentPaymentAmount:
          $ref: '#/components/schemas/Money'
      description: List of recurring card payments
    RecurringCardPayments:
      type: object
      properties:
        recurringPayments:
          type: array
          description: List of recurring card payments
          items:
            $ref: '#/components/schemas/RecurringCardPayment'
      description: List of recurring card payments
    DirectDebitMandateV2:
      type: object
      properties:
        uid:
          type: string
          format: uuid
          example: eeffeeff-eeff-eeff-eeff-eeffeeffeeff
        reference:
          type: string
          example: Accommodation
        status:
          type: string
          example: LIVE
          enum:
          - CANCELLED
          - LIVE
          - PENDING_CAS
        source:
          type: string
          example: ELECTRONIC
          enum:
          - ELECTRONIC
          - PAPER
        created:
          type: string
          format: date-time
          example: 2019-04-16T11:47:50.477Z
        cancelled:
          type: string
          format: date-time
        nextDate:
          type: string
          format: date
          example: 2020-04-16
        lastDate:
          type: string
          format: date
          example: 2020-03-16
        originatorName:
          type: string
          example: University Of Warwick
        originatorUid:
          type: string
          format: uuid
          example: ff11ff11-ff11-ff11-ff11-ff11ff11ff11
        merchantUid:
          type: string
          format: uuid
          example: 80ba691d-10a6-432c-90be-6ceaf932410e
        lastPayment:
          $ref: '#/components/schemas/LastPayment'
        accountUid:
          type: string
          format: uuid
          example: 323ac478-11a7-232d-90ae-7ceaf832330e
        categoryUid:
          type: string
          format: uuid
          example: null
      description: Single mandate
    LastPayment:
      type: object
      properties:
        lastDate:
          type: string
          format: date
          example: 2020-03-16
        lastAmount:
          $ref: '#/components/schemas/CurrencyAndAmount'
      description: Last direct debit payment
      nullable: true
    DirectDebitMandatesV2:
      type: object
      properties:
        mandates:
          type: array
          items:
            $ref: '#/components/schemas/DirectDebitMandateV2'
      description: List of mandates
    DirectDebitPayment:
      type: object
      properties:
        paymentAmount:
          $ref: '#/components/schemas/CurrencyAndAmount'
        createdAt:
          type: string
          description: Date when direct debit payment was created
          format: date-time
      description: A previous Direct Debit payment
    DirectDebitPaymentsResponse:
      required:
      - directDebitPayments
      type: object
      properties:
        directDebitPayments:
          type: array
          description: List of processed direct debit mandate payments
          items:
            $ref: '#/components/schemas/DirectDebitPayment'
      description: Transaction history for a direct debit
    UpdateSpendingCategory:
      required:
      - spendingCategory
      type: object
      properties:
        spendingCategory:
          type: string
          description: The category of a transaction
          example: GROCERIES
          enum:
          - BIKE
          - BILLS_AND_SERVICES
          - BUCKET_LIST
          - CAR
          - CASH
          - CELEBRATION
          - CHARITY
          - CHILDREN
          - COFFEE
          - DEBT_REPAYMENT
          - DIY
          - DRINKS
          - EATING_OUT
          - EDUCATION
          - EMERGENCY
          - ENTERTAINMENT
          - ESSENTIAL_SPEND
          - EXPENSES
          - FAMILY
          - FITNESS
          - FUEL
          - GAMBLING
          - GAMING
          - GARDEN
          - GENERAL
          - GIFTS
          - GROCERIES
          - HOBBY
          - HOLIDAYS
          - HOME
          - IMPULSE_BUY
          - INCOME
          - INSURANCE
          - INVESTMENTS
          - LIFESTYLE
          - MAINTENANCE_AND_REPAIRS
          - MEDICAL
          - MORTGAGE
          - NON_ESSENTIAL_SPEND
          - PAYMENTS
          - PERSONAL_TRANSFERS
          - PETS
          - PROJECTS
          - RELATIONSHIPS
          - RENT
          - SAVING
          - SHOPPING
          - SUBSCRIPTIONS
          - TAKEAWAY
          - TAXI
          - TRANSPORT
          - TREATS
          - WEDDING
          - WELLBEING
          - NONE
          - REVENUE
          - OTHER_INCOME
          - CLIENT_REFUNDS
          - INVENTORY
          - STAFF
          - TRAVEL
          - WORKPLACE
          - REPAIRS_AND_MAINTENANCE
          - ADMIN
          - MARKETING
          - BUSINESS_ENTERTAINMENT
          - INTEREST_PAYMENTS
          - BANK_CHARGES
          - OTHER
          - FOOD_AND_DRINK
          - EQUIPMENT
          - PROFESSIONAL_SERVICES
          - PHONE_AND_INTERNET
          - VEHICLES
          - DIRECTORS_WAGES
          - VAT
          - CORPORATION_TAX
          - SELF_ASSESSMENT_TAX
          - INVESTMENT_CAPITAL
          - TRANSFERS
          - LOAN_PRINCIPAL
          - PERSONAL
          - DIVIDENDS
        permanentSpendingCategoryUpdate:
          type: boolean
          example: false
        previousSpendingCategoryReferencesUpdate:
          type: boolean
          example: false
    ReceiptCreationResponse:
      type: object
      properties:
        receiptUid:
          type: string
          description: The UUID of the created receipt. This UUID could be used for
            updating the receipt at a later point.
          format: uuid
          example: aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa
      description: Response after creating or updating a receipt
    Receipt:
      required:
      - items
      - metadataSource
      - paymentMethods
      - receiptIdentifier
      - receiptMerchant
      - totalAmount
      type: object
      properties:
        receiptUid:
          type: string
          format: uuid
          example: 7f03a13a-bbfc-4479-8d4d-abb6a9119d27
        feedItemUid:
          type: string
          format: uuid
          example: 5e03a13a-bbfc-4479-8d4d-abb6a9119d27
        metadataSource:
          type: string
          example: PARTNER
          enum:
          - CUSTOMER
          - STARLING
          - PARTNER
        receiptIdentifier:
          type: string
          example: "0987654321"
        totalAmount:
          type: number
          example: 10.65
        receiptMerchant:
          $ref: '#/components/schemas/ReceiptMerchant'
        currencyCode:
          type: string
          description: ISO-4217 3 character currency code
          example: GBP
          enum:
          - UNDEFINED
          - AED
          - AFN
          - ALL
          - AMD
          - ANG
          - AOA
          - ARS
          - AUD
          - AWG
          - AZN
          - BAM
          - BBD
          - BDT
          - BGN
          - BHD
          - BIF
          - BMD
          - BND
          - BOB
          - BOV
          - BRL
          - BSD
          - BTN
          - BWP
          - BYN
          - BYR
          - BZD
          - CAD
          - CDF
          - CHE
          - CHF
          - CHW
          - CLF
          - CLP
          - CNY
          - COP
          - COU
          - CRC
          - CUC
          - CUP
          - CVE
          - CZK
          - DJF
          - DKK
          - DOP
          - DZD
          - EGP
          - ERN
          - ETB
          - EUR
          - FJD
          - FKP
          - GBP
          - GEL
          - GHS
          - GIP
          - GMD
          - GNF
          - GTQ
          - GYD
          - HKD
          - HNL
          - HRK
          - HTG
          - HUF
          - IDR
          - ILS
          - INR
          - IQD
          - IRR
          - ISK
          - JMD
          - JOD
          - JPY
          - KES
          - KGS
          - KHR
          - KMF
          - KPW
          - KRW
          - KWD
          - KYD
          - KZT
          - LAK
          - LBP
          - LKR
          - LRD
          - LSL
          - LTL
          - LYD
          - MAD
          - MDL
          - MGA
          - MKD
          - MMK
          - MNT
          - MOP
          - MRO
          - MRU
          - MUR
          - MVR
          - MWK
          - MXN
          - MXV
          - MYR
          - MZN
          - NAD
          - NGN
          - NIO
          - NOK
          - NPR
          - NZD
          - OMR
          - PAB
          - PEN
          - PGK
          - PHP
          - PKR
          - PLN
          - PYG
          - QAR
          - RON
          - RSD
          - RUB
          - RUR
          - RWF
          - SAR
          - SBD
          - SCR
          - SDG
          - SEK
          - SGD
          - SHP
          - SLL
          - SLE
          - SOS
          - SRD
          - SSP
          - STD
          - STN
          - SVC
          - SYP
          - SZL
          - THB
          - TJS
          - TMT
          - TND
          - TOP
          - TRY
          - TTD
          - TWD
          - TZS
          - UAH
          - UGX
          - USD
          - USN
          - USS
          - UYI
          - UYU
          - UZS
          - VEF
          - VES
          - VND
          - VUV
          - WST
          - XAF
          - XAG
          - XAU
          - XBA
          - XBB
          - XBC
          - XBD
          - XCD
          - XDR
          - XOF
          - XPD
          - XPF
          - XPT
          - XSU
          - XTS
          - XUA
          - XXX
          - YER
          - ZAR
          - ZMW
          - ZWL
        items:
          type: array
          items:
            $ref: '#/components/schemas/ReceiptItem'
        notes:
          type: array
          items:
            $ref: '#/components/schemas/ReceiptNote'
        taxDetails:
          type: array
          items:
            $ref: '#/components/schemas/ReceiptTaxDetail'
        paymentMethods:
          type: array
          items:
            $ref: '#/components/schemas/ReceiptPaymentMethod'
        providerName:
          type: string
          example: Receipt App
      description: Transaction receipt
    ReceiptItem:
      required:
      - amount
      - description
      - tax
      type: object
      properties:
        receiptItemUid:
          type: string
          format: uuid
          example: 6f03a13a-bbfc-4479-8d4d-abb6a9119d27
        description:
          type: string
          example: Large Cappuccino
        quantity:
          type: integer
          format: int32
          example: 2
        amount:
          type: number
          example: 4.86
        tax:
          type: number
          example: 0.76
        url:
          type: string
          example: http://www.example.com
        creationTime:
          type: string
          description: The time the receipt item was created
          format: date-time
          example: 2020-05-04T12:05:40.457Z
        type:
          type: string
          description: "Type of receipt item. It can be PURCHASE, SERVICE_FEE, GRATUITY\
            \ or null"
          example: PURCHASE
          enum:
          - PURCHASE
          - SERVICE_FEE
          - GRATUITY
          - BALANCE_ADJUSTMENT
        notes:
          type: array
          items:
            type: string
        subItems:
          type: array
          items:
            $ref: '#/components/schemas/ReceiptSubItem'
    ReceiptMerchant:
      type: object
      properties:
        receiptMerchantUid:
          type: string
          format: uuid
          example: 08bc37ff-7130-4c7e-b8d4-8824950de73d
        identifier:
          maxLength: 50
          minLength: 0
          type: string
          example: Costa
        address:
          type: string
          example: "2 Finsbury Avenue, London, EC2M 2PP"
        emailAddress:
          maxLength: 255
          minLength: 0
          type: string
          example: help@merchant.co.uk
        logoUrl:
          type: string
          example: https://example.com/logo.png
        orderCollectionNumber:
          maxLength: 20
          minLength: 0
          type: string
          example: "123"
        taxNumber:
          maxLength: 16
          minLength: 0
          type: string
          example: "1234567890"
      description: Receipt Merchant Information
    ReceiptNote:
      required:
      - description
      type: object
      properties:
        noteUid:
          type: string
          format: uuid
          example: 6f03a13a-bbfc-4479-8d4d-abb6a9119d27
        title:
          type: string
          example: Special Offer
        description:
          type: string
          example: Get 10% OFF your next purchase with this receipt
        url:
          type: string
          example: http://www.example.com
      description: Note associated with a receipt
    ReceiptPaymentMethod:
      required:
      - amount
      - description
      type: object
      properties:
        paymentMethodUid:
          type: string
          format: uuid
          example: 1c164584-763b-4d69-bd01-a5c583f7ca25
        description:
          type: string
          example: Card Payment
        amount:
          type: number
          example: 14.99
    ReceiptSubItem:
      required:
      - description
      type: object
      properties:
        receiptSubItemUid:
          type: string
          format: uuid
          example: aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa
        description:
          type: string
          example: 6f03a13a-bbfc-4479-8d4d-abb6a9119d27
        quantity:
          type: integer
          format: int32
          example: 2
        amount:
          type: number
          example: 4.86
        notes:
          type: array
          items:
            type: string
    ReceiptTaxDetail:
      required:
      - taxCurrencyCode
      - taxName
      - taxValue
      type: object
      properties:
        receiptTaxDetailUid:
          type: string
          format: uuid
          example: 6f03a13a-bbfc-4479-8d4d-abb6a9119d27
        taxName:
          type: string
          example: Sales Tax
        taxValue:
          type: number
          example: 20.0
        taxCurrencyCode:
          type: string
          example: GBP
          enum:
          - UNDEFINED
          - AED
          - AFN
          - ALL
          - AMD
          - ANG
          - AOA
          - ARS
          - AUD
          - AWG
          - AZN
          - BAM
          - BBD
          - BDT
          - BGN
          - BHD
          - BIF
          - BMD
          - BND
          - BOB
          - BOV
          - BRL
          - BSD
          - BTN
          - BWP
          - BYN
          - BYR
          - BZD
          - CAD
          - CDF
          - CHE
          - CHF
          - CHW
          - CLF
          - CLP
          - CNY
          - COP
          - COU
          - CRC
          - CUC
          - CUP
          - CVE
          - CZK
          - DJF
          - DKK
          - DOP
          - DZD
          - EGP
          - ERN
          - ETB
          - EUR
          - FJD
          - FKP
          - GBP
          - GEL
          - GHS
          - GIP
          - GMD
          - GNF
          - GTQ
          - GYD
          - HKD
          - HNL
          - HRK
          - HTG
          - HUF
          - IDR
          - ILS
          - INR
          - IQD
          - IRR
          - ISK
          - JMD
          - JOD
          - JPY
          - KES
          - KGS
          - KHR
          - KMF
          - KPW
          - KRW
          - KWD
          - KYD
          - KZT
          - LAK
          - LBP
          - LKR
          - LRD
          - LSL
          - LTL
          - LYD
          - MAD
          - MDL
          - MGA
          - MKD
          - MMK
          - MNT
          - MOP
          - MRO
          - MRU
          - MUR
          - MVR
          - MWK
          - MXN
          - MXV
          - MYR
          - MZN
          - NAD
          - NGN
          - NIO
          - NOK
          - NPR
          - NZD
          - OMR
          - PAB
          - PEN
          - PGK
          - PHP
          - PKR
          - PLN
          - PYG
          - QAR
          - RON
          - RSD
          - RUB
          - RUR
          - RWF
          - SAR
          - SBD
          - SCR
          - SDG
          - SEK
          - SGD
          - SHP
          - SLL
          - SLE
          - SOS
          - SRD
          - SSP
          - STD
          - STN
          - SVC
          - SYP
          - SZL
          - THB
          - TJS
          - TMT
          - TND
          - TOP
          - TRY
          - TTD
          - TWD
          - TZS
          - UAH
          - UGX
          - USD
          - USN
          - USS
          - UYI
          - UYU
          - UZS
          - VEF
          - VES
          - VND
          - VUV
          - WST
          - XAF
          - XAG
          - XAU
          - XBA
          - XBB
          - XBC
          - XBD
          - XCD
          - XDR
          - XOF
          - XPD
          - XPF
          - XPT
          - XSU
          - XTS
          - XUA
          - XXX
          - YER
          - ZAR
          - ZMW
          - ZWL
        creationTime:
          type: string
          description: The time the tax detail was created
          format: date-time
          example: 2020-05-04T12:05:40.457Z
      description: Tax detail associated with a receipt
    AssociatedFeedRoundUp:
      type: object
      properties:
        goalCategoryUid:
          type: string
          description: Unique identifier of associated category
          format: uuid
          example: 68e16af4-c2c3-413b-bf93-1056b90097fa
        amount:
          $ref: '#/components/schemas/CurrencyAndAmount'
      description: Round up details associated with a feed item
    BatchPaymentDetails:
      type: object
      properties:
        batchPaymentUid:
          type: string
          description: The unique identifier for the batch payment
          format: uuid
          example: 5fedd7fa-c670-4ca8-9fcb-a77a6f2219c5
        batchPaymentType:
          type: string
          description: The type of the batch payment itself
          enum:
          - BULK_PAYMENT
      description: "The details of the batch payment this is part of, if it is"
    FeedItem:
      type: object
      properties:
        feedItemUid:
          type: string
          description: Unique identifier for this item
          format: uuid
          example: 11221122-1122-1122-1122-112211221122
        categoryUid:
          type: string
          description: The category on which the transaction happened
          format: uuid
          example: ccddccdd-ccdd-ccdd-ccdd-ccddccddccdd
        amount:
          $ref: '#/components/schemas/CurrencyAndAmount'
        sourceAmount:
          $ref: '#/components/schemas/CurrencyAndAmount'
        direction:
          type: string
          description: Was this an inbound or outbound transaction
          enum:
          - IN
          - OUT
        updatedAt:
          type: string
          description: The time the transaction was last updated at
          format: date-time
        transactionTime:
          type: string
          description: The time of the transaction
          format: date-time
        settlementTime:
          type: string
          description: The time the transaction settled
          format: date-time
        retryAllocationUntilTime:
          type: string
          format: date-time
        source:
          type: string
          description: The source of a transaction
          example: MASTER_CARD
          enum:
          - BRITISH_BUSINESS_BANK_FEES
          - CARD_FEE_CHARGE
          - CASH_DEPOSIT
          - CASH_DEPOSIT_CHARGE
          - CASH_WITHDRAWAL
          - CASH_WITHDRAWAL_CHARGE
          - CHAPS
          - CHEQUE
          - CICS_CHEQUE
          - CURRENCY_CLOUD
          - DIRECT_CREDIT
          - DIRECT_DEBIT
          - DIRECT_DEBIT_DISPUTE
          - INTERNAL_TRANSFER
          - MASTER_CARD
          - MASTERCARD_MONEYSEND
          - MASTERCARD_CHARGEBACK
          - FASTER_PAYMENTS_IN
          - FASTER_PAYMENTS_OUT
          - FASTER_PAYMENTS_REVERSAL
          - STRIPE_FUNDING
          - INTEREST_PAYMENT
          - NOSTRO_DEPOSIT
          - OVERDRAFT
          - OVERDRAFT_INTEREST_WAIVED
          - FASTER_PAYMENTS_REFUND
          - STARLING_PAY_STRIPE
          - ON_US_PAY_ME
          - LOAN_PRINCIPAL_PAYMENT
          - LOAN_REPAYMENT
          - LOAN_OVERPAYMENT
          - LOAN_LATE_PAYMENT
          - LOAN_FEE_PAYMENT
          - LOAN_INTEREST_CHARGE
          - SEPA_CREDIT_TRANSFER
          - SEPA_DIRECT_DEBIT
          - TARGET2_CUSTOMER_PAYMENT
          - FX_TRANSFER
          - ISS_PAYMENT
          - STARLING_PAYMENT
          - SUBSCRIPTION_CHARGE
          - OVERDRAFT_FEE
          - WITHHELD_TAX
          - ERRORS_AND_OMISSIONS
        sourceSubType:
          type: string
          description: The source subtype of the transaction
          example: CONTACTLESS
          enum:
          - CONTACTLESS
          - MAGNETIC_STRIP
          - MANUAL_KEY_ENTRY
          - CHIP_AND_PIN
          - ONLINE
          - ATM
          - CREDIT_AUTH
          - APPLE_PAY
          - APPLE_PAY_ONLINE
          - ANDROID_PAY
          - ANDROID_PAY_ONLINE
          - FITBIT_PAY
          - GARMIN_PAY
          - SAMSUNG_PAY
          - OTHER_WALLET
          - CARD_SUBSCRIPTION
          - NOT_APPLICABLE
          - UNKNOWN
          - DEPOSIT
          - OVERDRAFT
          - SETTLE_UP
          - NEARBY
          - TRANSFER_SAME_CURRENCY
          - NEW_CARD
        status:
          type: string
          description: The status of a transaction
          example: PENDING
          enum:
          - UPCOMING
          - PENDING
          - REVERSED
          - SETTLED
          - DECLINED
          - REFUNDED
          - RETRYING
          - ACCOUNT_CHECK
        transactingApplicationUserUid:
          type: string
          description: The application user that made the transaction
          format: uuid
          example: aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa
        counterPartyType:
          type: string
          description: The type of counter party for a transaction
          example: MERCHANT
          enum:
          - CATEGORY
          - CHEQUE
          - CUSTOMER
          - PAYEE
          - MERCHANT
          - SENDER
          - STARLING
          - LOAN
        counterPartyUid:
          type: string
          description: "The unique identifier for the counter party. eg for MERCHANT\
            \ this will be the merchant uid, for PAYEE this will be the payee uid"
          format: uuid
          example: 68e16af4-c2c3-413b-bf93-1056b90097fa
        counterPartyName:
          type: string
          description: The name of the counter party
          example: Tesco
        counterPartySubEntityUid:
          type: string
          description: "An identifier for the counter party sub entity. eg for MERCHANT\
            \ this will be the merchant location uid, for PAYEE this will be the payee\
            \ account uid"
          format: uuid
          example: 35d46207-d90e-483c-a40a-128cc4da4bee
        counterPartySubEntityName:
          type: string
          description: "A name for the counter party sub entity, for PAYEE this will\
            \ be the name set for the payee account"
          example: Tesco Southampton
        counterPartySubEntityIdentifier:
          type: string
          description: "An external identifier for the sub entity, for PAYEE this\
            \ will be the sort code of the account"
          example: "608371"
        counterPartySubEntitySubIdentifier:
          type: string
          description: "An external sub identifier for the sub entity, for PAYEE this\
            \ will be the account number of the account"
          example: "01234567"
        exchangeRate:
          type: number
        totalFees:
          type: number
        totalFeeAmount:
          $ref: '#/components/schemas/CurrencyAndAmount'
        reference:
          type: string
          description: The reference for the transaction
          example: TESCO-STORES-6148      SOUTHAMPTON   GBR
        country:
          type: string
          description: The country in which the transaction took place. ISO 3166-1
            alpha-2
          example: GB
          enum:
          - UNDEFINED
          - AC
          - AD
          - AE
          - AF
          - AG
          - AI
          - AL
          - AM
          - AN
          - AO
          - AQ
          - AR
          - AS
          - AT
          - AU
          - AW
          - AX
          - AZ
          - BA
          - BB
          - BD
          - BE
          - BF
          - BG
          - BH
          - BI
          - BJ
          - BL
          - BM
          - BN
          - BO
          - BQ
          - BR
          - BS
          - BT
          - BU
          - BV
          - BW
          - BY
          - BZ
          - CA
          - CC
          - CD
          - CF
          - CG
          - CH
          - CI
          - CK
          - CL
          - CM
          - CN
          - CO
          - CP
          - CR
          - CS
          - CU
          - CV
          - CW
          - CX
          - CY
          - CZ
          - DE
          - DG
          - DJ
          - DK
          - DM
          - DO
          - DZ
          - EA
          - EC
          - EE
          - EG
          - EH
          - ER
          - ES
          - ET
          - EU
          - EZ
          - FI
          - FJ
          - FK
          - FM
          - FO
          - FR
          - FX
          - GA
          - GB
          - GD
          - GE
          - GF
          - GG
          - GH
          - GI
          - GL
          - GM
          - GN
          - GP
          - GQ
          - GR
          - GS
          - GT
          - GU
          - GW
          - GY
          - HK
          - HM
          - HN
          - HR
          - HT
          - HU
          - IC
          - ID
          - IE
          - IL
          - IM
          - IN
          - IO
          - IQ
          - IR
          - IS
          - IT
          - JE
          - JM
          - JO
          - JP
          - KE
          - KG
          - KH
          - KI
          - KM
          - KN
          - KP
          - KR
          - KW
          - KY
          - KZ
          - LA
          - LB
          - LC
          - LI
          - LK
          - LR
          - LS
          - LT
          - LU
          - LV
          - LY
          - MA
          - MC
          - MD
          - ME
          - MF
          - MG
          - MH
          - MK
          - ML
          - MM
          - MN
          - MO
          - MP
          - MQ
          - MR
          - MS
          - MT
          - MU
          - MV
          - MW
          - MX
          - MY
          - MZ
          - NA
          - NC
          - NE
          - NF
          - NG
          - NI
          - NL
          - "NO"
          - NP
          - NR
          - NT
          - NU
          - NZ
          - OM
          - PA
          - PE
          - PF
          - PG
          - PH
          - PK
          - PL
          - PM
          - PN
          - PR
          - PS
          - PT
          - PW
          - PY
          - QA
          - RE
          - RO
          - RS
          - RU
          - RW
          - SA
          - SB
          - SC
          - SD
          - SE
          - SF
          - SG
          - SH
          - SI
          - SJ
          - SK
          - SL
          - SM
          - SN
          - SO
          - SR
          - SS
          - ST
          - SU
          - SV
          - SX
          - SY
          - SZ
          - TA
          - TC
          - TD
          - TF
          - TG
          - TH
          - TJ
          - TK
          - TL
          - TM
          - TN
          - TO
          - TP
          - TR
          - TT
          - TV
          - TW
          - TZ
          - UA
          - UG
          - UK
          - UM
          - US
          - UY
          - UZ
          - VA
          - VC
          - VE
          - VG
          - VI
          - VN
          - VU
          - WF
          - WS
          - XI
          - XU
          - XK
          - XX
          - YE
          - YT
          - YU
          - ZA
          - ZM
          - ZR
          - ZW
        spendingCategory:
          type: string
          description: The category of a transaction
          example: GROCERIES
          enum:
          - BIKE
          - BILLS_AND_SERVICES
          - BUCKET_LIST
          - CAR
          - CASH
          - CELEBRATION
          - CHARITY
          - CHILDREN
          - COFFEE
          - DEBT_REPAYMENT
          - DIY
          - DRINKS
          - EATING_OUT
          - EDUCATION
          - EMERGENCY
          - ENTERTAINMENT
          - ESSENTIAL_SPEND
          - EXPENSES
          - FAMILY
          - FITNESS
          - FUEL
          - GAMBLING
          - GAMING
          - GARDEN
          - GENERAL
          - GIFTS
          - GROCERIES
          - HOBBY
          - HOLIDAYS
          - HOME
          - IMPULSE_BUY
          - INCOME
          - INSURANCE
          - INVESTMENTS
          - LIFESTYLE
          - MAINTENANCE_AND_REPAIRS
          - MEDICAL
          - MORTGAGE
          - NON_ESSENTIAL_SPEND
          - PAYMENTS
          - PERSONAL_TRANSFERS
          - PETS
          - PROJECTS
          - RELATIONSHIPS
          - RENT
          - SAVING
          - SHOPPING
          - SUBSCRIPTIONS
          - TAKEAWAY
          - TAXI
          - TRANSPORT
          - TREATS
          - WEDDING
          - WELLBEING
          - NONE
          - REVENUE
          - OTHER_INCOME
          - CLIENT_REFUNDS
          - INVENTORY
          - STAFF
          - TRAVEL
          - WORKPLACE
          - REPAIRS_AND_MAINTENANCE
          - ADMIN
          - MARKETING
          - BUSINESS_ENTERTAINMENT
          - INTEREST_PAYMENTS
          - BANK_CHARGES
          - OTHER
          - FOOD_AND_DRINK
          - EQUIPMENT
          - PROFESSIONAL_SERVICES
          - PHONE_AND_INTERNET
          - VEHICLES
          - DIRECTORS_WAGES
          - VAT
          - CORPORATION_TAX
          - SELF_ASSESSMENT_TAX
          - INVESTMENT_CAPITAL
          - TRANSFERS
          - LOAN_PRINCIPAL
          - PERSONAL
          - DIVIDENDS
        userNote:
          type: string
          description: The user-provided transaction note
          example: "Tax deductable, submit me to payroll"
        roundUp:
          $ref: '#/components/schemas/AssociatedFeedRoundUp'
        hasAttachment:
          type: boolean
          description: Attachment present
          example: true
        hasReceipt:
          type: boolean
          description: Receipt present
          example: true
        batchPaymentDetails:
          $ref: '#/components/schemas/BatchPaymentDetails'
      description: An item from the account holders's transaction feed
    FeedItemAttachment:
      type: object
      properties:
        feedItemUid:
          type: string
          format: uuid
          example: 22332233-2233-2233-2233-223322332233
        feedItemAttachmentUid:
          type: string
          format: uuid
          example: 11221122-1122-1122-1122-112211221122
        attachmentType:
          type: string
          example: image
          enum:
          - "image, pdf"
        feedItemAttachmentType:
          type: string
          example: IMAGE
          enum:
          - IMAGE
          - PDF
          - "IMAGE, PDF"
    FeedItemAttachments:
      type: object
      properties:
        feedItemAttachments:
          type: array
          items:
            $ref: '#/components/schemas/FeedItemAttachment'
    LocalTime:
      type: object
      properties:
        hour:
          type: integer
          format: int32
        minute:
          type: integer
          format: int32
        second:
          type: integer
          format: int32
        nano:
          type: integer
          format: int32
    MastercardFeedItem:
      type: object
      properties:
        merchantIdentifier:
          type: string
        mcc:
          type: integer
          format: int32
        posTimestamp:
          $ref: '#/components/schemas/LocalTime'
        authorisationCode:
          type: string
        cardLast4:
          type: string
    FeedItems:
      type: object
      properties:
        feedItems:
          type: array
          items:
            $ref: '#/components/schemas/FeedItem'
      description: Wrapper around multiple feed items
    UserNoteWrapper:
      required:
      - userNote
      type: object
      properties:
        userNote:
          type: string
          example: Submitted for tax rebate
    RoundUpGoalPayload:
      required:
      - roundUpGoalUid
      - roundUpMultiplier
      type: object
      properties:
        roundUpGoalUid:
          type: string
          description: UID of the account category to send round-ups to
          format: uuid
          example: 77887788-7788-7788-7788-778877887788
        roundUpMultiplier:
          maximum: 10
          minimum: 1
          type: integer
          description: How much to multiply the rounded-up amount by before transfer.
            Must be an integer between 1 and 10 (inclusive)
          format: int32
          example: 2
    RoundUpGoalDetails:
      required:
      - activatedAt
      - activatedBy
      - primaryCategoryUid
      - roundUpGoalUid
      - roundUpMultiplier
      type: object
      properties:
        primaryCategoryUid:
          type: string
          format: uuid
          example: aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa
        roundUpGoalUid:
          type: string
          format: uuid
          example: aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa
        roundUpMultiplier:
          minimum: 1.0
          exclusiveMinimum: false
          type: number
        activatedAt:
          type: string
          format: date-time
        activatedBy:
          type: string
          format: uuid
          example: aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa
    RoundUpGoalResponse:
      type: object
      properties:
        active:
          type: boolean
        roundUpGoal:
          $ref: '#/components/schemas/RoundUpGoalDetails'
        roundUpGoalDetails:
          $ref: '#/components/schemas/RoundUpGoalDetails'
    IdentityV2:
      type: object
      properties:
        accountHolderUid:
          type: string
          format: uuid
          example: aabbaabb-aabb-aabb-aabb-aabbaabbaabb
        expiresAt:
          type: string
          format: date-time
        expiresInSeconds:
          type: integer
          format: int64
          example: 123
        scopes:
          type: array
          description: The scopes which this token has permission to use e.g. balance:read
          items:
            type: string
            description: The scopes which this token has permission to use e.g. balance:read
        authenticated:
          type: boolean
        applicationUserUid:
          type: string
          format: uuid
          example: aabbaabb-aabb-aabb-aabb-aabbaabbaabb
        consentExpiresAt:
          type: string
          format: date-time
        customerUid:
          type: string
          description: "Deprecated, use accountHolderUid instead"
          format: uuid
          example: aabbaabb-aabb-aabb-aabb-aabbaabbaabb
          deprecated: true
    CreateStandingOrderResponse:
      type: object
      properties:
        paymentOrderUid:
          type: string
          description: The uid of the payment order created by the standing order.
            N.B. this will not be the uid of any payment which is created by the standing
            order
          format: uuid
          example: 33443344-3344-3344-3344-334433443344
      description: Response after attempting to create a standing order
    CreateStandingOrderRequest:
      required:
      - amount
      - externalIdentifier
      - reference
      - standingOrderRecurrence
      type: object
      properties:
        externalIdentifier:
          maxLength: 100
          minLength: 0
          type: string
          description: External identifier for the standing order request
          example: a unique identifier to ensure idempotency
        destinationPayeeAccountUid:
          type: string
          description: The desired payment recipient. Either paymentRecipient or destinationPayeeAccountUid
            must be present
          format: uuid
          example: 66776677-6677-6677-6677-667766776677
        paymentRecipient:
          $ref: '#/components/schemas/PaymentRecipient'
        reference:
          maxLength: 18
          minLength: 1
          pattern: "[a-zA-Z0-9-/?:().,+#=!%&*<>;{@ \"']{1,18}"
          type: string
          description: The payment reference
          example: Monthly Expenses
        amount:
          $ref: '#/components/schemas/CurrencyAndAmount'
        standingOrderRecurrence:
          $ref: '#/components/schemas/StandingOrderRecurrence'
        spendingCategory:
          type: string
          description: The category of a transaction
          enum:
          - BIKE
          - BILLS_AND_SERVICES
          - BUCKET_LIST
          - CAR
          - CASH
          - CELEBRATION
          - CHARITY
          - CHILDREN
          - COFFEE
          - DEBT_REPAYMENT
          - DIY
          - DRINKS
          - EATING_OUT
          - EDUCATION
          - EMERGENCY
          - ENTERTAINMENT
          - ESSENTIAL_SPEND
          - EXPENSES
          - FAMILY
          - FITNESS
          - FUEL
          - GAMBLING
          - GAMING
          - GARDEN
          - GENERAL
          - GIFTS
          - GROCERIES
          - HOBBY
          - HOLIDAYS
          - HOME
          - IMPULSE_BUY
          - INCOME
          - INSURANCE
          - INVESTMENTS
          - LIFESTYLE
          - MAINTENANCE_AND_REPAIRS
          - MEDICAL
          - MORTGAGE
          - NON_ESSENTIAL_SPEND
          - PAYMENTS
          - PERSONAL_TRANSFERS
          - PETS
          - PROJECTS
          - RELATIONSHIPS
          - RENT
          - SAVING
          - SHOPPING
          - SUBSCRIPTIONS
          - TAKEAWAY
          - TAXI
          - TRANSPORT
          - TREATS
          - WEDDING
          - WELLBEING
          - NONE
          - REVENUE
          - OTHER_INCOME
          - CLIENT_REFUNDS
          - INVENTORY
          - STAFF
          - TRAVEL
          - WORKPLACE
          - REPAIRS_AND_MAINTENANCE
          - ADMIN
          - MARKETING
          - BUSINESS_ENTERTAINMENT
          - INTEREST_PAYMENTS
          - BANK_CHARGES
          - OTHER
          - FOOD_AND_DRINK
          - EQUIPMENT
          - PROFESSIONAL_SERVICES
          - PHONE_AND_INTERNET
          - VEHICLES
          - DIRECTORS_WAGES
          - VAT
          - CORPORATION_TAX
          - SELF_ASSESSMENT_TAX
          - INVESTMENT_CAPITAL
          - TRANSFERS
          - LOAN_PRINCIPAL
          - PERSONAL
          - DIVIDENDS
      description: Request to create a standing order
    PaymentRecipient:
      required:
      - accountIdentifier
      - bankIdentifier
      - bankIdentifierType
      - countryCode
      - payeeName
      - payeeType
      type: object
      properties:
        payeeName:
          maxLength: 255
          minLength: 1
          type: string
          example: Bob Smith
        payeeType:
          type: string
          example: INDIVIDUAL
          enum:
          - BUSINESS
          - INDIVIDUAL
        countryCode:
          type: string
          description: The country code for the account (ISO 3166-1 alpha-2)
          example: GB
        accountIdentifier:
          maxLength: 34
          minLength: 0
          type: string
          example: "12345678"
        bankIdentifier:
          maxLength: 34
          minLength: 0
          type: string
          example: "123456"
        bankIdentifierType:
          type: string
          example: SORT_CODE
          enum:
          - SORT_CODE
          - SWIFT
          - IBAN
          - ABA
          - ABA_WIRE
          - ABA_ACH
          - BSB
      description: The desired payment recipient. Either paymentRecipient or destinationPayeeAccountUid
        must be present
    StandingOrderRecurrence:
      required:
      - frequency
      - startDate
      type: object
      properties:
        startDate:
          type: string
          description: Date that the first standing order payment should be made
          format: date
          example: 2019-09-23
        frequency:
          type: string
          description: Frequency of which payments should be made
          example: WEEKLY
          enum:
          - DAILY
          - WEEKLY
          - MONTHLY
          - YEARLY
        interval:
          maximum: 20
          minimum: 1
          type: integer
          description: Interval of specified frequency on which payments should be
            made
          format: int32
          nullable: true
          example: 4
        count:
          maximum: 100
          minimum: 1
          type: integer
          description: Number of payments that should be made before standing order
            is stopped
          format: int32
          nullable: true
          example: 12
        untilDate:
          type: string
          description: Date on which to stop standing order
          format: date
          example: 2020-09-23
      description: Recurrence rules of a standing order
    PaymentOrderV2:
      required:
      - amount
      - payeeAccountUid
      - payeeUid
      - paymentOrderUid
      - reference
      type: object
      properties:
        paymentOrderUid:
          type: string
          description: UID of this payment order
          format: uuid
          example: 33443344-3344-3344-3344-334433443344
        amount:
          $ref: '#/components/schemas/CurrencyAndAmount'
        reference:
          type: string
          description: The reference set by the payer
          example: Payment reference
        payeeUid:
          type: string
          description: The ID of the payee receiving this payment
          format: uuid
          example: 55665566-5566-5566-5566-556655665566
        payeeAccountUid:
          type: string
          description: The account ID of the payee account receiving this payment
          format: uuid
          example: 66776677-6677-6677-6677-667766776677
        spendingCategory:
          type: string
          description: The category of a transaction
          nullable: true
          enum:
          - BIKE
          - BILLS_AND_SERVICES
          - BUCKET_LIST
          - CAR
          - CASH
          - CELEBRATION
          - CHARITY
          - CHILDREN
          - COFFEE
          - DEBT_REPAYMENT
          - DIY
          - DRINKS
          - EATING_OUT
          - EDUCATION
          - EMERGENCY
          - ENTERTAINMENT
          - ESSENTIAL_SPEND
          - EXPENSES
          - FAMILY
          - FITNESS
          - FUEL
          - GAMBLING
          - GAMING
          - GARDEN
          - GENERAL
          - GIFTS
          - GROCERIES
          - HOBBY
          - HOLIDAYS
          - HOME
          - IMPULSE_BUY
          - INCOME
          - INSURANCE
          - INVESTMENTS
          - LIFESTYLE
          - MAINTENANCE_AND_REPAIRS
          - MEDICAL
          - MORTGAGE
          - NON_ESSENTIAL_SPEND
          - PAYMENTS
          - PERSONAL_TRANSFERS
          - PETS
          - PROJECTS
          - RELATIONSHIPS
          - RENT
          - SAVING
          - SHOPPING
          - SUBSCRIPTIONS
          - TAKEAWAY
          - TAXI
          - TRANSPORT
          - TREATS
          - WEDDING
          - WELLBEING
          - NONE
          - REVENUE
          - OTHER_INCOME
          - CLIENT_REFUNDS
          - INVENTORY
          - STAFF
          - TRAVEL
          - WORKPLACE
          - REPAIRS_AND_MAINTENANCE
          - ADMIN
          - MARKETING
          - BUSINESS_ENTERTAINMENT
          - INTEREST_PAYMENTS
          - BANK_CHARGES
          - OTHER
          - FOOD_AND_DRINK
          - EQUIPMENT
          - PROFESSIONAL_SERVICES
          - PHONE_AND_INTERNET
          - VEHICLES
          - DIRECTORS_WAGES
          - VAT
          - CORPORATION_TAX
          - SELF_ASSESSMENT_TAX
          - INVESTMENT_CAPITAL
          - TRANSFERS
          - LOAN_PRINCIPAL
          - PERSONAL
          - DIVIDENDS
      description: Response object for payment order queries
    PaymentOrderPayment:
      required:
      - amount
      - createdAt
      - payeeAccountUid
      - payeeUid
      - paymentUid
      - reference
      type: object
      properties:
        paymentUid:
          type: string
          description: UID of this payment
          format: uuid
          example: 44554455-4455-4455-4455-445544554455
        amount:
          $ref: '#/components/schemas/CurrencyAndAmount'
        reference:
          type: string
          description: Reference of this payment
          example: Payment reference
        payeeUid:
          type: string
          description: The ID of the payee receiving this payment
          format: uuid
          example: 55665566-5566-5566-5566-556655665566
        payeeAccountUid:
          type: string
          description: The account ID of the payee account receiving this payment
          format: uuid
          example: 66776677-6677-6677-6677-667766776677
        createdAt:
          type: string
          description: When this payment was created
          format: date-time
        completedAt:
          type: string
          description: "When this payment was completed, if it completed"
          format: date-time
        rejectedAt:
          type: string
          description: "When this payment was rejected, if it was rejected"
          format: date-time
        paymentStatusDetails:
          $ref: '#/components/schemas/PaymentStatusDetails'
      description: Response object for payment order payments queries
    PaymentOrderPaymentsResponse:
      required:
      - payments
      type: object
      properties:
        payments:
          type: array
          items:
            $ref: '#/components/schemas/PaymentOrderPayment'
      description: List of payments associated with a payment order
    PaymentStatusDetails:
      type: object
      properties:
        paymentStatus:
          type: string
          enum:
          - ACCEPTED
          - REJECTED
          - PENDING
        description:
          type: string
          enum:
          - ACCEPTED
          - QUALIFIED_ACCEPT_WITHIN_TWO_HOURS
          - QUALIFIED_ACCEPT_UNSPECIFIED_DAY
          - QUALIFIED_ACCEPT_SAME_DAY
          - QUALIFIED_ACCEPT_NEXT_CALENDAR_DAY
          - QUALIFIED_ACCEPT_NEXT_WORKING_DAY
          - QUALIFIED_ACCEPT_AFTER_NEXT_WORKING_DAY
          - DESTINATION_ACCOUNT_INVALID
          - DESTINATION_ACCOUNT_NAME_MISMATCH
          - REFERENCE_INFORMATION_INCORRECT
          - DESTINATION_ACCOUNT_UNAVAILABLE
          - PENDING
      description: Status details of a payment
    StandingOrder:
      type: object
      properties:
        paymentOrderUid:
          type: string
          description: UID of this payment order
          format: uuid
          example: 33443344-3344-3344-3344-334433443344
        amount:
          $ref: '#/components/schemas/CurrencyAndAmount'
        reference:
          type: string
          description: The reference set by the payer
          example: Payment reference
        payeeUid:
          type: string
          description: The ID of the payee receiving the payments
          format: uuid
          example: 55665566-5566-5566-5566-556655665566
        payeeAccountUid:
          type: string
          description: The account ID of the payee account receiving the payments
          format: uuid
          example: 66776677-6677-6677-6677-667766776677
        standingOrderRecurrence:
          $ref: '#/components/schemas/StandingOrderRecurrence'
        nextDate:
          type: string
          description: Date on which the next standing order payment will be made
          format: date
          example: 2023-04-05
        cancelledAt:
          type: string
          description: The time the standing order is cancelled at
          format: date-time
          example: 2017-07-05T18:27:02.335Z
        updatedAt:
          type: string
          description: The time the standing order is updated at
          format: date-time
          example: 2017-07-05T18:27:02.335Z
        spendingCategory:
          type: string
          description: The category of a transaction
          nullable: true
          enum:
          - BIKE
          - BILLS_AND_SERVICES
          - BUCKET_LIST
          - CAR
          - CASH
          - CELEBRATION
          - CHARITY
          - CHILDREN
          - COFFEE
          - DEBT_REPAYMENT
          - DIY
          - DRINKS
          - EATING_OUT
          - EDUCATION
          - EMERGENCY
          - ENTERTAINMENT
          - ESSENTIAL_SPEND
          - EXPENSES
          - FAMILY
          - FITNESS
          - FUEL
          - GAMBLING
          - GAMING
          - GARDEN
          - GENERAL
          - GIFTS
          - GROCERIES
          - HOBBY
          - HOLIDAYS
          - HOME
          - IMPULSE_BUY
          - INCOME
          - INSURANCE
          - INVESTMENTS
          - LIFESTYLE
          - MAINTENANCE_AND_REPAIRS
          - MEDICAL
          - MORTGAGE
          - NON_ESSENTIAL_SPEND
          - PAYMENTS
          - PERSONAL_TRANSFERS
          - PETS
          - PROJECTS
          - RELATIONSHIPS
          - RENT
          - SAVING
          - SHOPPING
          - SUBSCRIPTIONS
          - TAKEAWAY
          - TAXI
          - TRANSPORT
          - TREATS
          - WEDDING
          - WELLBEING
          - NONE
          - REVENUE
          - OTHER_INCOME
          - CLIENT_REFUNDS
          - INVENTORY
          - STAFF
          - TRAVEL
          - WORKPLACE
          - REPAIRS_AND_MAINTENANCE
          - ADMIN
          - MARKETING
          - BUSINESS_ENTERTAINMENT
          - INTEREST_PAYMENTS
          - BANK_CHARGES
          - OTHER
          - FOOD_AND_DRINK
          - EQUIPMENT
          - PROFESSIONAL_SERVICES
          - PHONE_AND_INTERNET
          - VEHICLES
          - DIRECTORS_WAGES
          - VAT
          - CORPORATION_TAX
          - SELF_ASSESSMENT_TAX
          - INVESTMENT_CAPITAL
          - TRANSFERS
          - LOAN_PRINCIPAL
          - PERSONAL
          - DIVIDENDS
        categoryUid:
          type: string
          description: The category ID of the category from which the payment will
            be sent
          format: uuid
          example: 11771177-1177-1177-1177-117711771177
      description: Response object for standing order queries
    NextPaymentDatesResponse:
      type: object
      properties:
        nextPaymentDates:
          type: array
          items:
            type: string
            format: date
            example: 2023-04-05
      description: List of next payment dates of a standing order
    StandingOrdersResponse:
      type: object
      properties:
        standingOrders:
          type: array
          items:
            $ref: '#/components/schemas/StandingOrder'
      description: List of standing orders associated to an account holder
    InstructLocalPaymentResponse:
      type: object
      properties:
        paymentOrderUid:
          type: string
          description: The uid of the payment order created by the instruction. N.B.
            this will not be the uid of any payment which is created by the payment
            order
          format: uuid
          example: 33443344-3344-3344-3344-334433443344
      description: Response after attempting to create a local payment
    InstructLocalPaymentRequest:
      required:
      - amount
      - externalIdentifier
      - reference
      type: object
      properties:
        externalIdentifier:
          maxLength: 100
          minLength: 0
          type: string
          description: "Identifier for the payment request, generated by you. Must\
            \ be unique for each payment request you create"
          example: Unique identifier to ensure idempotency
        destinationPayeeAccountUid:
          type: string
          description: The desired payment recipient. Either paymentRecipient or destinationPayeeAccountUid
            must be present
          format: uuid
          example: aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa
        paymentRecipient:
          $ref: '#/components/schemas/PaymentRecipient'
        reference:
          pattern: "[a-zA-Z0-9-/?:().,+#=!%&*<>;{@ \"']{1,35}"
          type: string
          description: "The payment reference. The 35 character limit applies to SEPA\
            \ payments (Euro accounts). For FPS payments (GBP accounts), the limit\
            \ is 18 characters"
          example: December Expenses
        amount:
          $ref: '#/components/schemas/CurrencyAndAmount'
        spendingCategory:
          type: string
          description: The category of a transaction
          enum:
          - BIKE
          - BILLS_AND_SERVICES
          - BUCKET_LIST
          - CAR
          - CASH
          - CELEBRATION
          - CHARITY
          - CHILDREN
          - COFFEE
          - DEBT_REPAYMENT
          - DIY
          - DRINKS
          - EATING_OUT
          - EDUCATION
          - EMERGENCY
          - ENTERTAINMENT
          - ESSENTIAL_SPEND
          - EXPENSES
          - FAMILY
          - FITNESS
          - FUEL
          - GAMBLING
          - GAMING
          - GARDEN
          - GENERAL
          - GIFTS
          - GROCERIES
          - HOBBY
          - HOLIDAYS
          - HOME
          - IMPULSE_BUY
          - INCOME
          - INSURANCE
          - INVESTMENTS
          - LIFESTYLE
          - MAINTENANCE_AND_REPAIRS
          - MEDICAL
          - MORTGAGE
          - NON_ESSENTIAL_SPEND
          - PAYMENTS
          - PERSONAL_TRANSFERS
          - PETS
          - PROJECTS
          - RELATIONSHIPS
          - RENT
          - SAVING
          - SHOPPING
          - SUBSCRIPTIONS
          - TAKEAWAY
          - TAXI
          - TRANSPORT
          - TREATS
          - WEDDING
          - WELLBEING
          - NONE
          - REVENUE
          - OTHER_INCOME
          - CLIENT_REFUNDS
          - INVENTORY
          - STAFF
          - TRAVEL
          - WORKPLACE
          - REPAIRS_AND_MAINTENANCE
          - ADMIN
          - MARKETING
          - BUSINESS_ENTERTAINMENT
          - INTEREST_PAYMENTS
          - BANK_CHARGES
          - OTHER
          - FOOD_AND_DRINK
          - EQUIPMENT
          - PROFESSIONAL_SERVICES
          - PHONE_AND_INTERNET
          - VEHICLES
          - DIRECTORS_WAGES
          - VAT
          - CORPORATION_TAX
          - SELF_ASSESSMENT_TAX
          - INVESTMENT_CAPITAL
          - TRANSFERS
          - LOAN_PRINCIPAL
          - PERSONAL
          - DIVIDENDS
      description: Request to make a local payment
    UpdateStandingOrderResponse:
      type: object
      properties:
        paymentOrderUid:
          type: string
          description: "The uid of the updated payment order created by the standing\
            \ order. N.B. this will not be the uid of any payment which is created\
            \ by the standing order. If the recurrence rule is updated, this payment\
            \ order uid will be different from the original one"
          format: uuid
          example: 33443344-3344-3344-3344-334433443344
      description: Response after attempting to update a standing order
    UpdateStandingOrderRequest:
      required:
      - amount
      - paymentOrderUid
      - reference
      - standingOrderRecurrence
      type: object
      properties:
        paymentOrderUid:
          type: string
          description: UID of this payment order
          format: uuid
          example: 33443344-3344-3344-3344-334433443344
        reference:
          maxLength: 18
          minLength: 1
          pattern: "[a-zA-Z0-9-/?:().,+#=!%&*<>;{@ \"']{1,18}"
          type: string
          description: The payment reference
          example: Payment reference
        amount:
          $ref: '#/components/schemas/CurrencyAndAmount'
        standingOrderRecurrence:
          $ref: '#/components/schemas/StandingOrderRecurrence'
        spendingCategory:
          type: string
          description: The category of a transaction
          enum:
          - BIKE
          - BILLS_AND_SERVICES
          - BUCKET_LIST
          - CAR
          - CASH
          - CELEBRATION
          - CHARITY
          - CHILDREN
          - COFFEE
          - DEBT_REPAYMENT
          - DIY
          - DRINKS
          - EATING_OUT
          - EDUCATION
          - EMERGENCY
          - ENTERTAINMENT
          - ESSENTIAL_SPEND
          - EXPENSES
          - FAMILY
          - FITNESS
          - FUEL
          - GAMBLING
          - GAMING
          - GARDEN
          - GENERAL
          - GIFTS
          - GROCERIES
          - HOBBY
          - HOLIDAYS
          - HOME
          - IMPULSE_BUY
          - INCOME
          - INSURANCE
          - INVESTMENTS
          - LIFESTYLE
          - MAINTENANCE_AND_REPAIRS
          - MEDICAL
          - MORTGAGE
          - NON_ESSENTIAL_SPEND
          - PAYMENTS
          - PERSONAL_TRANSFERS
          - PETS
          - PROJECTS
          - RELATIONSHIPS
          - RENT
          - SAVING
          - SHOPPING
          - SUBSCRIPTIONS
          - TAKEAWAY
          - TAXI
          - TRANSPORT
          - TREATS
          - WEDDING
          - WELLBEING
          - NONE
          - REVENUE
          - OTHER_INCOME
          - CLIENT_REFUNDS
          - INVENTORY
          - STAFF
          - TRAVEL
          - WORKPLACE
          - REPAIRS_AND_MAINTENANCE
          - ADMIN
          - MARKETING
          - BUSINESS_ENTERTAINMENT
          - INTEREST_PAYMENTS
          - BANK_CHARGES
          - OTHER
          - FOOD_AND_DRINK
          - EQUIPMENT
          - PROFESSIONAL_SERVICES
          - PHONE_AND_INTERNET
          - VEHICLES
          - DIRECTORS_WAGES
          - VAT
          - CORPORATION_TAX
          - SELF_ASSESSMENT_TAX
          - INVESTMENT_CAPITAL
          - TRANSFERS
          - LOAN_PRINCIPAL
          - PERSONAL
          - DIVIDENDS
      description: Request to update a standing order
    PayeeCreationResponse:
      type: object
      properties:
        payeeUid:
          type: string
          description: "The newly created payee unique identifier, only present on\
            \ successful payee creation"
          example: 55665566-5566-5566-5566-556655665566
        success:
          type: boolean
          description: True if the method completed successfully
          example: true
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ErrorDetail'
      description: Response after attempting to create a payee
    PayeeAccountCreationRequest:
      required:
      - accountIdentifier
      - bankIdentifier
      - bankIdentifierType
      - countryCode
      - defaultAccount
      - description
      type: object
      properties:
        description:
          maxLength: 255
          minLength: 1
          type: string
          description: Account description
          example: Bob's business account
        defaultAccount:
          type: boolean
          description: Is this the default account for the owning payee
          example: true
        countryCode:
          type: string
          description: The country code for the account (ISO 3166-1 alpha-2)
          example: GB
        accountIdentifier:
          maxLength: 34
          minLength: 0
          type: string
          description: The account identifier
          example: "12345678"
        bankIdentifier:
          maxLength: 34
          minLength: 0
          type: string
          description: The bank identifier
          example: "123456"
        bankIdentifierType:
          type: string
          description: The bank identifier type
          example: SORT_CODE
          enum:
          - SORT_CODE
          - SWIFT
          - IBAN
          - ABA
          - ABA_WIRE
          - ABA_ACH
          - BSB
        secondaryIdentifier:
          type: string
          description: "Secondary reference data (SRD), if applicable"
      description: Request to create a payee account
    PayeeCreationRequest:
      required:
      - payeeName
      - payeeType
      type: object
      properties:
        payeeName:
          maxLength: 255
          minLength: 1
          type: string
          description: Name
          example: Bob Bobbington
        phoneNumber:
          maxLength: 20
          minLength: 0
          type: string
          description: Phone number
          example: "447700900123"
        payeeType:
          type: string
          example: INDIVIDUAL
          enum:
          - BUSINESS
          - INDIVIDUAL
        firstName:
          maxLength: 255
          minLength: 1
          type: string
          description: First name
          example: Bob
        middleName:
          maxLength: 255
          minLength: 1
          type: string
          description: Middle name
          example: Bobity
        lastName:
          maxLength: 255
          minLength: 1
          type: string
          description: Last name
          example: Bobbington
        businessName:
          maxLength: 255
          minLength: 1
          type: string
          description: Business name
          example: Trotters Independent Traders
        dateOfBirth:
          type: string
          description: Date of birth for this payee
          format: date
          example: 2023-04-05
        accounts:
          maxItems: 2147483647
          minItems: 1
          type: array
          description: List of accounts for this payee
          items:
            $ref: '#/components/schemas/PayeeAccountCreationRequest'
      description: Request to create a payee
    PayeeAccountCreationResponse:
      type: object
      properties:
        payeeAccountUid:
          type: string
          description: "The newly created payee unique identifier, only present on\
            \ successful payee account creation"
          example: 66776677-6677-6677-6677-667766776677
        success:
          type: boolean
          description: True if the method completed successfully
          example: true
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ErrorDetail'
      description: Response after attempting to create a payee account
    Payee:
      type: object
      properties:
        payeeUid:
          type: string
          description: The uid of this payee
          format: uuid
          example: 55665566-5566-5566-5566-556655665566
        payeeName:
          type: string
          description: Name
          example: Bob Bobbington
        phoneNumber:
          type: string
          description: Phone number
          example: "447700900123"
        payeeType:
          type: string
          description: INDIVIDUAL
          enum:
          - BUSINESS
          - INDIVIDUAL
        firstName:
          type: string
          description: First name
          example: Bob
        middleName:
          type: string
          description: Middle name
          example: Bobity
        lastName:
          type: string
          description: Last name
          example: Bobbington
        businessName:
          type: string
          description: Business name
          example: Trotters Independent Traders
        dateOfBirth:
          type: string
          description: Date of birth
          format: date
          example: 1990-11-30
        accounts:
          type: array
          description: Accounts for this payee
          items:
            $ref: '#/components/schemas/PayeeAccount'
      description: A saved payee
    PayeeAccount:
      type: object
      properties:
        payeeAccountUid:
          type: string
          description: The uid of this payee account
          format: uuid
          example: 66776677-6677-6677-6677-667766776677
        payeeChannelType:
          type: string
          description: The channel through which the payee was added
          example: SETTLE_UP
          enum:
          - BANK_ACCOUNT
          - SETTLE_UP
          - NEARBY
        description:
          type: string
          description: Account description
          example: Bob's business account
        defaultAccount:
          type: boolean
          description: Is this the default account for the owning payee
          example: true
        countryCode:
          type: string
          description: The country code for the account (ISO 3166-1 alpha-2)
          example: GB
          enum:
          - UNDEFINED
          - AC
          - AD
          - AE
          - AF
          - AG
          - AI
          - AL
          - AM
          - AN
          - AO
          - AQ
          - AR
          - AS
          - AT
          - AU
          - AW
          - AX
          - AZ
          - BA
          - BB
          - BD
          - BE
          - BF
          - BG
          - BH
          - BI
          - BJ
          - BL
          - BM
          - BN
          - BO
          - BQ
          - BR
          - BS
          - BT
          - BU
          - BV
          - BW
          - BY
          - BZ
          - CA
          - CC
          - CD
          - CF
          - CG
          - CH
          - CI
          - CK
          - CL
          - CM
          - CN
          - CO
          - CP
          - CR
          - CS
          - CU
          - CV
          - CW
          - CX
          - CY
          - CZ
          - DE
          - DG
          - DJ
          - DK
          - DM
          - DO
          - DZ
          - EA
          - EC
          - EE
          - EG
          - EH
          - ER
          - ES
          - ET
          - EU
          - EZ
          - FI
          - FJ
          - FK
          - FM
          - FO
          - FR
          - FX
          - GA
          - GB
          - GD
          - GE
          - GF
          - GG
          - GH
          - GI
          - GL
          - GM
          - GN
          - GP
          - GQ
          - GR
          - GS
          - GT
          - GU
          - GW
          - GY
          - HK
          - HM
          - HN
          - HR
          - HT
          - HU
          - IC
          - ID
          - IE
          - IL
          - IM
          - IN
          - IO
          - IQ
          - IR
          - IS
          - IT
          - JE
          - JM
          - JO
          - JP
          - KE
          - KG
          - KH
          - KI
          - KM
          - KN
          - KP
          - KR
          - KW
          - KY
          - KZ
          - LA
          - LB
          - LC
          - LI
          - LK
          - LR
          - LS
          - LT
          - LU
          - LV
          - LY
          - MA
          - MC
          - MD
          - ME
          - MF
          - MG
          - MH
          - MK
          - ML
          - MM
          - MN
          - MO
          - MP
          - MQ
          - MR
          - MS
          - MT
          - MU
          - MV
          - MW
          - MX
          - MY
          - MZ
          - NA
          - NC
          - NE
          - NF
          - NG
          - NI
          - NL
          - "NO"
          - NP
          - NR
          - NT
          - NU
          - NZ
          - OM
          - PA
          - PE
          - PF
          - PG
          - PH
          - PK
          - PL
          - PM
          - PN
          - PR
          - PS
          - PT
          - PW
          - PY
          - QA
          - RE
          - RO
          - RS
          - RU
          - RW
          - SA
          - SB
          - SC
          - SD
          - SE
          - SF
          - SG
          - SH
          - SI
          - SJ
          - SK
          - SL
          - SM
          - SN
          - SO
          - SR
          - SS
          - ST
          - SU
          - SV
          - SX
          - SY
          - SZ
          - TA
          - TC
          - TD
          - TF
          - TG
          - TH
          - TJ
          - TK
          - TL
          - TM
          - TN
          - TO
          - TP
          - TR
          - TT
          - TV
          - TW
          - TZ
          - UA
          - UG
          - UK
          - UM
          - US
          - UY
          - UZ
          - VA
          - VC
          - VE
          - VG
          - VI
          - VN
          - VU
          - WF
          - WS
          - XI
          - XU
          - XK
          - XX
          - YE
          - YT
          - YU
          - ZA
          - ZM
          - ZR
          - ZW
        accountIdentifier:
          type: string
          description: The account identifier
          example: "12345678"
        bankIdentifier:
          type: string
          description: The bank identifier
          example: "123456"
        bankIdentifierType:
          type: string
          description: The bank identifier type
          example: SORT_CODE
          enum:
          - SORT_CODE
          - SWIFT
          - IBAN
          - ABA
          - ABA_WIRE
          - ABA_ACH
          - BSB
        secondaryIdentifier:
          type: string
          description: "Secondary reference data (SRD), if applicable"
        lastReferences:
          type: array
          items:
            type: string
      description: An account of a payee
    Payees:
      type: object
      properties:
        payees:
          type: array
          items:
            $ref: '#/components/schemas/Payee'
      description: The payees of an account holder
    RecurrenceRule:
      required:
      - frequency
      - startDate
      type: object
      properties:
        startDate:
          type: string
          format: date
          example: 2023-04-05
        frequency:
          type: string
          enum:
          - SECONDLY
          - MINUTELY
          - HOURLY
          - DAILY
          - WEEKLY
          - MONTHLY
          - YEARLY
          - MILLENNIALY
          - WORKING_DAILY
          - SCOTTISH_QUARTERLY
          - ENGLISH_QUARTERLY
          - RECEIVED_QUARTERLY
        interval:
          minimum: 1
          type: integer
          format: int32
        count:
          minimum: 1
          type: integer
          format: int32
        untilDate:
          type: string
          format: date
          example: 2023-04-05
        weekStart:
          type: string
          enum:
          - MONDAY
          - TUESDAY
          - WEDNESDAY
          - THURSDAY
          - FRIDAY
          - SATURDAY
          - SUNDAY
        days:
          uniqueItems: true
          type: array
          items:
            type: string
            enum:
            - MONDAY
            - TUESDAY
            - WEDNESDAY
            - THURSDAY
            - FRIDAY
            - SATURDAY
            - SUNDAY
        monthDay:
          maximum: 31
          minimum: -5
          type: integer
          format: int32
        monthWeek:
          maximum: 5
          minimum: 1
          type: integer
          format: int32
      description: How often is the payment made
    ScheduledPayment:
      type: object
      properties:
        accountHolderUid:
          type: string
          description: Unique identifier for account holder
          format: uuid
          example: 33443344-3344-3344-3344-334433443344
        paymentOrderUid:
          type: string
          description: Unique identifier of the scheduled payment order
          format: uuid
          example: 7879c4f0-8dde-11ea-bc55-0242ac130003
        categoryUid:
          type: string
          description: Unique identifier of the category from which the payment will
            be taken
          format: uuid
          example: 8f72aaaa-8dde-11ea-bc55-0242ac130003
        nextPaymentAmount:
          $ref: '#/components/schemas/CurrencyAndAmount'
        reference:
          type: string
          description: Payment order reference
        payeeUid:
          type: string
          description: Unique identifier of the payee
          format: uuid
          example: 2dcf1551-0b96-4656-9ca5-1195b09d4fb6
        payeeAccountUid:
          type: string
          description: Unique identifier of the payee account
          format: uuid
          example: 288299fd-2428-42b3-8056-afff573b7d9f
        recipientName:
          type: string
          description: Recipient name
          nullable: true
        recurrenceRule:
          $ref: '#/components/schemas/RecurrenceRule'
        startDate:
          type: string
          description: Date when the payment order has been created
          format: date
          example: 2023-04-05
        nextDate:
          type: string
          description: Date of the next payment order
          format: date
          example: 2023-04-05
        endDate:
          type: string
          description: Date when payment order ends
          format: date
          example: 2023-04-05
        paymentType:
          type: string
          description: Payment type
          example: DIRECT_DEBIT
          enum:
          - DIRECT_DEBIT
          - STANDING_ORDER
          - INTERNAL_TRANSFER
        spendingCategory:
          type: string
          description: The category of a transaction
          example: GENERAL
          enum:
          - BIKE
          - BILLS_AND_SERVICES
          - BUCKET_LIST
          - CAR
          - CASH
          - CELEBRATION
          - CHARITY
          - CHILDREN
          - COFFEE
          - DEBT_REPAYMENT
          - DIY
          - DRINKS
          - EATING_OUT
          - EDUCATION
          - EMERGENCY
          - ENTERTAINMENT
          - ESSENTIAL_SPEND
          - EXPENSES
          - FAMILY
          - FITNESS
          - FUEL
          - GAMBLING
          - GAMING
          - GARDEN
          - GENERAL
          - GIFTS
          - GROCERIES
          - HOBBY
          - HOLIDAYS
          - HOME
          - IMPULSE_BUY
          - INCOME
          - INSURANCE
          - INVESTMENTS
          - LIFESTYLE
          - MAINTENANCE_AND_REPAIRS
          - MEDICAL
          - MORTGAGE
          - NON_ESSENTIAL_SPEND
          - PAYMENTS
          - PERSONAL_TRANSFERS
          - PETS
          - PROJECTS
          - RELATIONSHIPS
          - RENT
          - SAVING
          - SHOPPING
          - SUBSCRIPTIONS
          - TAKEAWAY
          - TAXI
          - TRANSPORT
          - TREATS
          - WEDDING
          - WELLBEING
          - NONE
          - REVENUE
          - OTHER_INCOME
          - CLIENT_REFUNDS
          - INVENTORY
          - STAFF
          - TRAVEL
          - WORKPLACE
          - REPAIRS_AND_MAINTENANCE
          - ADMIN
          - MARKETING
          - BUSINESS_ENTERTAINMENT
          - INTEREST_PAYMENTS
          - BANK_CHARGES
          - OTHER
          - FOOD_AND_DRINK
          - EQUIPMENT
          - PROFESSIONAL_SERVICES
          - PHONE_AND_INTERNET
          - VEHICLES
          - DIRECTORS_WAGES
          - VAT
          - CORPORATION_TAX
          - SELF_ASSESSMENT_TAX
          - INVESTMENT_CAPITAL
          - TRANSFERS
          - LOAN_PRINCIPAL
          - PERSONAL
          - DIVIDENDS
      description: Response object for scheduled payments queries
    ScheduledPaymentResponse:
      type: object
      properties:
        scheduledPayments:
          type: array
          description: List of scheduled payments for a payee account
          items:
            $ref: '#/components/schemas/ScheduledPayment'
    PayeePayment:
      type: object
      properties:
        paymentUid:
          type: string
          description: Unique identifier of the payment
          format: uuid
          example: 55665566-5566-5566-5566-556655665566
        amount:
          $ref: '#/components/schemas/CurrencyAndAmount'
        reference:
          type: string
          description: Payment reference
          example: Rent
        createdAt:
          type: string
          description: Date when payment was created
          format: date-time
        spendingCategory:
          type: string
          description: The category of a transaction
          example: HOME
          enum:
          - BIKE
          - BILLS_AND_SERVICES
          - BUCKET_LIST
          - CAR
          - CASH
          - CELEBRATION
          - CHARITY
          - CHILDREN
          - COFFEE
          - DEBT_REPAYMENT
          - DIY
          - DRINKS
          - EATING_OUT
          - EDUCATION
          - EMERGENCY
          - ENTERTAINMENT
          - ESSENTIAL_SPEND
          - EXPENSES
          - FAMILY
          - FITNESS
          - FUEL
          - GAMBLING
          - GAMING
          - GARDEN
          - GENERAL
          - GIFTS
          - GROCERIES
          - HOBBY
          - HOLIDAYS
          - HOME
          - IMPULSE_BUY
          - INCOME
          - INSURANCE
          - INVESTMENTS
          - LIFESTYLE
          - MAINTENANCE_AND_REPAIRS
          - MEDICAL
          - MORTGAGE
          - NON_ESSENTIAL_SPEND
          - PAYMENTS
          - PERSONAL_TRANSFERS
          - PETS
          - PROJECTS
          - RELATIONSHIPS
          - RENT
          - SAVING
          - SHOPPING
          - SUBSCRIPTIONS
          - TAKEAWAY
          - TAXI
          - TRANSPORT
          - TREATS
          - WEDDING
          - WELLBEING
          - NONE
          - REVENUE
          - OTHER_INCOME
          - CLIENT_REFUNDS
          - INVENTORY
          - STAFF
          - TRAVEL
          - WORKPLACE
          - REPAIRS_AND_MAINTENANCE
          - ADMIN
          - MARKETING
          - BUSINESS_ENTERTAINMENT
          - INTEREST_PAYMENTS
          - BANK_CHARGES
          - OTHER
          - FOOD_AND_DRINK
          - EQUIPMENT
          - PROFESSIONAL_SERVICES
          - PHONE_AND_INTERNET
          - VEHICLES
          - DIRECTORS_WAGES
          - VAT
          - CORPORATION_TAX
          - SELF_ASSESSMENT_TAX
          - INVESTMENT_CAPITAL
          - TRANSFERS
          - LOAN_PRINCIPAL
          - PERSONAL
          - DIVIDENDS
        paymentAmount:
          $ref: '#/components/schemas/CurrencyAndAmount'
      description: A sent payment
    Payments:
      type: object
      properties:
        payments:
          type: array
          items:
            $ref: '#/components/schemas/PayeePayment'
      description: List of payments
    ConsentInformation:
      type: object
      description: Denotes whether a request has been paused in order for the user
        to approve it.
    SavingsGoalTransferResponseV2:
      required:
      - transferUid
      type: object
      properties:
        transferUid:
          type: string
          description: Unique identifier for the transfer
          format: uuid
          example: 88998899-8899-8899-8899-889988998899
        success:
          type: boolean
          description: True if the method completed successfully
          example: true
      description: Response after attempting to make an immediate or recurring transfer
        into/out of a savings goal.
    TopUpRequestV2:
      required:
      - amount
      type: object
      properties:
        amount:
          $ref: '#/components/schemas/CurrencyAndAmount'
      description: Request to make an immediate transfer into a savings goal
    RecurrenceRuleV2:
      required:
      - frequency
      - startDate
      type: object
      properties:
        startDate:
          type: string
          format: date
          example: 2023-04-05
        frequency:
          type: string
          enum:
          - DAILY
          - WEEKLY
          - MONTHLY
          - YEARLY
        interval:
          type: integer
          format: int32
          nullable: true
          example: 2
        count:
          type: integer
          format: int32
          nullable: true
          example: 10
        untilDate:
          type: string
          format: date
          example: 2023-04-05
        days:
          type: array
          nullable: true
          items:
            type: string
            nullable: true
            enum:
            - MONDAY
            - TUESDAY
            - WEDNESDAY
            - THURSDAY
            - FRIDAY
            - SATURDAY
            - SUNDAY
      description: The schedule definition
    ScheduledSavingsPaymentRequestV2:
      required:
      - amount
      - recurrenceRule
      type: object
      properties:
        recurrenceRule:
          $ref: '#/components/schemas/RecurrenceRuleV2'
        amount:
          $ref: '#/components/schemas/CurrencyAndAmount'
        topUp:
          type: boolean
          description: If the payment is a top up or not
      description: Request to create scheduled payment into a savings goal
    CreateOrUpdateSavingsGoalResponseV2:
      type: object
      properties:
        savingsGoalUid:
          type: string
          description: Unique identifier of the savings goal
          format: uuid
          example: 77887788-7788-7788-7788-778877887788
        success:
          type: boolean
          description: True if the method completed successfully
          example: true
      description: Response after attempting to create a savings goal
    SavingsGoalRequestV2:
      required:
      - currency
      - name
      type: object
      properties:
        name:
          maxLength: 255
          minLength: 1
          type: string
          description: Name of the savings goal
          example: Trip to Paris
        currency:
          maxLength: 3
          minLength: 3
          type: string
          description: ISO-4217 3 character currency code of the savings goal
          example: GBP
        target:
          $ref: '#/components/schemas/CurrencyAndAmount'
        base64EncodedPhoto:
          type: string
          description: A text (base 64) encoded picture to associate with the savings
            goal
      description: Request to create a new savings goal
    ScheduledSavingsPaymentV2:
      required:
      - currencyAndAmount
      - nextPaymentDate
      - recurrenceRule
      - transferUid
      type: object
      properties:
        transferUid:
          type: string
          description: Unique identifier of the transfer
          format: uuid
          example: 88998899-8899-8899-8899-889988998899
        recurrenceRule:
          $ref: '#/components/schemas/RecurrenceRuleV2'
        currencyAndAmount:
          $ref: '#/components/schemas/CurrencyAndAmount'
        nextPaymentDate:
          type: string
          description: The next date the payment will be made on
          format: date
          example: 2023-04-05
      description: A transfer into a savings goal that can happen once in the future
        or have multiple payments with same frequency
    SavingsGoalV2:
      type: object
      properties:
        savingsGoalUid:
          type: string
          description: Unique identifier of the savings goal
          format: uuid
          example: 77887788-7788-7788-7788-778877887788
        name:
          type: string
          description: Name of the savings goal
          example: Trip to Paris
        target:
          $ref: '#/components/schemas/CurrencyAndAmount'
        totalSaved:
          $ref: '#/components/schemas/CurrencyAndAmount'
        savedPercentage:
          type: integer
          description: Percentage of target currently deposited in the savings goal
          format: int32
          example: 100
      description: A goal defined by an account holder to hold savings
    SavingsGoalPhotoV2:
      required:
      - base64EncodedPhoto
      type: object
      properties:
        base64EncodedPhoto:
          type: string
          description: A text (base 64) encoded picture to associate with the savings
            goal
      description: A photo associated to a savings goal
    SavingsGoalsV2:
      required:
      - savingsGoalList
      type: object
      properties:
        savingsGoalList:
          type: array
          items:
            $ref: '#/components/schemas/SavingsGoalV2'
      description: A list containing all savings goals for account holder
    WithdrawalRequestV2:
      required:
      - amount
      type: object
      properties:
        amount:
          $ref: '#/components/schemas/CurrencyAndAmount'
      description: Request to withdraw money from a savings goal.
    SettleUpProfile:
      required:
      - settleUpLink
      - status
      type: object
      properties:
        status:
          type: string
          description: Status
          example: ACTIVE
          enum:
          - ACTIVE
          - INACTIVE
          - CLOSED
        starlingPayLink:
          type: string
          writeOnly: true
        settleUpLink:
          type: string
          description: Settle Up link
          example: https://settleup.starlingbank.com/amanda.hanks
    SpacePhoto:
      required:
      - base64EncodedPhoto
      type: object
      properties:
        base64EncodedPhoto:
          type: string
          description: A text (base 64) encoded picture to associate with the space
      description: A photo associated to a space
    SavingsGoalOrdered:
      type: object
      properties:
        savingsGoalUid:
          type: string
          description: Unique identifier of the savings goal
          format: uuid
          example: 77887788-7788-7788-7788-778877887788
        name:
          type: string
          description: Name of the savings goal
          example: Trip to Paris
        target:
          $ref: '#/components/schemas/CurrencyAndAmount'
        totalSaved:
          $ref: '#/components/schemas/CurrencyAndAmount'
        savedPercentage:
          type: integer
          description: Percentage of target currently deposited in the savings goal
          format: int32
          example: 100
        sortOrder:
          type: integer
          description: Sort Order
          format: int32
      description: A goal defined by an account holder to hold savings
    Spaces:
      required:
      - savingsGoals
      - spendingSpaces
      type: object
      properties:
        savingsGoals:
          type: array
          items:
            $ref: '#/components/schemas/SavingsGoalOrdered'
        spendingSpaces:
          type: array
          items:
            $ref: '#/components/schemas/SpendingSpace'
      description: A list containing all spaces for an account holder
    SpendingSpace:
      required:
      - balance
      - cardAssociationUid
      - name
      - spaceUid
      - spendingSpaceType
      type: object
      properties:
        uid:
          type: string
          format: uuid
          writeOnly: true
          example: aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa
        name:
          type: string
          description: Name of the space
          example: Shopping
        balance:
          $ref: '#/components/schemas/CurrencyAndAmount'
        cardAssociationUid:
          type: string
          description: Card Association Uid
          format: uuid
          example: aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa
        sortOrder:
          type: integer
          description: Sort Order
          format: int32
        spendingSpaceType:
          type: string
          description: Spending Space Type
          enum:
          - SHOPPING
          - CHILDCARE
          - HELPING_OUT
          - YOUNG_PERSON
          - EXPENSE
          - SPARE_CARD
          - CHILDCARE_V2
          - SHOPPING_V2
          - SPARE
        spaceUid:
          type: string
          description: SpendingSpaceUid
          format: uuid
          example: aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa
    SpendingSpaceDailyLimitUpdateRequest:
      required:
      - dailySpendingLimit
      - dailySpendingLimitNotificationAmount
      - dailySpendingLimitNotificationEnabled
      type: object
      properties:
        dailySpendingLimit:
          $ref: '#/components/schemas/Money'
        dailySpendingLimitNotificationAmount:
          $ref: '#/components/schemas/Money'
        dailySpendingLimitNotificationEnabled:
          type: boolean
      description: Request to update spending space daily limit
